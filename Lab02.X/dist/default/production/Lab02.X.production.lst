

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Aug 02 22:30:27 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.40
    57                           ; Generated 17/11/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F887 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  000E                     	;# 
   107  000F                     	;# 
   108  0010                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0014                     	;# 
   113  0015                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001B                     	;# 
   121  001B                     	;# 
   122  001C                     	;# 
   123  001D                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  0081                     	;# 
   127  0085                     	;# 
   128  0086                     	;# 
   129  0087                     	;# 
   130  0088                     	;# 
   131  0089                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  0105                     	;# 
   155  0107                     	;# 
   156  0108                     	;# 
   157  0109                     	;# 
   158  010C                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0185                     	;# 
   164  0187                     	;# 
   165  0188                     	;# 
   166  0189                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  008F                     	;# 
   214  0090                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  009F                     	;# 
   232  0105                     	;# 
   233  0107                     	;# 
   234  0108                     	;# 
   235  0109                     	;# 
   236  010C                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  0185                     	;# 
   242  0187                     	;# 
   243  0188                     	;# 
   244  0189                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  000E                     	;# 
   262  000E                     	;# 
   263  000F                     	;# 
   264  0010                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0013                     	;# 
   268  0014                     	;# 
   269  0015                     	;# 
   270  0015                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001B                     	;# 
   278  001C                     	;# 
   279  001D                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  0081                     	;# 
   283  0085                     	;# 
   284  0086                     	;# 
   285  0087                     	;# 
   286  0088                     	;# 
   287  0089                     	;# 
   288  008C                     	;# 
   289  008D                     	;# 
   290  008E                     	;# 
   291  008F                     	;# 
   292  0090                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0094                     	;# 
   299  0095                     	;# 
   300  0096                     	;# 
   301  0097                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009A                     	;# 
   305  009B                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  009F                     	;# 
   310  0105                     	;# 
   311  0107                     	;# 
   312  0108                     	;# 
   313  0109                     	;# 
   314  010C                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  010E                     	;# 
   318  010F                     	;# 
   319  0185                     	;# 
   320  0187                     	;# 
   321  0188                     	;# 
   322  0189                     	;# 
   323  018C                     	;# 
   324  018D                     	;# 
   325  0000                     	;# 
   326  0001                     	;# 
   327  0002                     	;# 
   328  0003                     	;# 
   329  0004                     	;# 
   330  0005                     	;# 
   331  0006                     	;# 
   332  0007                     	;# 
   333  0008                     	;# 
   334  0009                     	;# 
   335  000A                     	;# 
   336  000B                     	;# 
   337  000C                     	;# 
   338  000D                     	;# 
   339  000E                     	;# 
   340  000E                     	;# 
   341  000F                     	;# 
   342  0010                     	;# 
   343  0011                     	;# 
   344  0012                     	;# 
   345  0013                     	;# 
   346  0014                     	;# 
   347  0015                     	;# 
   348  0015                     	;# 
   349  0016                     	;# 
   350  0017                     	;# 
   351  0018                     	;# 
   352  0019                     	;# 
   353  001A                     	;# 
   354  001B                     	;# 
   355  001B                     	;# 
   356  001C                     	;# 
   357  001D                     	;# 
   358  001E                     	;# 
   359  001F                     	;# 
   360  0081                     	;# 
   361  0085                     	;# 
   362  0086                     	;# 
   363  0087                     	;# 
   364  0088                     	;# 
   365  0089                     	;# 
   366  008C                     	;# 
   367  008D                     	;# 
   368  008E                     	;# 
   369  008F                     	;# 
   370  0090                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0094                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0098                     	;# 
   381  0099                     	;# 
   382  009A                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  0105                     	;# 
   389  0107                     	;# 
   390  0108                     	;# 
   391  0109                     	;# 
   392  010C                     	;# 
   393  010C                     	;# 
   394  010D                     	;# 
   395  010E                     	;# 
   396  010F                     	;# 
   397  0185                     	;# 
   398  0187                     	;# 
   399  0188                     	;# 
   400  0189                     	;# 
   401  018C                     	;# 
   402  018D                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000D                     	;# 
   417  000E                     	;# 
   418  000E                     	;# 
   419  000F                     	;# 
   420  0010                     	;# 
   421  0011                     	;# 
   422  0012                     	;# 
   423  0013                     	;# 
   424  0014                     	;# 
   425  0015                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0017                     	;# 
   429  0018                     	;# 
   430  0019                     	;# 
   431  001A                     	;# 
   432  001B                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  001D                     	;# 
   436  001E                     	;# 
   437  001F                     	;# 
   438  0081                     	;# 
   439  0085                     	;# 
   440  0086                     	;# 
   441  0087                     	;# 
   442  0088                     	;# 
   443  0089                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  008F                     	;# 
   448  0090                     	;# 
   449  0091                     	;# 
   450  0092                     	;# 
   451  0093                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0094                     	;# 
   455  0095                     	;# 
   456  0096                     	;# 
   457  0097                     	;# 
   458  0098                     	;# 
   459  0099                     	;# 
   460  009A                     	;# 
   461  009B                     	;# 
   462  009C                     	;# 
   463  009D                     	;# 
   464  009E                     	;# 
   465  009F                     	;# 
   466  0105                     	;# 
   467  0107                     	;# 
   468  0108                     	;# 
   469  0109                     	;# 
   470  010C                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  010E                     	;# 
   474  010F                     	;# 
   475  0185                     	;# 
   476  0187                     	;# 
   477  0188                     	;# 
   478  0189                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  008F                     	;# 
   526  0090                     	;# 
   527  0091                     	;# 
   528  0092                     	;# 
   529  0093                     	;# 
   530  0093                     	;# 
   531  0093                     	;# 
   532  0094                     	;# 
   533  0095                     	;# 
   534  0096                     	;# 
   535  0097                     	;# 
   536  0098                     	;# 
   537  0099                     	;# 
   538  009A                     	;# 
   539  009B                     	;# 
   540  009C                     	;# 
   541  009D                     	;# 
   542  009E                     	;# 
   543  009F                     	;# 
   544  0105                     	;# 
   545  0107                     	;# 
   546  0108                     	;# 
   547  0109                     	;# 
   548  010C                     	;# 
   549  010C                     	;# 
   550  010D                     	;# 
   551  010E                     	;# 
   552  010F                     	;# 
   553  0185                     	;# 
   554  0187                     	;# 
   555  0188                     	;# 
   556  0189                     	;# 
   557  018C                     	;# 
   558  018D                     	;# 
   559                           
   560                           	psect	strings
   561  1000                     __pstrings:
   562  1000                     stringtab:
   563  1000                     __stringtab:
   564                           
   565                           ;	String table - string pointers are 1 byte each
   566  1000  1BFF               	btfsc	btemp+1,7
   567  1001  280A               	ljmp	stringcode
   568  1002  1383               	bcf	3,7
   569  1003  187F               	btfsc	btemp+1,0
   570  1004  1783               	bsf	3,7
   571  1005  0800               	movf	0,w
   572  1006  0A84               	incf	4,f
   573  1007  1903               	skipnz
   574  1008  0AFF               	incf	btemp+1,f
   575  1009  0008               	return
   576  100A                     stringcode:
   577  100A                     stringdir:
   578  100A  3010               	movlw	high stringdir
   579  100B  008A               	movwf	10
   580  100C  0804               	movf	4,w
   581  100D  0A84               	incf	4,f
   582  100E  0782               	addwf	2,f
   583  100F                     __stringbase:
   584  100F  3400               	retlw	0
   585  1010                     __end_of__stringtab:
   586  1010                     __powers_:
   587  1010  3400               	retlw	0
   588  1011  3400               	retlw	0
   589  1012  3480               	retlw	128
   590  1013  343F               	retlw	63
   591  1014  3400               	retlw	0
   592  1015  3400               	retlw	0
   593  1016  3420               	retlw	32
   594  1017  3441               	retlw	65
   595  1018  3400               	retlw	0
   596  1019  3400               	retlw	0
   597  101A  34C8               	retlw	200
   598  101B  3442               	retlw	66
   599  101C  3400               	retlw	0
   600  101D  3400               	retlw	0
   601  101E  347A               	retlw	122
   602  101F  3444               	retlw	68
   603  1020  3400               	retlw	0
   604  1021  3440               	retlw	64
   605  1022  341C               	retlw	28
   606  1023  3446               	retlw	70
   607  1024  3400               	retlw	0
   608  1025  3450               	retlw	80
   609  1026  34C3               	retlw	195
   610  1027  3447               	retlw	71
   611  1028  3400               	retlw	0
   612  1029  3424               	retlw	36
   613  102A  3474               	retlw	116
   614  102B  3449               	retlw	73
   615  102C  3480               	retlw	128
   616  102D  3496               	retlw	150
   617  102E  3418               	retlw	24
   618  102F  344B               	retlw	75
   619  1030  3420               	retlw	32
   620  1031  34BC               	retlw	188
   621  1032  34BE               	retlw	190
   622  1033  344C               	retlw	76
   623  1034  3428               	retlw	40
   624  1035  346B               	retlw	107
   625  1036  346E               	retlw	110
   626  1037  344E               	retlw	78
   627  1038  34F9               	retlw	249
   628  1039  3402               	retlw	2
   629  103A  3415               	retlw	21
   630  103B  3450               	retlw	80
   631  103C  34EC               	retlw	236
   632  103D  3478               	retlw	120
   633  103E  34AD               	retlw	173
   634  103F  3460               	retlw	96
   635  1040  34CA               	retlw	202
   636  1041  34F2               	retlw	242
   637  1042  3449               	retlw	73
   638  1043  3471               	retlw	113
   639  1044                     __end_of__powers_:
   640  1044                     __npowers_:
   641  1044  3400               	retlw	0
   642  1045  3400               	retlw	0
   643  1046  3480               	retlw	128
   644  1047  343F               	retlw	63
   645  1048  34CD               	retlw	205
   646  1049  34CC               	retlw	204
   647  104A  34CC               	retlw	204
   648  104B  343D               	retlw	61
   649  104C  340A               	retlw	10
   650  104D  34D7               	retlw	215
   651  104E  3423               	retlw	35
   652  104F  343C               	retlw	60
   653  1050  346F               	retlw	111
   654  1051  3412               	retlw	18
   655  1052  3483               	retlw	131
   656  1053  343A               	retlw	58
   657  1054  3417               	retlw	23
   658  1055  34B7               	retlw	183
   659  1056  34D1               	retlw	209
   660  1057  3438               	retlw	56
   661  1058  34AC               	retlw	172
   662  1059  34C5               	retlw	197
   663  105A  3427               	retlw	39
   664  105B  3437               	retlw	55
   665  105C  34BD               	retlw	189
   666  105D  3437               	retlw	55
   667  105E  3486               	retlw	134
   668  105F  3435               	retlw	53
   669  1060  3495               	retlw	149
   670  1061  34BF               	retlw	191
   671  1062  34D6               	retlw	214
   672  1063  3433               	retlw	51
   673  1064  3477               	retlw	119
   674  1065  34CC               	retlw	204
   675  1066  342B               	retlw	43
   676  1067  3432               	retlw	50
   677  1068  345F               	retlw	95
   678  1069  3470               	retlw	112
   679  106A  3489               	retlw	137
   680  106B  3430               	retlw	48
   681  106C  34FF               	retlw	255
   682  106D  34E6               	retlw	230
   683  106E  34DB               	retlw	219
   684  106F  342E               	retlw	46
   685  1070  3408               	retlw	8
   686  1071  34E5               	retlw	229
   687  1072  343C               	retlw	60
   688  1073  341E               	retlw	30
   689  1074  3460               	retlw	96
   690  1075  3442               	retlw	66
   691  1076  34A2               	retlw	162
   692  1077  340D               	retlw	13
   693  1078                     __end_of__npowers_:
   694  1078                     _dpowers:
   695  1078  3401               	retlw	1
   696  1079  3400               	retlw	0
   697  107A  3400               	retlw	0
   698  107B  3400               	retlw	0
   699  107C  340A               	retlw	10
   700  107D  3400               	retlw	0
   701  107E  3400               	retlw	0
   702  107F  3400               	retlw	0
   703  1080  3464               	retlw	100
   704  1081  3400               	retlw	0
   705  1082  3400               	retlw	0
   706  1083  3400               	retlw	0
   707  1084  34E8               	retlw	232
   708  1085  3403               	retlw	3
   709  1086  3400               	retlw	0
   710  1087  3400               	retlw	0
   711  1088  3410               	retlw	16
   712  1089  3427               	retlw	39
   713  108A  3400               	retlw	0
   714  108B  3400               	retlw	0
   715  108C  34A0               	retlw	160
   716  108D  3486               	retlw	134
   717  108E  3401               	retlw	1
   718  108F  3400               	retlw	0
   719  1090  3440               	retlw	64
   720  1091  3442               	retlw	66
   721  1092  340F               	retlw	15
   722  1093  3400               	retlw	0
   723  1094  3480               	retlw	128
   724  1095  3496               	retlw	150
   725  1096  3498               	retlw	152
   726  1097  3400               	retlw	0
   727  1098  3400               	retlw	0
   728  1099  34E1               	retlw	225
   729  109A  34F5               	retlw	245
   730  109B  3405               	retlw	5
   731  109C  3400               	retlw	0
   732  109D  34CA               	retlw	202
   733  109E  349A               	retlw	154
   734  109F  343B               	retlw	59
   735  10A0                     __end_of_dpowers:
   736  0001                     _TMR0	set	1
   737  0006                     _PORTBbits	set	6
   738  0009                     _PORTE	set	9
   739  0008                     _PORTD	set	8
   740  0007                     _PORTC	set	7
   741  0006                     _PORTB	set	6
   742  0005                     _PORTA	set	5
   743  000B                     _INTCONbits	set	11
   744  001E                     _ADRESH	set	30
   745  001F                     _ADCON0bits	set	31
   746  000C                     _PIR1bits	set	12
   747  0081                     _OPTION_REGbits	set	129
   748  008C                     _PIE1bits	set	140
   749  009F                     _ADCON1bits	set	159
   750  008F                     _OSCCONbits	set	143
   751  0089                     _TRISE	set	137
   752  0088                     _TRISD	set	136
   753  0087                     _TRISC	set	135
   754  0086                     _TRISB	set	134
   755  0085                     _TRISA	set	133
   756  0188                     _ANSEL	set	392
   757  0189                     _ANSELH	set	393
   758  10A0                     STR_4:
   759  10A0  3420               	retlw	32	;' '
   760  10A1  3425               	retlw	37	;'%'
   761  10A2  342E               	retlw	46	;'.'
   762  10A3  3432               	retlw	50	;'2'
   763  10A4  3466               	retlw	102	;'f'
   764  10A5  3456               	retlw	86	;'V'
   765  10A6  3400               	retlw	0
   766  10A7                     STR_1:
   767  10A7  3450               	retlw	80	;'P'
   768  10A8  3431               	retlw	49	;'1'
   769  10A9  343A               	retlw	58	;':'
   770  10AA  3400               	retlw	0
   771  10AB                     STR_3:
   772  10AB  3450               	retlw	80	;'P'
   773  10AC  3432               	retlw	50	;'2'
   774  10AD  343A               	retlw	58	;':'
   775  10AE  3400               	retlw	0
   776  10A1                     
   777                           	psect	cinit
   778  000F                     start_initialization:	
   779                           ; #config settings
   780                           
   781  000F                     __initialization:
   782                           
   783                           ; Clear objects allocated to COMMON
   784  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   785  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   786  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   787                           
   788                           ; Clear objects allocated to BANK0
   789  0012  1283               	bcf	3,5	;RP0=0, select bank0
   790  0013  1303               	bcf	3,6	;RP1=0, select bank0
   791  0014  01ED               	clrf	__pbssBANK0& (0+127)
   792                           
   793                           ; Clear objects allocated to BANK1
   794  0015  1383               	bcf	3,7	;select IRP bank0
   795  0016  30CF               	movlw	low __pbssBANK1
   796  0017  0084               	movwf	4
   797  0018  30E5               	movlw	low (__pbssBANK1+22)
   798  0019  160A  118A  20B0  120A  118A  	fcall	clear_ram0
   799  001E                     end_of_initialization:	
   800                           ;End of C runtime variable initialization code
   801                           
   802  001E                     __end_of__initialization:
   803  001E  0183               	clrf	3
   804  001F  120A  158A  2819   	ljmp	_main	;jump to C main() function
   805                           
   806                           	psect	bssCOMMON
   807  0078                     __pbssCOMMON:
   808  0078                     _counter_tmr0:
   809  0078                     	ds	1
   810  0079                     _centenas:
   811  0079                     	ds	1
   812  007A                     _decenas:
   813  007A                     	ds	1
   814                           
   815                           	psect	bssBANK0
   816  006D                     __pbssBANK0:
   817  006D                     _change_POT:
   818  006D                     	ds	1
   819                           
   820                           	psect	bssBANK1
   821  00CF                     __pbssBANK1:
   822  00CF                     _VOLTAJE_L02:
   823  00CF                     	ds	5
   824  00D4                     _VOTAJE_02:
   825  00D4                     	ds	4
   826  00D8                     _VOTAJE_01:
   827  00D8                     	ds	4
   828  00DC                     _counter_time:
   829  00DC                     	ds	1
   830  00DD                     _unidades:
   831  00DD                     	ds	1
   832  00DE                     _POT_02:
   833  00DE                     	ds	1
   834  00DF                     _POT_01:
   835  00DF                     	ds	1
   836  00E0                     _VOTAJE_L01:
   837  00E0                     	ds	5
   838                           
   839                           	psect	clrtext
   840  10B0                     clear_ram0:	
   841                           ;	Called with FSR containing the base address, and
   842                           ;	W with the last address+1
   843                           
   844  10B0  0064               	clrwdt	;clear the watchdog before getting into this loop
   845  10B1                     clrloop0:
   846  10B1  0180               	clrf	0	;clear RAM location pointed to by FSR
   847  10B2  0A84               	incf	4,f	;increment pointer
   848  10B3  0604               	xorwf	4,w	;XOR with final address
   849  10B4  1903               	btfsc	3,2	;have we reached the end yet?
   850  10B5  3400               	retlw	0	;all done for this memory range, return
   851  10B6  0604               	xorwf	4,w	;XOR again to restore value
   852  10B7  28B1               	goto	clrloop0	;do the next byte
   853                           
   854                           	psect	cstackBANK1
   855  00A0                     __pcstackBANK1:
   856  00A0                     ?___flsub:
   857  00A0                     ___flsub@a:	
   858                           ; 4 bytes @ 0x0
   859                           
   860                           
   861                           ; 4 bytes @ 0x0
   862  00A0                     	ds	4
   863  00A4                     ___flsub@b:
   864                           
   865                           ; 4 bytes @ 0x4
   866  00A4                     	ds	4
   867  00A8                     ?_sprintf:
   868  00A8                     sprintf@f:	
   869                           ; 2 bytes @ 0x8
   870                           
   871                           
   872                           ; 1 bytes @ 0x8
   873  00A8                     	ds	5
   874  00AD                     ??_sprintf:
   875                           
   876                           ; 1 bytes @ 0xD
   877  00AD                     	ds	5
   878  00B2                     _sprintf$1178:
   879                           
   880                           ; 4 bytes @ 0x12
   881  00B2                     	ds	4
   882  00B6                     sprintf@ap:
   883                           
   884                           ; 1 bytes @ 0x16
   885  00B6                     	ds	1
   886  00B7                     sprintf@flag:
   887                           
   888                           ; 2 bytes @ 0x17
   889  00B7                     	ds	2
   890  00B9                     sprintf@val:
   891                           
   892                           ; 4 bytes @ 0x19
   893  00B9                     	ds	4
   894  00BD                     sprintf@eexp:
   895                           
   896                           ; 2 bytes @ 0x1D
   897  00BD                     	ds	2
   898  00BF                     sprintf@tmpval:
   899                           
   900                           ; 4 bytes @ 0x1F
   901  00BF                     	ds	4
   902  00C3                     sprintf@sp:
   903                           
   904                           ; 1 bytes @ 0x23
   905  00C3                     	ds	1
   906  00C4                     sprintf@prec:
   907                           
   908                           ; 2 bytes @ 0x24
   909  00C4                     	ds	2
   910  00C6                     sprintf@fval:
   911                           
   912                           ; 4 bytes @ 0x26
   913  00C6                     	ds	4
   914  00CA                     sprintf@c:
   915                           
   916                           ; 1 bytes @ 0x2A
   917  00CA                     	ds	1
   918  00CB                     ??_main:
   919                           
   920                           ; 1 bytes @ 0x2B
   921  00CB                     	ds	4
   922                           
   923                           	psect	cstackCOMMON
   924  0070                     __pcstackCOMMON:
   925  0070                     ?_isdigit:
   926  0070                     ??_read_ADC:	
   927                           ; 1 bit 
   928                           
   929  0070                     ?_TMR0_CARGA:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ??_TMR0_CARGA:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?_initOsc:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     ?_TMR0_init:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0070                     ?_Lcd_Clear:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0070                     ?_Lcd_Init:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0070                     ?_isr:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0070                     ??_isr:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0070                     ?_setup:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0070                     ?_Lcd_Port:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0070                     ?_Lcd_Cmd:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0070                     ?_Lcd_Write_Char:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0070                     ?_read_ADC:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0070                     ?_main:	
   969                           ; 2 bytes @ 0x0
   970                           
   971                           
   972                           ; 2 bytes @ 0x0
   973  0070                     	ds	3
   974  0073                     ??_initOsc:
   975  0073                     ??_TMR0_init:	
   976                           ; 1 bytes @ 0x3
   977                           
   978  0073                     ?_initADC:	
   979                           ; 1 bytes @ 0x3
   980                           
   981  0073                     ?_adc_start:	
   982                           ; 1 bytes @ 0x3
   983                           
   984  0073                     ??_isdigit:	
   985                           ; 1 bytes @ 0x3
   986                           
   987  0073                     ??__tdiv_to_l_:	
   988                           ; 1 bytes @ 0x3
   989                           
   990  0073                     ??__div_to_l_:	
   991                           ; 1 bytes @ 0x3
   992                           
   993  0073                     ??_Lcd_Port:	
   994                           ; 1 bytes @ 0x3
   995                           
   996  0073                     ??___lldiv:	
   997                           ; 1 bytes @ 0x3
   998                           
   999  0073                     ??___fleq:	
  1000                           ; 1 bytes @ 0x3
  1001                           
  1002  0073                     ??___flge:	
  1003                           ; 1 bytes @ 0x3
  1004                           
  1005  0073                     ??___llmod:	
  1006                           ; 1 bytes @ 0x3
  1007                           
  1008  0073                     ?__Umul8_16:	
  1009                           ; 1 bytes @ 0x3
  1010                           
  1011  0073                     ?___wmul:	
  1012                           ; 2 bytes @ 0x3
  1013                           
  1014  0073                     ?___awmod:	
  1015                           ; 2 bytes @ 0x3
  1016                           
  1017  0073                     ?___lwmod:	
  1018                           ; 2 bytes @ 0x3
  1019                           
  1020  0073                     ?___flneg:	
  1021                           ; 2 bytes @ 0x3
  1022                           
  1023  0073                     ?___xxtofl:	
  1024                           ; 4 bytes @ 0x3
  1025                           
  1026  0073                     Lcd_Port@a:	
  1027                           ; 4 bytes @ 0x3
  1028                           
  1029  0073                     initADC@vref_plus:	
  1030                           ; 1 bytes @ 0x3
  1031                           
  1032  0073                     adc_start@channel_2:	
  1033                           ; 1 bytes @ 0x3
  1034                           
  1035  0073                     __Umul8_16@multiplicand:	
  1036                           ; 1 bytes @ 0x3
  1037                           
  1038  0073                     _isdigit$989:	
  1039                           ; 1 bytes @ 0x3
  1040                           
  1041  0073                     ___wmul@multiplier:	
  1042                           ; 1 bytes @ 0x3
  1043                           
  1044  0073                     ___awmod@divisor:	
  1045                           ; 2 bytes @ 0x3
  1046                           
  1047  0073                     ___lwmod@divisor:	
  1048                           ; 2 bytes @ 0x3
  1049                           
  1050  0073                     ___flneg@f1:	
  1051                           ; 2 bytes @ 0x3
  1052                           
  1053  0073                     ___xxtofl@val:	
  1054                           ; 4 bytes @ 0x3
  1055                           
  1056                           
  1057                           ; 4 bytes @ 0x3
  1058  0073                     	ds	1
  1059  0074                     ??_adc_start:
  1060  0074                     ??_Lcd_Cmd:	
  1061                           ; 1 bytes @ 0x4
  1062                           
  1063  0074                     ??_Lcd_Write_Char:	
  1064                           ; 1 bytes @ 0x4
  1065                           
  1066  0074                     initADC@vref_min:	
  1067                           ; 1 bytes @ 0x4
  1068                           
  1069  0074                     ___llmod@counter:	
  1070                           ; 1 bytes @ 0x4
  1071                           
  1072  0074                     isdigit@c:	
  1073                           ; 1 bytes @ 0x4
  1074                           
  1075                           
  1076                           ; 1 bytes @ 0x4
  1077  0074                     	ds	1
  1078  0075                     ??_initADC:
  1079  0075                     ??__Umul8_16:	
  1080                           ; 1 bytes @ 0x5
  1081                           
  1082  0075                     initOsc@freq:	
  1083                           ; 1 bytes @ 0x5
  1084                           
  1085  0075                     adc_start@channel_1:	
  1086                           ; 1 bytes @ 0x5
  1087                           
  1088  0075                     TMR0_init@prescaler_VALUE:	
  1089                           ; 1 bytes @ 0x5
  1090                           
  1091  0075                     ___wmul@multiplicand:	
  1092                           ; 1 bytes @ 0x5
  1093                           
  1094  0075                     ___awmod@dividend:	
  1095                           ; 2 bytes @ 0x5
  1096                           
  1097  0075                     ___lwmod@dividend:	
  1098                           ; 2 bytes @ 0x5
  1099                           
  1100                           
  1101                           ; 2 bytes @ 0x5
  1102  0075                     	ds	1
  1103  0076                     Lcd_Cmd@a:
  1104  0076                     Lcd_Write_Char@a:	
  1105                           ; 1 bytes @ 0x6
  1106                           
  1107                           
  1108                           ; 1 bytes @ 0x6
  1109  0076                     	ds	1
  1110  0077                     ??_Lcd_Clear:
  1111  0077                     ?_Lcd_Set_Cursor:	
  1112                           ; 1 bytes @ 0x7
  1113                           
  1114  0077                     ??___wmul:	
  1115                           ; 1 bytes @ 0x7
  1116                           
  1117  0077                     ??___awmod:	
  1118                           ; 1 bytes @ 0x7
  1119                           
  1120  0077                     ??___flneg:	
  1121                           ; 1 bytes @ 0x7
  1122                           
  1123  0077                     ??___lwmod:	
  1124                           ; 1 bytes @ 0x7
  1125                           
  1126  0077                     Lcd_Set_Cursor@b:	
  1127                           ; 1 bytes @ 0x7
  1128                           
  1129  0077                     initADC@adc_cs:	
  1130                           ; 1 bytes @ 0x7
  1131                           
  1132                           
  1133                           ; 1 bytes @ 0x7
  1134  0077                     	ds	1
  1135  0078                     ??_setup:
  1136  0078                     ??___flsub:	
  1137                           ; 1 bytes @ 0x8
  1138                           
  1139                           
  1140                           	psect	cstackBANK0
  1141  0020                     __pcstackBANK0:	
  1142                           ; 1 bytes @ 0x8
  1143                           
  1144  0020                     ?___fleq:
  1145  0020                     ?___flge:	
  1146                           ; 1 bit 
  1147                           
  1148  0020                     ??_Lcd_Init:	
  1149                           ; 1 bit 
  1150                           
  1151  0020                     ??_Lcd_Set_Cursor:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0020                     ?_Lcd_Write_String:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0020                     ??___xxtofl:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0020                     ?__tdiv_to_l_:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0020                     ?__div_to_l_:	
  1164                           ; 4 bytes @ 0x0
  1165                           
  1166  0020                     ?___lldiv:	
  1167                           ; 4 bytes @ 0x0
  1168                           
  1169  0020                     ?___llmod:	
  1170                           ; 4 bytes @ 0x0
  1171                           
  1172  0020                     ___awmod@counter:	
  1173                           ; 4 bytes @ 0x0
  1174                           
  1175  0020                     ___lwmod@counter:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0020                     Lcd_Write_String@a:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0020                     ___wmul@product:	
  1182                           ; 2 bytes @ 0x0
  1183                           
  1184  0020                     __Umul8_16@product:	
  1185                           ; 2 bytes @ 0x0
  1186                           
  1187  0020                     ___lldiv@divisor:	
  1188                           ; 2 bytes @ 0x0
  1189                           
  1190  0020                     __div_to_l_@f1:	
  1191                           ; 4 bytes @ 0x0
  1192                           
  1193  0020                     ___fleq@ff1:	
  1194                           ; 4 bytes @ 0x0
  1195                           
  1196  0020                     ___flge@ff1:	
  1197                           ; 4 bytes @ 0x0
  1198                           
  1199  0020                     __tdiv_to_l_@f1:	
  1200                           ; 4 bytes @ 0x0
  1201                           
  1202  0020                     ___llmod@divisor:	
  1203                           ; 4 bytes @ 0x0
  1204                           
  1205                           
  1206                           ; 4 bytes @ 0x0
  1207  0020                     	ds	1
  1208  0021                     ?___lwdiv:
  1209  0021                     Lcd_Set_Cursor@a:	
  1210                           ; 2 bytes @ 0x1
  1211                           
  1212  0021                     ___awmod@sign:	
  1213                           ; 1 bytes @ 0x1
  1214                           
  1215  0021                     ___lwdiv@divisor:	
  1216                           ; 1 bytes @ 0x1
  1217                           
  1218                           
  1219                           ; 2 bytes @ 0x1
  1220  0021                     	ds	1
  1221  0022                     ??_Lcd_Write_String:
  1222  0022                     ?___awdiv:	
  1223                           ; 1 bytes @ 0x2
  1224                           
  1225  0022                     Lcd_Set_Cursor@c:	
  1226                           ; 2 bytes @ 0x2
  1227                           
  1228  0022                     ___awdiv@divisor:	
  1229                           ; 1 bytes @ 0x2
  1230                           
  1231  0022                     __Umul8_16@word_mpld:	
  1232                           ; 2 bytes @ 0x2
  1233                           
  1234                           
  1235                           ; 2 bytes @ 0x2
  1236  0022                     	ds	1
  1237  0023                     ___lwdiv@dividend:
  1238                           
  1239                           ; 2 bytes @ 0x3
  1240  0023                     	ds	1
  1241  0024                     __Umul8_16@multiplier:
  1242  0024                     ___xxtofl@sign:	
  1243                           ; 1 bytes @ 0x4
  1244                           
  1245  0024                     ___awdiv@dividend:	
  1246                           ; 1 bytes @ 0x4
  1247                           
  1248  0024                     ___lldiv@dividend:	
  1249                           ; 2 bytes @ 0x4
  1250                           
  1251  0024                     __div_to_l_@f2:	
  1252                           ; 4 bytes @ 0x4
  1253                           
  1254  0024                     ___fleq@ff2:	
  1255                           ; 4 bytes @ 0x4
  1256                           
  1257  0024                     ___flge@ff2:	
  1258                           ; 4 bytes @ 0x4
  1259                           
  1260  0024                     __tdiv_to_l_@f2:	
  1261                           ; 4 bytes @ 0x4
  1262                           
  1263  0024                     ___llmod@dividend:	
  1264                           ; 4 bytes @ 0x4
  1265                           
  1266                           
  1267                           ; 4 bytes @ 0x4
  1268  0024                     	ds	1
  1269  0025                     ??___lwdiv:
  1270  0025                     ___xxtofl@exp:	
  1271                           ; 1 bytes @ 0x5
  1272                           
  1273  0025                     Lcd_Write_String@i:	
  1274                           ; 1 bytes @ 0x5
  1275                           
  1276                           
  1277                           ; 2 bytes @ 0x5
  1278  0025                     	ds	1
  1279  0026                     ??___awdiv:
  1280  0026                     ___lwdiv@counter:	
  1281                           ; 1 bytes @ 0x6
  1282                           
  1283  0026                     ___xxtofl@arg:	
  1284                           ; 1 bytes @ 0x6
  1285                           
  1286                           
  1287                           ; 4 bytes @ 0x6
  1288  0026                     	ds	1
  1289  0027                     ___awdiv@counter:
  1290  0027                     ___lwdiv@quotient:	
  1291                           ; 1 bytes @ 0x7
  1292                           
  1293                           
  1294                           ; 2 bytes @ 0x7
  1295  0027                     	ds	1
  1296  0028                     ___awdiv@sign:
  1297  0028                     ___lldiv@quotient:	
  1298                           ; 1 bytes @ 0x8
  1299                           
  1300  0028                     __div_to_l_@quot:	
  1301                           ; 4 bytes @ 0x8
  1302                           
  1303  0028                     __tdiv_to_l_@quot:	
  1304                           ; 4 bytes @ 0x8
  1305                           
  1306                           
  1307                           ; 4 bytes @ 0x8
  1308  0028                     	ds	1
  1309  0029                     ___awdiv@quotient:
  1310                           
  1311                           ; 2 bytes @ 0x9
  1312  0029                     	ds	2
  1313  002B                     ?___flmul:
  1314  002B                     ___flmul@b:	
  1315                           ; 4 bytes @ 0xB
  1316                           
  1317                           
  1318                           ; 4 bytes @ 0xB
  1319  002B                     	ds	1
  1320  002C                     ___lldiv@counter:
  1321  002C                     __div_to_l_@cntr:	
  1322                           ; 1 bytes @ 0xC
  1323                           
  1324  002C                     __tdiv_to_l_@cntr:	
  1325                           ; 1 bytes @ 0xC
  1326                           
  1327                           
  1328                           ; 1 bytes @ 0xC
  1329  002C                     	ds	1
  1330  002D                     __div_to_l_@exp1:
  1331  002D                     __tdiv_to_l_@exp1:	
  1332                           ; 1 bytes @ 0xD
  1333                           
  1334                           
  1335                           ; 1 bytes @ 0xD
  1336  002D                     	ds	2
  1337  002F                     ___flmul@a:
  1338                           
  1339                           ; 4 bytes @ 0xF
  1340  002F                     	ds	4
  1341  0033                     ??___flmul:
  1342                           
  1343                           ; 1 bytes @ 0x13
  1344  0033                     	ds	5
  1345  0038                     ___flmul@sign:
  1346                           
  1347                           ; 1 bytes @ 0x18
  1348  0038                     	ds	1
  1349  0039                     ___flmul@grs:
  1350                           
  1351                           ; 4 bytes @ 0x19
  1352  0039                     	ds	4
  1353  003D                     ___flmul@aexp:
  1354                           
  1355                           ; 1 bytes @ 0x1D
  1356  003D                     	ds	1
  1357  003E                     ___flmul@bexp:
  1358                           
  1359                           ; 1 bytes @ 0x1E
  1360  003E                     	ds	1
  1361  003F                     ___flmul@prod:
  1362                           
  1363                           ; 4 bytes @ 0x1F
  1364  003F                     	ds	4
  1365  0043                     ___flmul@temp:
  1366                           
  1367                           ; 2 bytes @ 0x23
  1368  0043                     	ds	2
  1369  0045                     ?_fround:
  1370  0045                     ?_scale:	
  1371                           ; 4 bytes @ 0x25
  1372                           
  1373                           
  1374                           ; 4 bytes @ 0x25
  1375  0045                     	ds	4
  1376  0049                     ??_fround:
  1377  0049                     ??_scale:	
  1378                           ; 1 bytes @ 0x29
  1379                           
  1380                           
  1381                           ; 1 bytes @ 0x29
  1382  0049                     	ds	7
  1383  0050                     _fround$1176:
  1384                           
  1385                           ; 4 bytes @ 0x30
  1386  0050                     	ds	3
  1387  0053                     _scale$1177:
  1388                           
  1389                           ; 4 bytes @ 0x33
  1390  0053                     	ds	1
  1391  0054                     _fround$1175:
  1392                           
  1393                           ; 4 bytes @ 0x34
  1394  0054                     	ds	3
  1395  0057                     scale@scl:
  1396                           
  1397                           ; 1 bytes @ 0x37
  1398  0057                     	ds	1
  1399  0058                     ?___fltol:
  1400  0058                     fround@prec:	
  1401                           ; 4 bytes @ 0x38
  1402                           
  1403  0058                     ___fltol@f1:	
  1404                           ; 1 bytes @ 0x38
  1405                           
  1406                           
  1407                           ; 4 bytes @ 0x38
  1408  0058                     	ds	1
  1409  0059                     ?___fladd:
  1410  0059                     ___fladd@b:	
  1411                           ; 4 bytes @ 0x39
  1412                           
  1413                           
  1414                           ; 4 bytes @ 0x39
  1415  0059                     	ds	3
  1416  005C                     ??___fltol:
  1417                           
  1418                           ; 1 bytes @ 0x3C
  1419  005C                     	ds	1
  1420  005D                     ___fladd@a:
  1421                           
  1422                           ; 4 bytes @ 0x3D
  1423  005D                     	ds	4
  1424  0061                     ??___fladd:
  1425  0061                     ___fltol@sign1:	
  1426                           ; 1 bytes @ 0x41
  1427                           
  1428                           
  1429                           ; 1 bytes @ 0x41
  1430  0061                     	ds	1
  1431  0062                     ___fltol@exp1:
  1432                           
  1433                           ; 1 bytes @ 0x42
  1434  0062                     	ds	7
  1435  0069                     ___fladd@signs:
  1436                           
  1437                           ; 1 bytes @ 0x49
  1438  0069                     	ds	1
  1439  006A                     ___fladd@aexp:
  1440                           
  1441                           ; 1 bytes @ 0x4A
  1442  006A                     	ds	1
  1443  006B                     ___fladd@bexp:
  1444                           
  1445                           ; 1 bytes @ 0x4B
  1446  006B                     	ds	1
  1447  006C                     ___fladd@grs:
  1448                           
  1449                           ; 1 bytes @ 0x4C
  1450  006C                     	ds	1
  1451                           
  1452                           	psect	maintext
  1453  0819                     __pmaintext:	
  1454 ;;
  1455 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1456 ;;
  1457 ;; *************** function _main *****************
  1458 ;; Defined at:
  1459 ;;		line 157 in file "Lab02.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  2  100[None  ] int 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : B00/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1473 ;;      Params:         0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0
  1475 ;;      Temps:          0       0       4       0       0
  1476 ;;      Totals:         0       0       4       0       0
  1477 ;;Total ram usage:        4 bytes
  1478 ;; Hardware stack levels required when called: 6
  1479 ;; This function calls:
  1480 ;;		_Lcd_Clear
  1481 ;;		_Lcd_Init
  1482 ;;		_Lcd_Set_Cursor
  1483 ;;		_Lcd_Write_String
  1484 ;;		___flmul
  1485 ;;		___xxtofl
  1486 ;;		_adc_start
  1487 ;;		_setup
  1488 ;;		_sprintf
  1489 ;; This function is called by:
  1490 ;;		Startup code after reset
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494  0819                     _main:	
  1495                           ;psect for function _main
  1496                           
  1497  0819                     l4410:	
  1498                           ;incstack = 0
  1499                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1500                           
  1501                           
  1502                           ;Lab02.c: 160:         }
  1503  0819  160A  158A  22C0  120A  158A  	fcall	_setup
  1504  081E                     l4412:
  1505                           
  1506                           ;Lab02.c: 162:     return(1);
  1507  081E  160A  158A  2230  120A  158A  	fcall	_Lcd_Clear
  1508  0823                     l4414:
  1509  0823  160A  158A  2695  120A  158A  	fcall	_Lcd_Init
  1510  0828                     l4416:
  1511  0828  01F3               	clrf	adc_start@channel_2
  1512  0829  0AF3               	incf	adc_start@channel_2,f
  1513  082A  3000               	movlw	0
  1514  082B  160A  158A  238E  120A  158A  	fcall	_adc_start
  1515  0830                     l4418:
  1516  0830  303C               	movlw	60
  1517  0831  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0832  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0833  00AE               	movwf	___flmul@b+3
  1520  0834  30A0               	movlw	160
  1521  0835  00AD               	movwf	___flmul@b+2
  1522  0836  30A5               	movlw	165
  1523  0837  00AC               	movwf	___flmul@b+1
  1524  0838  3027               	movlw	39
  1525  0839  00AB               	movwf	___flmul@b
  1526  083A  1683               	bsf	3,5	;RP0=1, select bank1
  1527  083B  1303               	bcf	3,6	;RP1=0, select bank1
  1528  083C  085F               	movf	_POT_01^(0+128),w
  1529  083D  00CB               	movwf	??_main^(0+128)
  1530  083E  01CC               	clrf	(??_main^(0+128)+1)
  1531  083F  01CD               	clrf	(??_main^(0+128)+2)
  1532  0840  01CE               	clrf	(??_main^(0+128)+3)
  1533  0841  084E               	movf	(??_main+3)^(0+128),w
  1534  0842  00F6               	movwf	___xxtofl@val+3
  1535  0843  084D               	movf	(??_main+2)^(0+128),w
  1536  0844  00F5               	movwf	___xxtofl@val+2
  1537  0845  084C               	movf	(??_main+1)^(0+128),w
  1538  0846  00F4               	movwf	___xxtofl@val+1
  1539  0847  084B               	movf	??_main^(0+128),w
  1540  0848  00F3               	movwf	___xxtofl@val
  1541  0849  3001               	movlw	1
  1542  084A  160A  118A  2134  120A  158A  	fcall	___xxtofl
  1543  084F  0876               	movf	?___xxtofl+3,w
  1544  0850  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0851  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0852  00B2               	movwf	___flmul@a+3
  1547  0853  0875               	movf	?___xxtofl+2,w
  1548  0854  00B1               	movwf	___flmul@a+2
  1549  0855  0874               	movf	?___xxtofl+1,w
  1550  0856  00B0               	movwf	___flmul@a+1
  1551  0857  0873               	movf	?___xxtofl,w
  1552  0858  00AF               	movwf	___flmul@a
  1553  0859  120A  158A  213C  120A  158A  	fcall	___flmul
  1554  085E  1283               	bcf	3,5	;RP0=0, select bank0
  1555  085F  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0860  082E               	movf	?___flmul+3,w
  1557  0861  1683               	bsf	3,5	;RP0=1, select bank1
  1558  0862  1303               	bcf	3,6	;RP1=0, select bank1
  1559  0863  00DB               	movwf	(_VOTAJE_01+3)^(0+128)
  1560  0864  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0865  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0866  082D               	movf	?___flmul+2,w
  1563  0867  1683               	bsf	3,5	;RP0=1, select bank1
  1564  0868  1303               	bcf	3,6	;RP1=0, select bank1
  1565  0869  00DA               	movwf	(_VOTAJE_01+2)^(0+128)
  1566  086A  1283               	bcf	3,5	;RP0=0, select bank0
  1567  086B  1303               	bcf	3,6	;RP1=0, select bank0
  1568  086C  082C               	movf	?___flmul+1,w
  1569  086D  1683               	bsf	3,5	;RP0=1, select bank1
  1570  086E  1303               	bcf	3,6	;RP1=0, select bank1
  1571  086F  00D9               	movwf	(_VOTAJE_01+1)^(0+128)
  1572  0870  1283               	bcf	3,5	;RP0=0, select bank0
  1573  0871  1303               	bcf	3,6	;RP1=0, select bank0
  1574  0872  082B               	movf	?___flmul,w
  1575  0873  1683               	bsf	3,5	;RP0=1, select bank1
  1576  0874  1303               	bcf	3,6	;RP1=0, select bank1
  1577  0875  00D8               	movwf	_VOTAJE_01^(0+128)
  1578  0876                     l4420:
  1579  0876  303C               	movlw	60
  1580  0877  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0878  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0879  00AE               	movwf	___flmul@b+3
  1583  087A  30A0               	movlw	160
  1584  087B  00AD               	movwf	___flmul@b+2
  1585  087C  30A5               	movlw	165
  1586  087D  00AC               	movwf	___flmul@b+1
  1587  087E  3027               	movlw	39
  1588  087F  00AB               	movwf	___flmul@b
  1589  0880  1683               	bsf	3,5	;RP0=1, select bank1
  1590  0881  1303               	bcf	3,6	;RP1=0, select bank1
  1591  0882  085E               	movf	_POT_02^(0+128),w
  1592  0883  00CB               	movwf	??_main^(0+128)
  1593  0884  01CC               	clrf	(??_main^(0+128)+1)
  1594  0885  01CD               	clrf	(??_main^(0+128)+2)
  1595  0886  01CE               	clrf	(??_main^(0+128)+3)
  1596  0887  084E               	movf	(??_main+3)^(0+128),w
  1597  0888  00F6               	movwf	___xxtofl@val+3
  1598  0889  084D               	movf	(??_main+2)^(0+128),w
  1599  088A  00F5               	movwf	___xxtofl@val+2
  1600  088B  084C               	movf	(??_main+1)^(0+128),w
  1601  088C  00F4               	movwf	___xxtofl@val+1
  1602  088D  084B               	movf	??_main^(0+128),w
  1603  088E  00F3               	movwf	___xxtofl@val
  1604  088F  3001               	movlw	1
  1605  0890  160A  118A  2134  120A  158A  	fcall	___xxtofl
  1606  0895  0876               	movf	?___xxtofl+3,w
  1607  0896  1283               	bcf	3,5	;RP0=0, select bank0
  1608  0897  1303               	bcf	3,6	;RP1=0, select bank0
  1609  0898  00B2               	movwf	___flmul@a+3
  1610  0899  0875               	movf	?___xxtofl+2,w
  1611  089A  00B1               	movwf	___flmul@a+2
  1612  089B  0874               	movf	?___xxtofl+1,w
  1613  089C  00B0               	movwf	___flmul@a+1
  1614  089D  0873               	movf	?___xxtofl,w
  1615  089E  00AF               	movwf	___flmul@a
  1616  089F  120A  158A  213C  120A  158A  	fcall	___flmul
  1617  08A4  1283               	bcf	3,5	;RP0=0, select bank0
  1618  08A5  1303               	bcf	3,6	;RP1=0, select bank0
  1619  08A6  082E               	movf	?___flmul+3,w
  1620  08A7  1683               	bsf	3,5	;RP0=1, select bank1
  1621  08A8  1303               	bcf	3,6	;RP1=0, select bank1
  1622  08A9  00D7               	movwf	(_VOTAJE_02+3)^(0+128)
  1623  08AA  1283               	bcf	3,5	;RP0=0, select bank0
  1624  08AB  1303               	bcf	3,6	;RP1=0, select bank0
  1625  08AC  082D               	movf	?___flmul+2,w
  1626  08AD  1683               	bsf	3,5	;RP0=1, select bank1
  1627  08AE  1303               	bcf	3,6	;RP1=0, select bank1
  1628  08AF  00D6               	movwf	(_VOTAJE_02+2)^(0+128)
  1629  08B0  1283               	bcf	3,5	;RP0=0, select bank0
  1630  08B1  1303               	bcf	3,6	;RP1=0, select bank0
  1631  08B2  082C               	movf	?___flmul+1,w
  1632  08B3  1683               	bsf	3,5	;RP0=1, select bank1
  1633  08B4  1303               	bcf	3,6	;RP1=0, select bank1
  1634  08B5  00D5               	movwf	(_VOTAJE_02+1)^(0+128)
  1635  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  1636  08B7  1303               	bcf	3,6	;RP1=0, select bank0
  1637  08B8  082B               	movf	?___flmul,w
  1638  08B9  1683               	bsf	3,5	;RP0=1, select bank1
  1639  08BA  1303               	bcf	3,6	;RP1=0, select bank1
  1640  08BB  00D4               	movwf	_VOTAJE_02^(0+128)
  1641  08BC                     l4422:
  1642  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  1643  08BD  1303               	bcf	3,6	;RP1=0, select bank0
  1644  08BE  086D               	movf	_change_POT,w
  1645  08BF  1D03               	btfss	3,2
  1646  08C0  28C2               	goto	u7131
  1647  08C1  28C3               	goto	u7130
  1648  08C2                     u7131:
  1649  08C2  28FE               	goto	l4430
  1650  08C3                     u7130:
  1651  08C3                     l4424:
  1652  08C3  01F7               	clrf	Lcd_Set_Cursor@b
  1653  08C4  0AF7               	incf	Lcd_Set_Cursor@b,f
  1654  08C5  3001               	movlw	1
  1655  08C6  160A  158A  2271  120A  158A  	fcall	_Lcd_Set_Cursor
  1656  08CB                     l4426:
  1657  08CB  3098               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1658  08CC  1283               	bcf	3,5	;RP0=0, select bank0
  1659  08CD  1303               	bcf	3,6	;RP1=0, select bank0
  1660  08CE  00A0               	movwf	Lcd_Write_String@a
  1661  08CF  3080               	movlw	128
  1662  08D0  00A1               	movwf	Lcd_Write_String@a+1
  1663  08D1  160A  158A  23CF  120A  158A  	fcall	_Lcd_Write_String
  1664  08D6                     l4428:
  1665  08D6  01F7               	clrf	Lcd_Set_Cursor@b
  1666  08D7  0AF7               	incf	Lcd_Set_Cursor@b,f
  1667  08D8  3002               	movlw	2
  1668  08D9  160A  158A  2271  120A  158A  	fcall	_Lcd_Set_Cursor
  1669  08DE  3092               	movlw	(low (((STR_4+1)-__stringbase)| (0+32768)))& (0+255)
  1670  08DF  1683               	bsf	3,5	;RP0=1, select bank1
  1671  08E0  1303               	bcf	3,6	;RP1=0, select bank1
  1672  08E1  00CB               	movwf	??_main^(0+128)
  1673  08E2  084B               	movf	??_main^(0+128),w
  1674  08E3  00A8               	movwf	sprintf@f^(0+128)
  1675  08E4  085B               	movf	(_VOTAJE_01+3)^(0+128),w
  1676  08E5  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1677  08E6  085A               	movf	(_VOTAJE_01+2)^(0+128),w
  1678  08E7  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1679  08E8  0859               	movf	(_VOTAJE_01+1)^(0+128),w
  1680  08E9  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1681  08EA  0858               	movf	_VOTAJE_01^(0+128),w
  1682  08EB  00A9               	movwf	(?_sprintf^(0+128)+1)
  1683  08EC  30E0               	movlw	(low (_VOTAJE_L01| 0))& (0+255)
  1684  08ED  120A  118A  2022  120A  158A  	fcall	_sprintf
  1685  08F2  30E0               	movlw	(low (_VOTAJE_L01| 0))& (0+255)
  1686  08F3  1283               	bcf	3,5	;RP0=0, select bank0
  1687  08F4  1303               	bcf	3,6	;RP1=0, select bank0
  1688  08F5  00A0               	movwf	Lcd_Write_String@a
  1689  08F6  3000               	movlw	0
  1690  08F7  00A1               	movwf	Lcd_Write_String@a+1
  1691  08F8  160A  158A  23CF  120A  158A  	fcall	_Lcd_Write_String
  1692  08FD  2828               	goto	l4416
  1693  08FE                     l4430:
  1694  08FE  01F7               	clrf	Lcd_Set_Cursor@b
  1695  08FF  0AF7               	incf	Lcd_Set_Cursor@b,f
  1696  0900  3001               	movlw	1
  1697  0901  160A  158A  2271  120A  158A  	fcall	_Lcd_Set_Cursor
  1698  0906                     l4432:
  1699  0906  309C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1700  0907  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0908  1303               	bcf	3,6	;RP1=0, select bank0
  1702  0909  00A0               	movwf	Lcd_Write_String@a
  1703  090A  3080               	movlw	128
  1704  090B  00A1               	movwf	Lcd_Write_String@a+1
  1705  090C  160A  158A  23CF  120A  158A  	fcall	_Lcd_Write_String
  1706  0911                     l4434:
  1707  0911  01F7               	clrf	Lcd_Set_Cursor@b
  1708  0912  0AF7               	incf	Lcd_Set_Cursor@b,f
  1709  0913  3002               	movlw	2
  1710  0914  160A  158A  2271  120A  158A  	fcall	_Lcd_Set_Cursor
  1711  0919  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1712  091A  1683               	bsf	3,5	;RP0=1, select bank1
  1713  091B  1303               	bcf	3,6	;RP1=0, select bank1
  1714  091C  00CB               	movwf	??_main^(0+128)
  1715  091D  084B               	movf	??_main^(0+128),w
  1716  091E  00A8               	movwf	sprintf@f^(0+128)
  1717  091F  0857               	movf	(_VOTAJE_02+3)^(0+128),w
  1718  0920  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1719  0921  0856               	movf	(_VOTAJE_02+2)^(0+128),w
  1720  0922  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1721  0923  0855               	movf	(_VOTAJE_02+1)^(0+128),w
  1722  0924  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1723  0925  0854               	movf	_VOTAJE_02^(0+128),w
  1724  0926  00A9               	movwf	(?_sprintf^(0+128)+1)
  1725  0927  30E0               	movlw	(low (_VOTAJE_L01| 0))& (0+255)
  1726  0928  120A  118A  2022  120A  158A  	fcall	_sprintf
  1727  092D  30E0               	movlw	(low (_VOTAJE_L01| 0))& (0+255)
  1728  092E  1283               	bcf	3,5	;RP0=0, select bank0
  1729  092F  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0930  00A0               	movwf	Lcd_Write_String@a
  1731  0931  3000               	movlw	0
  1732  0932  00A1               	movwf	Lcd_Write_String@a+1
  1733  0933  160A  158A  23CF  120A  158A  	fcall	_Lcd_Write_String
  1734  0938  2828               	goto	l4416
  1735  0939  120A  118A  280C   	ljmp	start
  1736  093C                     __end_of_main:
  1737                           
  1738                           	psect	text1
  1739  0022                     __ptext1:	
  1740 ;; *************** function _sprintf *****************
  1741 ;; Defined at:
  1742 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  sp              1    wreg     PTR unsigned char 
  1745 ;;		 -> VOTAJE_L01(5), 
  1746 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1747 ;;		 -> STR_4(7), STR_2(6), 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  sp              1   35[BANK1 ] PTR unsigned char 
  1750 ;;		 -> VOTAJE_L01(5), 
  1751 ;;  fval            4   38[BANK1 ] PTR unsigned char 
  1752 ;;  tmpval          4   31[BANK1 ] struct .
  1753 ;;  val             4   25[BANK1 ] unsigned long 
  1754 ;;  prec            2   36[BANK1 ] int 
  1755 ;;  eexp            2   29[BANK1 ] int 
  1756 ;;  flag            2   23[BANK1 ] unsigned short 
  1757 ;;  cp              2    0        PTR const unsigned char 
  1758 ;;  len             2    0        unsigned int 
  1759 ;;  width           2    0        int 
  1760 ;;  c               1   42[BANK1 ] unsigned char 
  1761 ;;  ap              1   22[BANK1 ] PTR void [1]
  1762 ;;		 -> ?_sprintf(2), 
  1763 ;;  d               1    0        unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  2    8[BANK1 ] int 
  1766 ;; Registers used:
  1767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1773 ;;      Params:         0       0       5       0       0
  1774 ;;      Locals:         0       0      25       0       0
  1775 ;;      Temps:          0       0       5       0       0
  1776 ;;      Totals:         0       0      35       0       0
  1777 ;;Total ram usage:       35 bytes
  1778 ;; Hardware stack levels used: 1
  1779 ;; Hardware stack levels required when called: 5
  1780 ;; This function calls:
  1781 ;;		___awdiv
  1782 ;;		___fladd
  1783 ;;		___fleq
  1784 ;;		___flge
  1785 ;;		___flmul
  1786 ;;		___flneg
  1787 ;;		___flsub
  1788 ;;		___fltol
  1789 ;;		___lldiv
  1790 ;;		___llmod
  1791 ;;		___wmul
  1792 ;;		___xxtofl
  1793 ;;		__div_to_l_
  1794 ;;		__tdiv_to_l_
  1795 ;;		_fround
  1796 ;;		_isdigit
  1797 ;;		_scale
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803  0022                     _sprintf:	
  1804                           ;psect for function _sprintf
  1805                           
  1806                           
  1807                           ;incstack = 0
  1808                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1809                           ;sprintf@sp stored from wreg
  1810  0022  1683               	bsf	3,5	;RP0=1, select bank1
  1811  0023  1303               	bcf	3,6	;RP1=0, select bank1
  1812  0024  00C3               	movwf	sprintf@sp^(0+128)
  1813  0025                     l4200:
  1814                           
  1815                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1816  0025  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1817  0026  00AD               	movwf	??_sprintf^(0+128)
  1818  0027  082D               	movf	??_sprintf^(0+128),w
  1819  0028  00B6               	movwf	sprintf@ap^(0+128)
  1820                           
  1821                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1822  0029  2F75               	goto	l4394
  1823  002A                     l4202:
  1824                           
  1825                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1826  002A  3025               	movlw	37
  1827  002B  064A               	xorwf	sprintf@c^(0+128),w
  1828  002C  1903               	btfsc	3,2
  1829  002D  282F               	goto	u6781
  1830  002E  2830               	goto	u6780
  1831  002F                     u6781:
  1832  002F  283C               	goto	l4208
  1833  0030                     u6780:
  1834  0030                     l4204:
  1835                           
  1836                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1837  0030  084A               	movf	sprintf@c^(0+128),w
  1838  0031  00AD               	movwf	??_sprintf^(0+128)
  1839  0032  0843               	movf	sprintf@sp^(0+128),w
  1840  0033  0084               	movwf	4
  1841  0034  082D               	movf	??_sprintf^(0+128),w
  1842  0035  1383               	bcf	3,7	;select IRP bank0
  1843  0036  0080               	movwf	0
  1844  0037                     l4206:
  1845  0037  3001               	movlw	1
  1846  0038  00AD               	movwf	??_sprintf^(0+128)
  1847  0039  082D               	movf	??_sprintf^(0+128),w
  1848  003A  07C3               	addwf	sprintf@sp^(0+128),f
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  1851  003B  2F75               	goto	l4394
  1852  003C                     l4208:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1855  003C  01B7               	clrf	sprintf@flag^(0+128)
  1856  003D  01B8               	clrf	(sprintf@flag+1)^(0+128)
  1857  003E                     l4210:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1860  003E  0828               	movf	sprintf@f^(0+128),w
  1861  003F  0084               	movwf	4
  1862  0040  160A  118A  200A  120A  118A  	fcall	stringdir
  1863  0045  3A2E               	xorlw	46
  1864  0046  1D03               	skipz
  1865  0047  2849               	goto	u6791
  1866  0048  284A               	goto	u6790
  1867  0049                     u6791:
  1868  0049  288F               	goto	l4226
  1869  004A                     u6790:
  1870  004A                     l4212:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1873  004A  1738               	bsf	(sprintf@flag^(0+128)+1),6
  1874  004B                     l4214:
  1875                           
  1876                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 630:    f++;
  1877  004B  3001               	movlw	1
  1878  004C  00AD               	movwf	??_sprintf^(0+128)
  1879  004D  082D               	movf	??_sprintf^(0+128),w
  1880  004E  07A8               	addwf	sprintf@f^(0+128),f
  1881  004F                     l4216:
  1882                           
  1883                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1884  004F  01C4               	clrf	sprintf@prec^(0+128)
  1885  0050  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1888  0051  287E               	goto	l4224
  1889  0052                     l4218:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1892  0052  300A               	movlw	10
  1893  0053  00F3               	movwf	___wmul@multiplier
  1894  0054  3000               	movlw	0
  1895  0055  00F4               	movwf	___wmul@multiplier+1
  1896  0056  1683               	bsf	3,5	;RP0=1, select bank1
  1897  0057  1303               	bcf	3,6	;RP1=0, select bank1
  1898  0058  0845               	movf	(sprintf@prec+1)^(0+128),w
  1899  0059  00F6               	movwf	___wmul@multiplicand+1
  1900  005A  0844               	movf	sprintf@prec^(0+128),w
  1901  005B  00F5               	movwf	___wmul@multiplicand
  1902  005C  160A  158A  22EA  120A  118A  	fcall	___wmul
  1903  0061  0874               	movf	?___wmul+1,w
  1904  0062  1683               	bsf	3,5	;RP0=1, select bank1
  1905  0063  1303               	bcf	3,6	;RP1=0, select bank1
  1906  0064  00C5               	movwf	(sprintf@prec+1)^(0+128)
  1907  0065  0873               	movf	?___wmul,w
  1908  0066  00C4               	movwf	sprintf@prec^(0+128)
  1909  0067                     l4220:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1912  0067  0828               	movf	sprintf@f^(0+128),w
  1913  0068  0084               	movwf	4
  1914  0069  160A  118A  200A  120A  118A  	fcall	stringdir
  1915  006E  3ED0               	addlw	208
  1916  006F  00AD               	movwf	??_sprintf^(0+128)
  1917  0070  30FF               	movlw	255
  1918  0071  1803               	skipnc
  1919  0072  3000               	movlw	0
  1920  0073  00AE               	movwf	(??_sprintf^(0+128)+1)
  1921  0074  082D               	movf	??_sprintf^(0+128),w
  1922  0075  07C4               	addwf	sprintf@prec^(0+128),f
  1923  0076  1803               	skipnc
  1924  0077  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  1925  0078  082E               	movf	(??_sprintf+1)^(0+128),w
  1926  0079  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  1927  007A                     l4222:
  1928  007A  3001               	movlw	1
  1929  007B  00AD               	movwf	??_sprintf^(0+128)
  1930  007C  082D               	movf	??_sprintf^(0+128),w
  1931  007D  07A8               	addwf	sprintf@f^(0+128),f
  1932  007E                     l4224:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1935  007E  0828               	movf	sprintf@f^(0+128),w
  1936  007F  0084               	movwf	4
  1937  0080  160A  118A  200A  120A  118A  	fcall	stringdir
  1938  0085  120A  158A  2007  120A  118A  	fcall	_isdigit
  1939  008A  1803               	btfsc	3,0
  1940  008B  288D               	goto	u6801
  1941  008C  288E               	goto	u6800
  1942  008D                     u6801:
  1943  008D  2852               	goto	l4218
  1944  008E                     u6800:
  1945  008E  2895               	goto	l4232
  1946  008F                     l4226:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1949  008F  01C4               	clrf	sprintf@prec^(0+128)
  1950  0090  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1951  0091                     l4228:
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1954  0091  1638               	bsf	(sprintf@flag^(0+128)+1),4
  1955  0092  2895               	goto	l4232
  1956  0093                     l340:	
  1957                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1958                           
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1961  0093  1538               	bsf	(sprintf@flag^(0+128)+1),2
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 690:    break;
  1964  0094  28B1               	goto	l4234
  1965  0095                     l4232:
  1966  0095  3001               	movlw	1
  1967  0096  1683               	bsf	3,5	;RP0=1, select bank1
  1968  0097  1303               	bcf	3,6	;RP1=0, select bank1
  1969  0098  07A8               	addwf	sprintf@f^(0+128),f
  1970  0099  30FF               	movlw	-1
  1971  009A  0728               	addwf	sprintf@f^(0+128),w
  1972  009B  0084               	movwf	4
  1973  009C  160A  118A  200A  120A  118A  	fcall	stringdir
  1974  00A1  00CA               	movwf	sprintf@c^(0+128)
  1975  00A2  00AD               	movwf	??_sprintf^(0+128)
  1976  00A3  01AE               	clrf	(??_sprintf^(0+128)+1)
  1977                           
  1978                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1979                           ; Switch size 1, requested type "simple"
  1980                           ; Number of cases is 1, Range of values is 0 to 0
  1981                           ; switch strategies available:
  1982                           ; Name         Instructions Cycles
  1983                           ; simple_byte            4     3 (average)
  1984                           ; direct_byte           11     8 (fixed)
  1985                           ; jumptable            260     6 (fixed)
  1986                           ;	Chosen strategy is simple_byte
  1987  00A4  082E               	movf	(??_sprintf+1)^(0+128),w
  1988  00A5  3A00               	xorlw	0	; case 0
  1989  00A6  1903               	skipnz
  1990  00A7  28A9               	goto	l4530
  1991  00A8  2F75               	goto	l4394
  1992  00A9                     l4530:
  1993                           
  1994                           ; Switch size 1, requested type "simple"
  1995                           ; Number of cases is 2, Range of values is 0 to 102
  1996                           ; switch strategies available:
  1997                           ; Name         Instructions Cycles
  1998                           ; simple_byte            7     4 (average)
  1999                           ; jumptable            260     6 (fixed)
  2000                           ;	Chosen strategy is simple_byte
  2001  00A9  082D               	movf	??_sprintf^(0+128),w
  2002  00AA  3A00               	xorlw	0	; case 0
  2003  00AB  1903               	skipnz
  2004  00AC  2F87               	goto	l4396
  2005  00AD  3A66               	xorlw	102	; case 102
  2006  00AE  1903               	skipnz
  2007  00AF  2893               	goto	l340
  2008  00B0  2F75               	goto	l4394
  2009  00B1                     l4234:
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2012  00B1  3000               	movlw	0
  2013  00B2  0537               	andwf	sprintf@flag^(0+128),w
  2014  00B3  00AD               	movwf	??_sprintf^(0+128)
  2015  00B4  3007               	movlw	7
  2016  00B5  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2017  00B6  00AE               	movwf	(??_sprintf+1)^(0+128)
  2018  00B7  082D               	movf	??_sprintf^(0+128),w
  2019  00B8  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2020  00B9  1903               	btfsc	3,2
  2021  00BA  28BC               	goto	u6811
  2022  00BB  28BD               	goto	u6810
  2023  00BC                     u6811:
  2024  00BC  2F30               	goto	l4376
  2025  00BD                     u6810:
  2026  00BD                     l4236:
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2029  00BD  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  2030  00BE  28C0               	goto	u6821
  2031  00BF  28C1               	goto	u6820
  2032  00C0                     u6821:
  2033  00C0  28C5               	goto	l4240
  2034  00C1                     u6820:
  2035  00C1                     l4238:
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2038  00C1  3006               	movlw	6
  2039  00C2  00C4               	movwf	sprintf@prec^(0+128)
  2040  00C3  3000               	movlw	0
  2041  00C4  00C5               	movwf	(sprintf@prec^(0+128)+1)
  2042  00C5                     l4240:
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2045  00C5  0836               	movf	sprintf@ap^(0+128),w
  2046  00C6  0084               	movwf	4
  2047  00C7  1383               	bcf	3,7	;select IRP bank0
  2048  00C8  0800               	movf	0,w
  2049  00C9  00C6               	movwf	sprintf@fval^(0+128)
  2050  00CA  0A84               	incf	4,f
  2051  00CB  0800               	movf	0,w
  2052  00CC  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2053  00CD  0A84               	incf	4,f
  2054  00CE  0800               	movf	0,w
  2055  00CF  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2056  00D0  0A84               	incf	4,f
  2057  00D1  0800               	movf	0,w
  2058  00D2  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2059  00D3                     l4242:
  2060  00D3  3004               	movlw	4
  2061  00D4  00AD               	movwf	??_sprintf^(0+128)
  2062  00D5  082D               	movf	??_sprintf^(0+128),w
  2063  00D6  07B6               	addwf	sprintf@ap^(0+128),f
  2064  00D7                     l4244:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2067  00D7  0849               	movf	(sprintf@fval+3)^(0+128),w
  2068  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  2069  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  2070  00DA  00A3               	movwf	___flge@ff1+3
  2071  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  2072  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  2073  00DD  0848               	movf	(sprintf@fval+2)^(0+128),w
  2074  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  2075  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  2076  00E0  00A2               	movwf	___flge@ff1+2
  2077  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  2078  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  2079  00E3  0847               	movf	(sprintf@fval+1)^(0+128),w
  2080  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2081  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2082  00E6  00A1               	movwf	___flge@ff1+1
  2083  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  2084  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  2085  00E9  0846               	movf	sprintf@fval^(0+128),w
  2086  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  2087  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  2088  00EC  00A0               	movwf	___flge@ff1
  2089  00ED  3000               	movlw	0
  2090  00EE  00A7               	movwf	___flge@ff2+3
  2091  00EF  3000               	movlw	0
  2092  00F0  00A6               	movwf	___flge@ff2+2
  2093  00F1  3000               	movlw	0
  2094  00F2  00A5               	movwf	___flge@ff2+1
  2095  00F3  3000               	movlw	0
  2096  00F4  00A4               	movwf	___flge@ff2
  2097  00F5  160A  158A  275C  120A  118A  	fcall	___flge
  2098  00FA  1803               	btfsc	3,0
  2099  00FB  28FD               	goto	u6831
  2100  00FC  28FE               	goto	u6830
  2101  00FD                     u6831:
  2102  00FD  291B               	goto	l4250
  2103  00FE                     u6830:
  2104  00FE                     l4246:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2107  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  2108  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  2109  0100  0849               	movf	(sprintf@fval+3)^(0+128),w
  2110  0101  00F6               	movwf	___flneg@f1+3
  2111  0102  0848               	movf	(sprintf@fval+2)^(0+128),w
  2112  0103  00F5               	movwf	___flneg@f1+2
  2113  0104  0847               	movf	(sprintf@fval+1)^(0+128),w
  2114  0105  00F4               	movwf	___flneg@f1+1
  2115  0106  0846               	movf	sprintf@fval^(0+128),w
  2116  0107  00F3               	movwf	___flneg@f1
  2117  0108  120A  118A  27F5  120A  118A  	fcall	___flneg
  2118  010D  0876               	movf	?___flneg+3,w
  2119  010E  1683               	bsf	3,5	;RP0=1, select bank1
  2120  010F  1303               	bcf	3,6	;RP1=0, select bank1
  2121  0110  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2122  0111  0875               	movf	?___flneg+2,w
  2123  0112  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2124  0113  0874               	movf	?___flneg+1,w
  2125  0114  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2126  0115  0873               	movf	?___flneg,w
  2127  0116  00C6               	movwf	sprintf@fval^(0+128)
  2128  0117                     l4248:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2131  0117  3003               	movlw	3
  2132  0118  04B7               	iorwf	sprintf@flag^(0+128),f
  2133  0119  3000               	movlw	0
  2134  011A  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  2135  011B                     l4250:
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2138  011B  1683               	bsf	3,5	;RP0=1, select bank1
  2139  011C  1303               	bcf	3,6	;RP1=0, select bank1
  2140  011D  01BD               	clrf	sprintf@eexp^(0+128)
  2141  011E  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2142  011F                     l4252:
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2145  011F  0849               	movf	(sprintf@fval+3)^(0+128),w
  2146  0120  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0121  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0122  00A3               	movwf	___fleq@ff1+3
  2149  0123  1683               	bsf	3,5	;RP0=1, select bank1
  2150  0124  1303               	bcf	3,6	;RP1=0, select bank1
  2151  0125  0848               	movf	(sprintf@fval+2)^(0+128),w
  2152  0126  1283               	bcf	3,5	;RP0=0, select bank0
  2153  0127  1303               	bcf	3,6	;RP1=0, select bank0
  2154  0128  00A2               	movwf	___fleq@ff1+2
  2155  0129  1683               	bsf	3,5	;RP0=1, select bank1
  2156  012A  1303               	bcf	3,6	;RP1=0, select bank1
  2157  012B  0847               	movf	(sprintf@fval+1)^(0+128),w
  2158  012C  1283               	bcf	3,5	;RP0=0, select bank0
  2159  012D  1303               	bcf	3,6	;RP1=0, select bank0
  2160  012E  00A1               	movwf	___fleq@ff1+1
  2161  012F  1683               	bsf	3,5	;RP0=1, select bank1
  2162  0130  1303               	bcf	3,6	;RP1=0, select bank1
  2163  0131  0846               	movf	sprintf@fval^(0+128),w
  2164  0132  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0133  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0134  00A0               	movwf	___fleq@ff1
  2167  0135  3000               	movlw	0
  2168  0136  00A7               	movwf	___fleq@ff2+3
  2169  0137  3000               	movlw	0
  2170  0138  00A6               	movwf	___fleq@ff2+2
  2171  0139  3000               	movlw	0
  2172  013A  00A5               	movwf	___fleq@ff2+1
  2173  013B  3000               	movlw	0
  2174  013C  00A4               	movwf	___fleq@ff2
  2175  013D  160A  158A  24EE  120A  118A  	fcall	___fleq
  2176  0142  1803               	btfsc	3,0
  2177  0143  2945               	goto	u6841
  2178  0144  2946               	goto	u6840
  2179  0145                     u6841:
  2180  0145  2A62               	goto	l4278
  2181  0146                     u6840:
  2182  0146                     l4254:
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2185  0146  1003               	clrc
  2186  0147  1683               	bsf	3,5	;RP0=1, select bank1
  2187  0148  1303               	bcf	3,6	;RP1=0, select bank1
  2188  0149  0D48               	rlf	(sprintf@fval+2)^(0+128),w
  2189  014A  0D49               	rlf	(sprintf@fval+3)^(0+128),w
  2190  014B  3E82               	addlw	130
  2191  014C  00BD               	movwf	sprintf@eexp^(0+128)
  2192  014D  30FF               	movlw	255
  2193  014E  1803               	skipnc
  2194  014F  3000               	movlw	0
  2195  0150  00BE               	movwf	(sprintf@eexp^(0+128)+1)
  2196  0151                     l4256:
  2197                           
  2198                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2199  0151  30FF               	movlw	255
  2200  0152  07BD               	addwf	sprintf@eexp^(0+128),f
  2201  0153  1803               	skipnc
  2202  0154  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2203  0155  30FF               	movlw	255
  2204  0156  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2205  0157                     l4258:
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2208  0157  3003               	movlw	3
  2209  0158  00F3               	movwf	___wmul@multiplier
  2210  0159  3000               	movlw	0
  2211  015A  00F4               	movwf	___wmul@multiplier+1
  2212  015B  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2213  015C  00F6               	movwf	___wmul@multiplicand+1
  2214  015D  083D               	movf	sprintf@eexp^(0+128),w
  2215  015E  00F5               	movwf	___wmul@multiplicand
  2216  015F  160A  158A  22EA  120A  118A  	fcall	___wmul
  2217  0164  0874               	movf	?___wmul+1,w
  2218  0165  1683               	bsf	3,5	;RP0=1, select bank1
  2219  0166  1303               	bcf	3,6	;RP1=0, select bank1
  2220  0167  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2221  0168  0873               	movf	?___wmul,w
  2222  0169  00BD               	movwf	sprintf@eexp^(0+128)
  2223  016A                     l4260:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2226  016A  300A               	movlw	10
  2227  016B  1283               	bcf	3,5	;RP0=0, select bank0
  2228  016C  1303               	bcf	3,6	;RP1=0, select bank0
  2229  016D  00A2               	movwf	___awdiv@divisor
  2230  016E  3000               	movlw	0
  2231  016F  00A3               	movwf	___awdiv@divisor+1
  2232  0170  1683               	bsf	3,5	;RP0=1, select bank1
  2233  0171  1303               	bcf	3,6	;RP1=0, select bank1
  2234  0172  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2235  0173  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0174  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0175  00A5               	movwf	___awdiv@dividend+1
  2238  0176  1683               	bsf	3,5	;RP0=1, select bank1
  2239  0177  1303               	bcf	3,6	;RP1=0, select bank1
  2240  0178  083D               	movf	sprintf@eexp^(0+128),w
  2241  0179  1283               	bcf	3,5	;RP0=0, select bank0
  2242  017A  1303               	bcf	3,6	;RP1=0, select bank0
  2243  017B  00A4               	movwf	___awdiv@dividend
  2244  017C  120A  118A  278C  120A  118A  	fcall	___awdiv
  2245  0181  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0182  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0183  0823               	movf	?___awdiv+1,w
  2248  0184  1683               	bsf	3,5	;RP0=1, select bank1
  2249  0185  1303               	bcf	3,6	;RP1=0, select bank1
  2250  0186  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2251  0187  1283               	bcf	3,5	;RP0=0, select bank0
  2252  0188  1303               	bcf	3,6	;RP1=0, select bank0
  2253  0189  0822               	movf	?___awdiv,w
  2254  018A  1683               	bsf	3,5	;RP0=1, select bank1
  2255  018B  1303               	bcf	3,6	;RP1=0, select bank1
  2256  018C  00BD               	movwf	sprintf@eexp^(0+128)
  2257  018D                     l4262:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2260  018D  1FBE               	btfss	(sprintf@eexp+1)^(0+128),7
  2261  018E  2990               	goto	u6851
  2262  018F  2991               	goto	u6850
  2263  0190                     u6851:
  2264  0190  2997               	goto	l4266
  2265  0191                     u6850:
  2266  0191                     l4264:
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2269  0191  30FF               	movlw	255
  2270  0192  07BD               	addwf	sprintf@eexp^(0+128),f
  2271  0193  1803               	skipnc
  2272  0194  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2273  0195  30FF               	movlw	255
  2274  0196  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2275  0197                     l4266:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2278  0197  033D               	decf	sprintf@eexp^(0+128),w
  2279  0198  3AFF               	xorlw	255
  2280  0199  120A  158A  249D  120A  118A  	fcall	_scale
  2281  019E  1283               	bcf	3,5	;RP0=0, select bank0
  2282  019F  1303               	bcf	3,6	;RP1=0, select bank0
  2283  01A0  0848               	movf	?_scale+3,w
  2284  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  2285  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  2286  01A3  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2287  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2288  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2289  01A6  0847               	movf	?_scale+2,w
  2290  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  2291  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  2292  01A9  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2293  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2294  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2295  01AC  0846               	movf	?_scale+1,w
  2296  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2297  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  2298  01AF  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2299  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  2300  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  2301  01B2  0845               	movf	?_scale,w
  2302  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2303  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  2304  01B5  00BF               	movwf	sprintf@tmpval^(0+128)
  2305  01B6                     l4268:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2308  01B6  0849               	movf	(sprintf@fval+3)^(0+128),w
  2309  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  2310  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  2311  01B9  00AE               	movwf	___flmul@b+3
  2312  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  2313  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  2314  01BC  0848               	movf	(sprintf@fval+2)^(0+128),w
  2315  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2316  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2317  01BF  00AD               	movwf	___flmul@b+2
  2318  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  2319  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  2320  01C2  0847               	movf	(sprintf@fval+1)^(0+128),w
  2321  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2322  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2323  01C5  00AC               	movwf	___flmul@b+1
  2324  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  2325  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  2326  01C8  0846               	movf	sprintf@fval^(0+128),w
  2327  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2328  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2329  01CB  00AB               	movwf	___flmul@b
  2330  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  2331  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  2332  01CE  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2333  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2334  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2335  01D1  00B2               	movwf	___flmul@a+3
  2336  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2337  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2338  01D4  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2339  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2340  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2341  01D7  00B1               	movwf	___flmul@a+2
  2342  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2343  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2344  01DA  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2345  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2346  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2347  01DD  00B0               	movwf	___flmul@a+1
  2348  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  2349  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  2350  01E0  083F               	movf	sprintf@tmpval^(0+128),w
  2351  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2352  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  2353  01E3  00AF               	movwf	___flmul@a
  2354  01E4  120A  158A  213C  120A  118A  	fcall	___flmul
  2355  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2356  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2357  01EB  082E               	movf	?___flmul+3,w
  2358  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2359  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2360  01EE  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2361  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2362  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2363  01F1  082D               	movf	?___flmul+2,w
  2364  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  2365  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  2366  01F4  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2367  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2368  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2369  01F7  082C               	movf	?___flmul+1,w
  2370  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  2371  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  2372  01FA  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2373  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2374  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2375  01FD  082B               	movf	?___flmul,w
  2376  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  2377  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  2378  0200  00BF               	movwf	sprintf@tmpval^(0+128)
  2379  0201                     l4270:
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2382  0201  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2383  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0204  00A3               	movwf	___flge@ff1+3
  2386  0205  1683               	bsf	3,5	;RP0=1, select bank1
  2387  0206  1303               	bcf	3,6	;RP1=0, select bank1
  2388  0207  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2389  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2391  020A  00A2               	movwf	___flge@ff1+2
  2392  020B  1683               	bsf	3,5	;RP0=1, select bank1
  2393  020C  1303               	bcf	3,6	;RP1=0, select bank1
  2394  020D  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2395  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2396  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2397  0210  00A1               	movwf	___flge@ff1+1
  2398  0211  1683               	bsf	3,5	;RP0=1, select bank1
  2399  0212  1303               	bcf	3,6	;RP1=0, select bank1
  2400  0213  083F               	movf	sprintf@tmpval^(0+128),w
  2401  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2402  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2403  0216  00A0               	movwf	___flge@ff1
  2404  0217  303F               	movlw	63
  2405  0218  00A7               	movwf	___flge@ff2+3
  2406  0219  3080               	movlw	128
  2407  021A  00A6               	movwf	___flge@ff2+2
  2408  021B  3000               	movlw	0
  2409  021C  00A5               	movwf	___flge@ff2+1
  2410  021D  3000               	movlw	0
  2411  021E  00A4               	movwf	___flge@ff2
  2412  021F  160A  158A  275C  120A  118A  	fcall	___flge
  2413  0224  1803               	btfsc	3,0
  2414  0225  2A27               	goto	u6861
  2415  0226  2A28               	goto	u6860
  2416  0227                     u6861:
  2417  0227  2A31               	goto	l4274
  2418  0228                     u6860:
  2419  0228                     l4272:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2422  0228  30FF               	movlw	255
  2423  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2424  022A  1303               	bcf	3,6	;RP1=0, select bank1
  2425  022B  07BD               	addwf	sprintf@eexp^(0+128),f
  2426  022C  1803               	skipnc
  2427  022D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2428  022E  30FF               	movlw	255
  2429  022F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2430  0230  2A62               	goto	l4278
  2431  0231                     l4274:
  2432  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2433  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2434  0233  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2435  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2436  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2437  0236  00A3               	movwf	___flge@ff1+3
  2438  0237  1683               	bsf	3,5	;RP0=1, select bank1
  2439  0238  1303               	bcf	3,6	;RP1=0, select bank1
  2440  0239  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2441  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2442  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2443  023C  00A2               	movwf	___flge@ff1+2
  2444  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2445  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2446  023F  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2447  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0242  00A1               	movwf	___flge@ff1+1
  2450  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0245  083F               	movf	sprintf@tmpval^(0+128),w
  2453  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0248  00A0               	movwf	___flge@ff1
  2456  0249  3041               	movlw	65
  2457  024A  00A7               	movwf	___flge@ff2+3
  2458  024B  3020               	movlw	32
  2459  024C  00A6               	movwf	___flge@ff2+2
  2460  024D  3000               	movlw	0
  2461  024E  00A5               	movwf	___flge@ff2+1
  2462  024F  3000               	movlw	0
  2463  0250  00A4               	movwf	___flge@ff2
  2464  0251  160A  158A  275C  120A  118A  	fcall	___flge
  2465  0256  1C03               	btfss	3,0
  2466  0257  2A59               	goto	u6871
  2467  0258  2A5A               	goto	u6870
  2468  0259                     u6871:
  2469  0259  2A62               	goto	l4278
  2470  025A                     u6870:
  2471  025A                     l4276:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2474  025A  3001               	movlw	1
  2475  025B  1683               	bsf	3,5	;RP0=1, select bank1
  2476  025C  1303               	bcf	3,6	;RP1=0, select bank1
  2477  025D  07BD               	addwf	sprintf@eexp^(0+128),f
  2478  025E  1803               	skipnc
  2479  025F  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2480  0260  3000               	movlw	0
  2481  0261  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2482  0262                     l4278:
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2485  0262  1683               	bsf	3,5	;RP0=1, select bank1
  2486  0263  1303               	bcf	3,6	;RP1=0, select bank1
  2487  0264  0845               	movf	(sprintf@prec+1)^(0+128),w
  2488  0265  3A80               	xorlw	128
  2489  0266  00FF               	movwf	btemp+1
  2490  0267  3080               	movlw	128
  2491  0268  027F               	subwf	btemp+1,w
  2492  0269  1D03               	skipz
  2493  026A  2A6D               	goto	u6885
  2494  026B  300D               	movlw	13
  2495  026C  0244               	subwf	sprintf@prec^(0+128),w
  2496  026D                     u6885:
  2497  026D  1803               	skipnc
  2498  026E  2A70               	goto	u6881
  2499  026F  2A71               	goto	u6880
  2500  0270                     u6881:
  2501  0270  2AB8               	goto	l4282
  2502  0271                     u6880:
  2503  0271                     l4280:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2506  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2507  0272  1303               	bcf	3,6	;RP1=0, select bank1
  2508  0273  0844               	movf	sprintf@prec^(0+128),w
  2509  0274  160A  118A  236B  120A  118A  	fcall	_fround
  2510  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2511  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2512  027B  0848               	movf	?_fround+3,w
  2513  027C  00DC               	movwf	___fladd@b+3
  2514  027D  0847               	movf	?_fround+2,w
  2515  027E  00DB               	movwf	___fladd@b+2
  2516  027F  0846               	movf	?_fround+1,w
  2517  0280  00DA               	movwf	___fladd@b+1
  2518  0281  0845               	movf	?_fround,w
  2519  0282  00D9               	movwf	___fladd@b
  2520  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2521  0284  1303               	bcf	3,6	;RP1=0, select bank1
  2522  0285  0849               	movf	(sprintf@fval+3)^(0+128),w
  2523  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2525  0288  00E0               	movwf	___fladd@a+3
  2526  0289  1683               	bsf	3,5	;RP0=1, select bank1
  2527  028A  1303               	bcf	3,6	;RP1=0, select bank1
  2528  028B  0848               	movf	(sprintf@fval+2)^(0+128),w
  2529  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2530  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2531  028E  00DF               	movwf	___fladd@a+2
  2532  028F  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0290  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0291  0847               	movf	(sprintf@fval+1)^(0+128),w
  2535  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0294  00DE               	movwf	___fladd@a+1
  2538  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2539  0296  1303               	bcf	3,6	;RP1=0, select bank1
  2540  0297  0846               	movf	sprintf@fval^(0+128),w
  2541  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2542  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2543  029A  00DD               	movwf	___fladd@a
  2544  029B  160A  118A  2578  120A  118A  	fcall	___fladd
  2545  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2546  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2547  02A2  085C               	movf	?___fladd+3,w
  2548  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2549  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2550  02A5  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2551  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2552  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2553  02A8  085B               	movf	?___fladd+2,w
  2554  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2555  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2556  02AB  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2557  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2558  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2559  02AE  085A               	movf	?___fladd+1,w
  2560  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2561  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  2562  02B1  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2563  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2564  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  2565  02B4  0859               	movf	?___fladd,w
  2566  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  2567  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  2568  02B7  00C6               	movwf	sprintf@fval^(0+128)
  2569  02B8                     l4282:
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2572  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2573  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2574  02BA  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2575  02BB  3A80               	xorlw	128
  2576  02BC  00FF               	movwf	btemp+1
  2577  02BD  3080               	movlw	128
  2578  02BE  027F               	subwf	btemp+1,w
  2579  02BF  1D03               	skipz
  2580  02C0  2AC3               	goto	u6895
  2581  02C1  300A               	movlw	10
  2582  02C2  023D               	subwf	sprintf@eexp^(0+128),w
  2583  02C3                     u6895:
  2584  02C3  1803               	skipnc
  2585  02C4  2AC6               	goto	u6891
  2586  02C5  2AC7               	goto	u6890
  2587  02C6                     u6891:
  2588  02C6  2B26               	goto	l4290
  2589  02C7                     u6890:
  2590  02C7                     l4284:
  2591  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2592  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2593  02C9  0849               	movf	(sprintf@fval+3)^(0+128),w
  2594  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2595  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2596  02CC  00A3               	movwf	___fleq@ff1+3
  2597  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  2598  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  2599  02CF  0848               	movf	(sprintf@fval+2)^(0+128),w
  2600  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2601  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2602  02D2  00A2               	movwf	___fleq@ff1+2
  2603  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2604  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2605  02D5  0847               	movf	(sprintf@fval+1)^(0+128),w
  2606  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2607  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2608  02D8  00A1               	movwf	___fleq@ff1+1
  2609  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2610  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2611  02DB  0846               	movf	sprintf@fval^(0+128),w
  2612  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2613  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2614  02DE  00A0               	movwf	___fleq@ff1
  2615  02DF  3000               	movlw	0
  2616  02E0  00A7               	movwf	___fleq@ff2+3
  2617  02E1  3000               	movlw	0
  2618  02E2  00A6               	movwf	___fleq@ff2+2
  2619  02E3  3000               	movlw	0
  2620  02E4  00A5               	movwf	___fleq@ff2+1
  2621  02E5  3000               	movlw	0
  2622  02E6  00A4               	movwf	___fleq@ff2
  2623  02E7  160A  158A  24EE  120A  118A  	fcall	___fleq
  2624  02EC  1803               	btfsc	3,0
  2625  02ED  2AEF               	goto	u6901
  2626  02EE  2AF0               	goto	u6900
  2627  02EF                     u6901:
  2628  02EF  2BD2               	goto	l4304
  2629  02F0                     u6900:
  2630  02F0                     l4286:
  2631  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2632  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2633  02F2  0849               	movf	(sprintf@fval+3)^(0+128),w
  2634  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2635  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2636  02F5  00DB               	movwf	___fltol@f1+3
  2637  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  2638  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  2639  02F8  0848               	movf	(sprintf@fval+2)^(0+128),w
  2640  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2641  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2642  02FB  00DA               	movwf	___fltol@f1+2
  2643  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  2644  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  2645  02FE  0847               	movf	(sprintf@fval+1)^(0+128),w
  2646  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2647  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2648  0301  00D9               	movwf	___fltol@f1+1
  2649  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2650  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2651  0304  0846               	movf	sprintf@fval^(0+128),w
  2652  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2653  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2654  0307  00D8               	movwf	___fltol@f1
  2655  0308  160A  118A  20B8  120A  118A  	fcall	___fltol
  2656  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2657  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2658  030F  085B               	movf	?___fltol+3,w
  2659  0310  045A               	iorwf	?___fltol+2,w
  2660  0311  0459               	iorwf	?___fltol+1,w
  2661  0312  0458               	iorwf	?___fltol,w
  2662  0313  1D03               	skipz
  2663  0314  2B16               	goto	u6911
  2664  0315  2B17               	goto	u6910
  2665  0316                     u6911:
  2666  0316  2BD2               	goto	l4304
  2667  0317                     u6910:
  2668  0317                     l4288:
  2669  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2670  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2671  0319  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2672  031A  3A80               	xorlw	128
  2673  031B  00FF               	movwf	btemp+1
  2674  031C  3080               	movlw	128
  2675  031D  027F               	subwf	btemp+1,w
  2676  031E  1D03               	skipz
  2677  031F  2B22               	goto	u6925
  2678  0320  3002               	movlw	2
  2679  0321  023D               	subwf	sprintf@eexp^(0+128),w
  2680  0322                     u6925:
  2681  0322  1C03               	skipc
  2682  0323  2B25               	goto	u6921
  2683  0324  2B26               	goto	u6920
  2684  0325                     u6921:
  2685  0325  2BD2               	goto	l4304
  2686  0326                     u6920:
  2687  0326                     l4290:
  2688                           
  2689                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2690  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2691  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2692  0328  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2693  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2694  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2695  032B  00A3               	movwf	___flge@ff1+3
  2696  032C  1683               	bsf	3,5	;RP0=1, select bank1
  2697  032D  1303               	bcf	3,6	;RP1=0, select bank1
  2698  032E  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2699  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2700  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2701  0331  00A2               	movwf	___flge@ff1+2
  2702  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2703  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2704  0334  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2705  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0337  00A1               	movwf	___flge@ff1+1
  2708  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2709  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2710  033A  083F               	movf	sprintf@tmpval^(0+128),w
  2711  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2712  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2713  033D  00A0               	movwf	___flge@ff1
  2714  033E  3040               	movlw	64
  2715  033F  00A7               	movwf	___flge@ff2+3
  2716  0340  3089               	movlw	137
  2717  0341  00A6               	movwf	___flge@ff2+2
  2718  0342  3070               	movlw	112
  2719  0343  00A5               	movwf	___flge@ff2+1
  2720  0344  305F               	movlw	95
  2721  0345  00A4               	movwf	___flge@ff2
  2722  0346  160A  158A  275C  120A  118A  	fcall	___flge
  2723  034B  1803               	btfsc	3,0
  2724  034C  2B4E               	goto	u6931
  2725  034D  2B4F               	goto	u6930
  2726  034E                     u6931:
  2727  034E  2B58               	goto	l4294
  2728  034F                     u6930:
  2729  034F                     l4292:
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2732  034F  30F7               	movlw	247
  2733  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2735  0352  07BD               	addwf	sprintf@eexp^(0+128),f
  2736  0353  1803               	skipnc
  2737  0354  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2738  0355  30FF               	movlw	255
  2739  0356  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2740                           
  2741                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2742  0357  2B60               	goto	l4296
  2743  0358                     l4294:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2746  0358  30F8               	movlw	248
  2747  0359  1683               	bsf	3,5	;RP0=1, select bank1
  2748  035A  1303               	bcf	3,6	;RP1=0, select bank1
  2749  035B  07BD               	addwf	sprintf@eexp^(0+128),f
  2750  035C  1803               	skipnc
  2751  035D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2752  035E  30FF               	movlw	255
  2753  035F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2754  0360                     l4296:
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2757  0360  083D               	movf	sprintf@eexp^(0+128),w
  2758  0361  120A  158A  249D  120A  118A  	fcall	_scale
  2759  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0368  0848               	movf	?_scale+3,w
  2762  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2763  036A  1303               	bcf	3,6	;RP1=0, select bank1
  2764  036B  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2765  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2766  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2767  036E  0847               	movf	?_scale+2,w
  2768  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2769  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2770  0371  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2771  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2772  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2773  0374  0846               	movf	?_scale+1,w
  2774  0375  1683               	bsf	3,5	;RP0=1, select bank1
  2775  0376  1303               	bcf	3,6	;RP1=0, select bank1
  2776  0377  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2777  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2778  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2779  037A  0845               	movf	?_scale,w
  2780  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2781  037C  1303               	bcf	3,6	;RP1=0, select bank1
  2782  037D  00BF               	movwf	sprintf@tmpval^(0+128)
  2783  037E                     l4298:
  2784  037E  0849               	movf	(sprintf@fval+3)^(0+128),w
  2785  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2786  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2787  0381  00A3               	movwf	__div_to_l_@f1+3
  2788  0382  1683               	bsf	3,5	;RP0=1, select bank1
  2789  0383  1303               	bcf	3,6	;RP1=0, select bank1
  2790  0384  0848               	movf	(sprintf@fval+2)^(0+128),w
  2791  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2792  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2793  0387  00A2               	movwf	__div_to_l_@f1+2
  2794  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2795  0389  1303               	bcf	3,6	;RP1=0, select bank1
  2796  038A  0847               	movf	(sprintf@fval+1)^(0+128),w
  2797  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2798  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2799  038D  00A1               	movwf	__div_to_l_@f1+1
  2800  038E  1683               	bsf	3,5	;RP0=1, select bank1
  2801  038F  1303               	bcf	3,6	;RP1=0, select bank1
  2802  0390  0846               	movf	sprintf@fval^(0+128),w
  2803  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2804  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2805  0393  00A0               	movwf	__div_to_l_@f1
  2806  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2807  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2808  0396  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2809  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2811  0399  00A7               	movwf	__div_to_l_@f2+3
  2812  039A  1683               	bsf	3,5	;RP0=1, select bank1
  2813  039B  1303               	bcf	3,6	;RP1=0, select bank1
  2814  039C  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2815  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2816  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2817  039F  00A6               	movwf	__div_to_l_@f2+2
  2818  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2819  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2820  03A2  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2821  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2822  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2823  03A5  00A5               	movwf	__div_to_l_@f2+1
  2824  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2825  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2826  03A8  083F               	movf	sprintf@tmpval^(0+128),w
  2827  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2828  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2829  03AB  00A4               	movwf	__div_to_l_@f2
  2830  03AC  160A  118A  22AD  120A  118A  	fcall	__div_to_l_
  2831  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2832  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2833  03B3  0823               	movf	?__div_to_l_+3,w
  2834  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2835  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2836  03B6  00BC               	movwf	(sprintf@val+3)^(0+128)
  2837  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2838  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2839  03B9  0822               	movf	?__div_to_l_+2,w
  2840  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2841  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  2842  03BC  00BB               	movwf	(sprintf@val+2)^(0+128)
  2843  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2844  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2845  03BF  0821               	movf	?__div_to_l_+1,w
  2846  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  2847  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  2848  03C2  00BA               	movwf	(sprintf@val+1)^(0+128)
  2849  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2850  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2851  03C5  0820               	movf	?__div_to_l_,w
  2852  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2853  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  2854  03C8  00B9               	movwf	sprintf@val^(0+128)
  2855  03C9                     l4302:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2858  03C9  3000               	movlw	0
  2859  03CA  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2860  03CB  3000               	movlw	0
  2861  03CC  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2862  03CD  3000               	movlw	0
  2863  03CE  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2864  03CF  3000               	movlw	0
  2865  03D0  00C6               	movwf	sprintf@fval^(0+128)
  2866                           
  2867                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2868  03D1  2C38               	goto	l4310
  2869  03D2                     l4304:
  2870                           
  2871                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2872  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2873  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  2874  03D4  0849               	movf	(sprintf@fval+3)^(0+128),w
  2875  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2876  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2877  03D7  00DB               	movwf	___fltol@f1+3
  2878  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2879  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  2880  03DA  0848               	movf	(sprintf@fval+2)^(0+128),w
  2881  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2882  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2883  03DD  00DA               	movwf	___fltol@f1+2
  2884  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  2885  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  2886  03E0  0847               	movf	(sprintf@fval+1)^(0+128),w
  2887  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2888  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2889  03E3  00D9               	movwf	___fltol@f1+1
  2890  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2891  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  2892  03E6  0846               	movf	sprintf@fval^(0+128),w
  2893  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2894  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2895  03E9  00D8               	movwf	___fltol@f1
  2896  03EA  160A  118A  20B8  120A  118A  	fcall	___fltol
  2897  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2898  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2899  03F1  085B               	movf	?___fltol+3,w
  2900  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2901  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2902  03F4  00BC               	movwf	(sprintf@val+3)^(0+128)
  2903  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2904  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2905  03F7  085A               	movf	?___fltol+2,w
  2906  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2907  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2908  03FA  00BB               	movwf	(sprintf@val+2)^(0+128)
  2909  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2910  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2911  03FD  0859               	movf	?___fltol+1,w
  2912  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2913  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  2914  0400  00BA               	movwf	(sprintf@val+1)^(0+128)
  2915  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0403  0858               	movf	?___fltol,w
  2918  0404  1683               	bsf	3,5	;RP0=1, select bank1
  2919  0405  1303               	bcf	3,6	;RP1=0, select bank1
  2920  0406  00B9               	movwf	sprintf@val^(0+128)
  2921  0407                     l4306:
  2922                           
  2923                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2924  0407  083C               	movf	(sprintf@val+3)^(0+128),w
  2925  0408  00F6               	movwf	___xxtofl@val+3
  2926  0409  083B               	movf	(sprintf@val+2)^(0+128),w
  2927  040A  00F5               	movwf	___xxtofl@val+2
  2928  040B  083A               	movf	(sprintf@val+1)^(0+128),w
  2929  040C  00F4               	movwf	___xxtofl@val+1
  2930  040D  0839               	movf	sprintf@val^(0+128),w
  2931  040E  00F3               	movwf	___xxtofl@val
  2932  040F  3000               	movlw	0
  2933  0410  160A  118A  2134  120A  118A  	fcall	___xxtofl
  2934  0415  0876               	movf	?___xxtofl+3,w
  2935  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2936  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2937  0418  00A3               	movwf	(___flsub@a+3)^(0+128)
  2938  0419  0875               	movf	?___xxtofl+2,w
  2939  041A  00A2               	movwf	(___flsub@a+2)^(0+128)
  2940  041B  0874               	movf	?___xxtofl+1,w
  2941  041C  00A1               	movwf	(___flsub@a+1)^(0+128)
  2942  041D  0873               	movf	?___xxtofl,w
  2943  041E  00A0               	movwf	___flsub@a^(0+128)
  2944  041F  0849               	movf	(sprintf@fval+3)^(0+128),w
  2945  0420  00A7               	movwf	(___flsub@b+3)^(0+128)
  2946  0421  0848               	movf	(sprintf@fval+2)^(0+128),w
  2947  0422  00A6               	movwf	(___flsub@b+2)^(0+128)
  2948  0423  0847               	movf	(sprintf@fval+1)^(0+128),w
  2949  0424  00A5               	movwf	(___flsub@b+1)^(0+128)
  2950  0425  0846               	movf	sprintf@fval^(0+128),w
  2951  0426  00A4               	movwf	___flsub@b^(0+128)
  2952  0427  160A  158A  253E  120A  118A  	fcall	___flsub
  2953  042C  1683               	bsf	3,5	;RP0=1, select bank1
  2954  042D  1303               	bcf	3,6	;RP1=0, select bank1
  2955  042E  0823               	movf	(?___flsub+3)^(0+128),w
  2956  042F  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2957  0430  0822               	movf	(?___flsub+2)^(0+128),w
  2958  0431  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2959  0432  0821               	movf	(?___flsub+1)^(0+128),w
  2960  0433  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2961  0434  0820               	movf	?___flsub^(0+128),w
  2962  0435  00C6               	movwf	sprintf@fval^(0+128)
  2963  0436                     l4308:
  2964                           
  2965                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2966  0436  01BD               	clrf	sprintf@eexp^(0+128)
  2967  0437  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2968  0438                     l4310:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2971  0438  01CA               	clrf	sprintf@c^(0+128)
  2972  0439  0ACA               	incf	sprintf@c^(0+128),f
  2973  043A                     l4316:
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2976  043A  084A               	movf	sprintf@c^(0+128),w
  2977  043B  00AD               	movwf	??_sprintf^(0+128)
  2978  043C  3001               	movlw	1
  2979  043D                     u6945:
  2980  043D  1003               	clrc
  2981  043E  0DAD               	rlf	??_sprintf^(0+128),f
  2982  043F  3EFF               	addlw	-1
  2983  0440  1D03               	skipz
  2984  0441  2C3D               	goto	u6945
  2985  0442  1003               	clrc
  2986  0443  0D2D               	rlf	??_sprintf^(0+128),w
  2987  0444  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2988  0445  0084               	movwf	4
  2989  0446  160A  118A  200A  120A  118A  	fcall	stringdir
  2990  044B  00AE               	movwf	(??_sprintf+1)^(0+128)
  2991  044C  160A  118A  200A  120A  118A  	fcall	stringdir
  2992  0451  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
  2993  0452  160A  118A  200A  120A  118A  	fcall	stringdir
  2994  0457  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
  2995  0458  160A  118A  200A  120A  118A  	fcall	stringdir
  2996  045D  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
  2997  045E  0831               	movf	(??_sprintf+4)^(0+128),w
  2998  045F  023C               	subwf	(sprintf@val+3)^(0+128),w
  2999  0460  1D03               	skipz
  3000  0461  2C6C               	goto	u6955
  3001  0462  0830               	movf	(??_sprintf+3)^(0+128),w
  3002  0463  023B               	subwf	(sprintf@val+2)^(0+128),w
  3003  0464  1D03               	skipz
  3004  0465  2C6C               	goto	u6955
  3005  0466  082F               	movf	(??_sprintf+2)^(0+128),w
  3006  0467  023A               	subwf	(sprintf@val+1)^(0+128),w
  3007  0468  1D03               	skipz
  3008  0469  2C6C               	goto	u6955
  3009  046A  082E               	movf	(??_sprintf+1)^(0+128),w
  3010  046B  0239               	subwf	sprintf@val^(0+128),w
  3011  046C                     u6955:
  3012  046C  1803               	skipnc
  3013  046D  2C6F               	goto	u6951
  3014  046E  2C70               	goto	u6950
  3015  046F                     u6951:
  3016  046F  2C71               	goto	l4320
  3017  0470                     u6950:
  3018  0470  2C7B               	goto	l4322
  3019  0471                     l4320:
  3020  0471  3001               	movlw	1
  3021  0472  00AD               	movwf	??_sprintf^(0+128)
  3022  0473  082D               	movf	??_sprintf^(0+128),w
  3023  0474  07CA               	addwf	sprintf@c^(0+128),f
  3024  0475  300A               	movlw	10
  3025  0476  064A               	xorwf	sprintf@c^(0+128),w
  3026  0477  1D03               	btfss	3,2
  3027  0478  2C7A               	goto	u6961
  3028  0479  2C7B               	goto	u6960
  3029  047A                     u6961:
  3030  047A  2C3A               	goto	l4316
  3031  047B                     u6960:
  3032  047B                     l4322:
  3033                           
  3034                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3035  047B  3003               	movlw	3
  3036  047C  0537               	andwf	sprintf@flag^(0+128),w
  3037  047D  00AD               	movwf	??_sprintf^(0+128)
  3038  047E  3000               	movlw	0
  3039  047F  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3040  0480  00AE               	movwf	(??_sprintf+1)^(0+128)
  3041  0481  082D               	movf	??_sprintf^(0+128),w
  3042  0482  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3043  0483  1903               	btfsc	3,2
  3044  0484  2C86               	goto	u6971
  3045  0485  2C87               	goto	u6970
  3046  0486                     u6971:
  3047  0486  2D39               	goto	l366
  3048  0487                     u6970:
  3049  0487                     l4324:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3052  0487  302D               	movlw	45
  3053  0488  00AD               	movwf	??_sprintf^(0+128)
  3054  0489  0843               	movf	sprintf@sp^(0+128),w
  3055  048A  0084               	movwf	4
  3056  048B  082D               	movf	??_sprintf^(0+128),w
  3057  048C  1383               	bcf	3,7	;select IRP bank0
  3058  048D  0080               	movwf	0
  3059  048E                     l4326:
  3060  048E  3001               	movlw	1
  3061  048F  00AD               	movwf	??_sprintf^(0+128)
  3062  0490  082D               	movf	??_sprintf^(0+128),w
  3063  0491  07C3               	addwf	sprintf@sp^(0+128),f
  3064  0492  2D39               	goto	l366
  3065  0493                     l4328:
  3066                           
  3067                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3068  0493  084A               	movf	sprintf@c^(0+128),w
  3069  0494  00AD               	movwf	??_sprintf^(0+128)
  3070  0495  3001               	movlw	1
  3071  0496                     u6985:
  3072  0496  1003               	clrc
  3073  0497  0DAD               	rlf	??_sprintf^(0+128),f
  3074  0498  3EFF               	addlw	-1
  3075  0499  1D03               	skipz
  3076  049A  2C96               	goto	u6985
  3077  049B  1003               	clrc
  3078  049C  0D2D               	rlf	??_sprintf^(0+128),w
  3079  049D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3080  049E  0084               	movwf	4
  3081  049F  160A  118A  200A  120A  118A  	fcall	stringdir
  3082  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  3083  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  3084  04A6  00A0               	movwf	___lldiv@divisor
  3085  04A7  160A  118A  200A  120A  118A  	fcall	stringdir
  3086  04AC  00A1               	movwf	___lldiv@divisor+1
  3087  04AD  160A  118A  200A  120A  118A  	fcall	stringdir
  3088  04B2  00A2               	movwf	___lldiv@divisor+2
  3089  04B3  160A  118A  200A  120A  118A  	fcall	stringdir
  3090  04B8  00A3               	movwf	___lldiv@divisor+3
  3091  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  3092  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  3093  04BB  083C               	movf	(sprintf@val+3)^(0+128),w
  3094  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  3095  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  3096  04BE  00A7               	movwf	___lldiv@dividend+3
  3097  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  3098  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  3099  04C1  083B               	movf	(sprintf@val+2)^(0+128),w
  3100  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  3101  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  3102  04C4  00A6               	movwf	___lldiv@dividend+2
  3103  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  3104  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  3105  04C7  083A               	movf	(sprintf@val+1)^(0+128),w
  3106  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  3107  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  3108  04CA  00A5               	movwf	___lldiv@dividend+1
  3109  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  3110  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  3111  04CD  0839               	movf	sprintf@val^(0+128),w
  3112  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  3113  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  3114  04D0  00A4               	movwf	___lldiv@dividend
  3115  04D1  160A  158A  26F4  120A  118A  	fcall	___lldiv
  3116  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  3117  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  3118  04D8  0823               	movf	?___lldiv+3,w
  3119  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  3120  04DA  1303               	bcf	3,6	;RP1=0, select bank1
  3121  04DB  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3122  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  3123  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  3124  04DE  0822               	movf	?___lldiv+2,w
  3125  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  3126  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  3127  04E1  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3128  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3129  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  3130  04E4  0821               	movf	?___lldiv+1,w
  3131  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  3132  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  3133  04E7  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3134  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  3135  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  3136  04EA  0820               	movf	?___lldiv,w
  3137  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  3138  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  3139  04ED  00BF               	movwf	sprintf@tmpval^(0+128)
  3140  04EE                     l4330:
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3143  04EE  3000               	movlw	0
  3144  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  3145  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  3146  04F1  00A3               	movwf	___llmod@divisor+3
  3147  04F2  3000               	movlw	0
  3148  04F3  00A2               	movwf	___llmod@divisor+2
  3149  04F4  3000               	movlw	0
  3150  04F5  00A1               	movwf	___llmod@divisor+1
  3151  04F6  300A               	movlw	10
  3152  04F7  00A0               	movwf	___llmod@divisor
  3153  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  3154  04F9  1303               	bcf	3,6	;RP1=0, select bank1
  3155  04FA  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  3156  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3157  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3158  04FD  00A7               	movwf	___llmod@dividend+3
  3159  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  3160  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  3161  0500  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  3162  0501  1283               	bcf	3,5	;RP0=0, select bank0
  3163  0502  1303               	bcf	3,6	;RP1=0, select bank0
  3164  0503  00A6               	movwf	___llmod@dividend+2
  3165  0504  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0505  1303               	bcf	3,6	;RP1=0, select bank1
  3167  0506  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  3168  0507  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0508  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0509  00A5               	movwf	___llmod@dividend+1
  3171  050A  1683               	bsf	3,5	;RP0=1, select bank1
  3172  050B  1303               	bcf	3,6	;RP1=0, select bank1
  3173  050C  083F               	movf	sprintf@tmpval^(0+128),w
  3174  050D  1283               	bcf	3,5	;RP0=0, select bank0
  3175  050E  1303               	bcf	3,6	;RP1=0, select bank0
  3176  050F  00A4               	movwf	___llmod@dividend
  3177  0510  160A  158A  25E4  120A  118A  	fcall	___llmod
  3178  0515  1283               	bcf	3,5	;RP0=0, select bank0
  3179  0516  1303               	bcf	3,6	;RP1=0, select bank0
  3180  0517  0823               	movf	?___llmod+3,w
  3181  0518  1683               	bsf	3,5	;RP0=1, select bank1
  3182  0519  1303               	bcf	3,6	;RP1=0, select bank1
  3183  051A  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3184  051B  1283               	bcf	3,5	;RP0=0, select bank0
  3185  051C  1303               	bcf	3,6	;RP1=0, select bank0
  3186  051D  0822               	movf	?___llmod+2,w
  3187  051E  1683               	bsf	3,5	;RP0=1, select bank1
  3188  051F  1303               	bcf	3,6	;RP1=0, select bank1
  3189  0520  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3190  0521  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0522  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0523  0821               	movf	?___llmod+1,w
  3193  0524  1683               	bsf	3,5	;RP0=1, select bank1
  3194  0525  1303               	bcf	3,6	;RP1=0, select bank1
  3195  0526  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3196  0527  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0528  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0529  0820               	movf	?___llmod,w
  3199  052A  1683               	bsf	3,5	;RP0=1, select bank1
  3200  052B  1303               	bcf	3,6	;RP1=0, select bank1
  3201  052C  00BF               	movwf	sprintf@tmpval^(0+128)
  3202  052D                     l4332:
  3203                           
  3204                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3205  052D  083F               	movf	sprintf@tmpval^(0+128),w
  3206  052E  3E30               	addlw	48
  3207  052F  00AD               	movwf	??_sprintf^(0+128)
  3208  0530  0843               	movf	sprintf@sp^(0+128),w
  3209  0531  0084               	movwf	4
  3210  0532  082D               	movf	??_sprintf^(0+128),w
  3211  0533  1383               	bcf	3,7	;select IRP bank0
  3212  0534  0080               	movwf	0
  3213  0535  3001               	movlw	1
  3214  0536  00AD               	movwf	??_sprintf^(0+128)
  3215  0537  082D               	movf	??_sprintf^(0+128),w
  3216  0538  07C3               	addwf	sprintf@sp^(0+128),f
  3217  0539                     l366:	
  3218                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1232:    }
  3219                           
  3220                           
  3221                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3222  0539  3001               	movlw	1
  3223  053A  02CA               	subwf	sprintf@c^(0+128),f
  3224  053B  0A4A               	incf	sprintf@c^(0+128),w
  3225  053C  1D03               	btfss	3,2
  3226  053D  2D3F               	goto	u6991
  3227  053E  2D40               	goto	u6990
  3228  053F                     u6991:
  3229  053F  2C93               	goto	l4328
  3230  0540                     u6990:
  3231  0540  2D54               	goto	l4340
  3232  0541                     l4334:
  3233                           
  3234                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3235  0541  3030               	movlw	48
  3236  0542  1683               	bsf	3,5	;RP0=1, select bank1
  3237  0543  1303               	bcf	3,6	;RP1=0, select bank1
  3238  0544  00AD               	movwf	??_sprintf^(0+128)
  3239  0545  0843               	movf	sprintf@sp^(0+128),w
  3240  0546  0084               	movwf	4
  3241  0547  082D               	movf	??_sprintf^(0+128),w
  3242  0548  1383               	bcf	3,7	;select IRP bank0
  3243  0549  0080               	movwf	0
  3244  054A                     l4336:
  3245  054A  3001               	movlw	1
  3246  054B  00AD               	movwf	??_sprintf^(0+128)
  3247  054C  082D               	movf	??_sprintf^(0+128),w
  3248  054D  07C3               	addwf	sprintf@sp^(0+128),f
  3249  054E                     l4338:
  3250                           
  3251                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3252  054E  30FF               	movlw	255
  3253  054F  07BD               	addwf	sprintf@eexp^(0+128),f
  3254  0550  1803               	skipnc
  3255  0551  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  3256  0552  30FF               	movlw	255
  3257  0553  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  3258  0554                     l4340:
  3259                           
  3260                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3261  0554  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3262  0555  3A80               	xorlw	128
  3263  0556  00FF               	movwf	btemp+1
  3264  0557  3080               	movlw	128
  3265  0558  027F               	subwf	btemp+1,w
  3266  0559  1D03               	skipz
  3267  055A  2D5D               	goto	u7005
  3268  055B  3001               	movlw	1
  3269  055C  023D               	subwf	sprintf@eexp^(0+128),w
  3270  055D                     u7005:
  3271  055D  1803               	skipnc
  3272  055E  2D60               	goto	u7001
  3273  055F  2D61               	goto	u7000
  3274  0560                     u7001:
  3275  0560  2D41               	goto	l4334
  3276  0561                     u7000:
  3277  0561                     l4342:
  3278                           
  3279                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3280  0561  1683               	bsf	3,5	;RP0=1, select bank1
  3281  0562  1303               	bcf	3,6	;RP1=0, select bank1
  3282  0563  0845               	movf	(sprintf@prec+1)^(0+128),w
  3283  0564  3A80               	xorlw	128
  3284  0565  00FF               	movwf	btemp+1
  3285  0566  3080               	movlw	128
  3286  0567  027F               	subwf	btemp+1,w
  3287  0568  1D03               	skipz
  3288  0569  2D6C               	goto	u7015
  3289  056A  3009               	movlw	9
  3290  056B  0244               	subwf	sprintf@prec^(0+128),w
  3291  056C                     u7015:
  3292  056C  1C03               	skipc
  3293  056D  2D6F               	goto	u7011
  3294  056E  2D70               	goto	u7010
  3295  056F                     u7011:
  3296  056F  2D77               	goto	l4346
  3297  0570                     u7010:
  3298  0570                     l4344:
  3299                           
  3300                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3301  0570  3008               	movlw	8
  3302  0571  1683               	bsf	3,5	;RP0=1, select bank1
  3303  0572  1303               	bcf	3,6	;RP1=0, select bank1
  3304  0573  00AD               	movwf	??_sprintf^(0+128)
  3305  0574  082D               	movf	??_sprintf^(0+128),w
  3306  0575  00CA               	movwf	sprintf@c^(0+128)
  3307  0576  2D7D               	goto	l373
  3308  0577                     l4346:
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3311  0577  1683               	bsf	3,5	;RP0=1, select bank1
  3312  0578  1303               	bcf	3,6	;RP1=0, select bank1
  3313  0579  0844               	movf	sprintf@prec^(0+128),w
  3314  057A  00AD               	movwf	??_sprintf^(0+128)
  3315  057B  082D               	movf	??_sprintf^(0+128),w
  3316  057C  00CA               	movwf	sprintf@c^(0+128)
  3317  057D                     l373:
  3318                           
  3319                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3320  057D  084A               	movf	sprintf@c^(0+128),w
  3321  057E  00AD               	movwf	??_sprintf^(0+128)
  3322  057F  01AE               	clrf	(??_sprintf^(0+128)+1)
  3323  0580  082D               	movf	??_sprintf^(0+128),w
  3324  0581  02C4               	subwf	sprintf@prec^(0+128),f
  3325  0582  082E               	movf	(??_sprintf+1)^(0+128),w
  3326  0583  1C03               	skipc
  3327  0584  03C5               	decf	(sprintf@prec+1)^(0+128),f
  3328  0585  02C5               	subwf	(sprintf@prec+1)^(0+128),f
  3329  0586                     l4348:
  3330                           
  3331                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3332  0586  084A               	movf	sprintf@c^(0+128),w
  3333  0587  1903               	btfsc	3,2
  3334  0588  2D8A               	goto	u7021
  3335  0589  2D8B               	goto	u7020
  3336  058A                     u7021:
  3337  058A  2D96               	goto	l4354
  3338  058B                     u7020:
  3339  058B                     l4350:
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3342  058B  302E               	movlw	46
  3343  058C  00AD               	movwf	??_sprintf^(0+128)
  3344  058D  0843               	movf	sprintf@sp^(0+128),w
  3345  058E  0084               	movwf	4
  3346  058F  082D               	movf	??_sprintf^(0+128),w
  3347  0590  1383               	bcf	3,7	;select IRP bank0
  3348  0591  0080               	movwf	0
  3349  0592                     l4352:
  3350  0592  3001               	movlw	1
  3351  0593  00AD               	movwf	??_sprintf^(0+128)
  3352  0594  082D               	movf	??_sprintf^(0+128),w
  3353  0595  07C3               	addwf	sprintf@sp^(0+128),f
  3354  0596                     l4354:
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3357  0596  084A               	movf	sprintf@c^(0+128),w
  3358  0597  120A  158A  249D  120A  118A  	fcall	_scale
  3359  059C  1283               	bcf	3,5	;RP0=0, select bank0
  3360  059D  1303               	bcf	3,6	;RP1=0, select bank0
  3361  059E  0848               	movf	?_scale+3,w
  3362  059F  1683               	bsf	3,5	;RP0=1, select bank1
  3363  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  3364  05A1  00B5               	movwf	(_sprintf$1178+3)^(0+128)
  3365  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  3366  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  3367  05A4  0847               	movf	?_scale+2,w
  3368  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  3369  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  3370  05A7  00B4               	movwf	(_sprintf$1178+2)^(0+128)
  3371  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  3372  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  3373  05AA  0846               	movf	?_scale+1,w
  3374  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  3375  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  3376  05AD  00B3               	movwf	(_sprintf$1178+1)^(0+128)
  3377  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  3378  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  3379  05B0  0845               	movf	?_scale,w
  3380  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  3381  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  3382  05B3  00B2               	movwf	_sprintf$1178^(0+128)
  3383  05B4                     l4356:
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3386  05B4  0835               	movf	(_sprintf$1178+3)^(0+128),w
  3387  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3388  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  3389  05B7  00B2               	movwf	___flmul@a+3
  3390  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  3391  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  3392  05BA  0834               	movf	(_sprintf$1178+2)^(0+128),w
  3393  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  3394  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  3395  05BD  00B1               	movwf	___flmul@a+2
  3396  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  3397  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  3398  05C0  0833               	movf	(_sprintf$1178+1)^(0+128),w
  3399  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  3400  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  3401  05C3  00B0               	movwf	___flmul@a+1
  3402  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  3403  05C5  1303               	bcf	3,6	;RP1=0, select bank1
  3404  05C6  0832               	movf	_sprintf$1178^(0+128),w
  3405  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  3406  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  3407  05C9  00AF               	movwf	___flmul@a
  3408  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  3409  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  3410  05CC  0849               	movf	(sprintf@fval+3)^(0+128),w
  3411  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3412  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  3413  05CF  00AE               	movwf	___flmul@b+3
  3414  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  3415  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  3416  05D2  0848               	movf	(sprintf@fval+2)^(0+128),w
  3417  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  3418  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  3419  05D5  00AD               	movwf	___flmul@b+2
  3420  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  3421  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  3422  05D8  0847               	movf	(sprintf@fval+1)^(0+128),w
  3423  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3424  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  3425  05DB  00AC               	movwf	___flmul@b+1
  3426  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  3427  05DD  1303               	bcf	3,6	;RP1=0, select bank1
  3428  05DE  0846               	movf	sprintf@fval^(0+128),w
  3429  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  3430  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  3431  05E1  00AB               	movwf	___flmul@b
  3432  05E2  120A  158A  213C  120A  118A  	fcall	___flmul
  3433  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  3434  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  3435  05E9  082E               	movf	?___flmul+3,w
  3436  05EA  00DB               	movwf	___fltol@f1+3
  3437  05EB  082D               	movf	?___flmul+2,w
  3438  05EC  00DA               	movwf	___fltol@f1+2
  3439  05ED  082C               	movf	?___flmul+1,w
  3440  05EE  00D9               	movwf	___fltol@f1+1
  3441  05EF  082B               	movf	?___flmul,w
  3442  05F0  00D8               	movwf	___fltol@f1
  3443  05F1  160A  118A  20B8  120A  118A  	fcall	___fltol
  3444  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  3445  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  3446  05F8  085B               	movf	?___fltol+3,w
  3447  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  3448  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  3449  05FB  00BC               	movwf	(sprintf@val+3)^(0+128)
  3450  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  3451  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  3452  05FE  085A               	movf	?___fltol+2,w
  3453  05FF  1683               	bsf	3,5	;RP0=1, select bank1
  3454  0600  1303               	bcf	3,6	;RP1=0, select bank1
  3455  0601  00BB               	movwf	(sprintf@val+2)^(0+128)
  3456  0602  1283               	bcf	3,5	;RP0=0, select bank0
  3457  0603  1303               	bcf	3,6	;RP1=0, select bank0
  3458  0604  0859               	movf	?___fltol+1,w
  3459  0605  1683               	bsf	3,5	;RP0=1, select bank1
  3460  0606  1303               	bcf	3,6	;RP1=0, select bank1
  3461  0607  00BA               	movwf	(sprintf@val+1)^(0+128)
  3462  0608  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0609  1303               	bcf	3,6	;RP1=0, select bank0
  3464  060A  0858               	movf	?___fltol,w
  3465  060B  1683               	bsf	3,5	;RP0=1, select bank1
  3466  060C  1303               	bcf	3,6	;RP1=0, select bank1
  3467  060D  00B9               	movwf	sprintf@val^(0+128)
  3468                           
  3469                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3470  060E  2F10               	goto	l4366
  3471  060F                     l4358:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3474  060F  084A               	movf	sprintf@c^(0+128),w
  3475  0610  00AD               	movwf	??_sprintf^(0+128)
  3476  0611  3001               	movlw	1
  3477  0612                     u7035:
  3478  0612  1003               	clrc
  3479  0613  0DAD               	rlf	??_sprintf^(0+128),f
  3480  0614  3EFF               	addlw	-1
  3481  0615  1D03               	skipz
  3482  0616  2E12               	goto	u7035
  3483  0617  1003               	clrc
  3484  0618  0D2D               	rlf	??_sprintf^(0+128),w
  3485  0619  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3486  061A  0084               	movwf	4
  3487  061B  160A  118A  200A  120A  118A  	fcall	stringdir
  3488  0620  1283               	bcf	3,5	;RP0=0, select bank0
  3489  0621  1303               	bcf	3,6	;RP1=0, select bank0
  3490  0622  00A0               	movwf	___lldiv@divisor
  3491  0623  160A  118A  200A  120A  118A  	fcall	stringdir
  3492  0628  00A1               	movwf	___lldiv@divisor+1
  3493  0629  160A  118A  200A  120A  118A  	fcall	stringdir
  3494  062E  00A2               	movwf	___lldiv@divisor+2
  3495  062F  160A  118A  200A  120A  118A  	fcall	stringdir
  3496  0634  00A3               	movwf	___lldiv@divisor+3
  3497  0635  1683               	bsf	3,5	;RP0=1, select bank1
  3498  0636  1303               	bcf	3,6	;RP1=0, select bank1
  3499  0637  083C               	movf	(sprintf@val+3)^(0+128),w
  3500  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3501  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3502  063A  00A7               	movwf	___lldiv@dividend+3
  3503  063B  1683               	bsf	3,5	;RP0=1, select bank1
  3504  063C  1303               	bcf	3,6	;RP1=0, select bank1
  3505  063D  083B               	movf	(sprintf@val+2)^(0+128),w
  3506  063E  1283               	bcf	3,5	;RP0=0, select bank0
  3507  063F  1303               	bcf	3,6	;RP1=0, select bank0
  3508  0640  00A6               	movwf	___lldiv@dividend+2
  3509  0641  1683               	bsf	3,5	;RP0=1, select bank1
  3510  0642  1303               	bcf	3,6	;RP1=0, select bank1
  3511  0643  083A               	movf	(sprintf@val+1)^(0+128),w
  3512  0644  1283               	bcf	3,5	;RP0=0, select bank0
  3513  0645  1303               	bcf	3,6	;RP1=0, select bank0
  3514  0646  00A5               	movwf	___lldiv@dividend+1
  3515  0647  1683               	bsf	3,5	;RP0=1, select bank1
  3516  0648  1303               	bcf	3,6	;RP1=0, select bank1
  3517  0649  0839               	movf	sprintf@val^(0+128),w
  3518  064A  1283               	bcf	3,5	;RP0=0, select bank0
  3519  064B  1303               	bcf	3,6	;RP1=0, select bank0
  3520  064C  00A4               	movwf	___lldiv@dividend
  3521  064D  160A  158A  26F4  120A  118A  	fcall	___lldiv
  3522  0652  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0653  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0654  0823               	movf	?___lldiv+3,w
  3525  0655  1683               	bsf	3,5	;RP0=1, select bank1
  3526  0656  1303               	bcf	3,6	;RP1=0, select bank1
  3527  0657  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3528  0658  1283               	bcf	3,5	;RP0=0, select bank0
  3529  0659  1303               	bcf	3,6	;RP1=0, select bank0
  3530  065A  0822               	movf	?___lldiv+2,w
  3531  065B  1683               	bsf	3,5	;RP0=1, select bank1
  3532  065C  1303               	bcf	3,6	;RP1=0, select bank1
  3533  065D  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3534  065E  1283               	bcf	3,5	;RP0=0, select bank0
  3535  065F  1303               	bcf	3,6	;RP1=0, select bank0
  3536  0660  0821               	movf	?___lldiv+1,w
  3537  0661  1683               	bsf	3,5	;RP0=1, select bank1
  3538  0662  1303               	bcf	3,6	;RP1=0, select bank1
  3539  0663  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3540  0664  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0665  1303               	bcf	3,6	;RP1=0, select bank0
  3542  0666  0820               	movf	?___lldiv,w
  3543  0667  1683               	bsf	3,5	;RP0=1, select bank1
  3544  0668  1303               	bcf	3,6	;RP1=0, select bank1
  3545  0669  00BF               	movwf	sprintf@tmpval^(0+128)
  3546  066A                     l4360:
  3547                           
  3548                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3549  066A  3000               	movlw	0
  3550  066B  1283               	bcf	3,5	;RP0=0, select bank0
  3551  066C  1303               	bcf	3,6	;RP1=0, select bank0
  3552  066D  00A3               	movwf	___llmod@divisor+3
  3553  066E  3000               	movlw	0
  3554  066F  00A2               	movwf	___llmod@divisor+2
  3555  0670  3000               	movlw	0
  3556  0671  00A1               	movwf	___llmod@divisor+1
  3557  0672  300A               	movlw	10
  3558  0673  00A0               	movwf	___llmod@divisor
  3559  0674  1683               	bsf	3,5	;RP0=1, select bank1
  3560  0675  1303               	bcf	3,6	;RP1=0, select bank1
  3561  0676  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  3562  0677  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0678  1303               	bcf	3,6	;RP1=0, select bank0
  3564  0679  00A7               	movwf	___llmod@dividend+3
  3565  067A  1683               	bsf	3,5	;RP0=1, select bank1
  3566  067B  1303               	bcf	3,6	;RP1=0, select bank1
  3567  067C  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  3568  067D  1283               	bcf	3,5	;RP0=0, select bank0
  3569  067E  1303               	bcf	3,6	;RP1=0, select bank0
  3570  067F  00A6               	movwf	___llmod@dividend+2
  3571  0680  1683               	bsf	3,5	;RP0=1, select bank1
  3572  0681  1303               	bcf	3,6	;RP1=0, select bank1
  3573  0682  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  3574  0683  1283               	bcf	3,5	;RP0=0, select bank0
  3575  0684  1303               	bcf	3,6	;RP1=0, select bank0
  3576  0685  00A5               	movwf	___llmod@dividend+1
  3577  0686  1683               	bsf	3,5	;RP0=1, select bank1
  3578  0687  1303               	bcf	3,6	;RP1=0, select bank1
  3579  0688  083F               	movf	sprintf@tmpval^(0+128),w
  3580  0689  1283               	bcf	3,5	;RP0=0, select bank0
  3581  068A  1303               	bcf	3,6	;RP1=0, select bank0
  3582  068B  00A4               	movwf	___llmod@dividend
  3583  068C  160A  158A  25E4  120A  118A  	fcall	___llmod
  3584  0691  1283               	bcf	3,5	;RP0=0, select bank0
  3585  0692  1303               	bcf	3,6	;RP1=0, select bank0
  3586  0693  0823               	movf	?___llmod+3,w
  3587  0694  1683               	bsf	3,5	;RP0=1, select bank1
  3588  0695  1303               	bcf	3,6	;RP1=0, select bank1
  3589  0696  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3590  0697  1283               	bcf	3,5	;RP0=0, select bank0
  3591  0698  1303               	bcf	3,6	;RP1=0, select bank0
  3592  0699  0822               	movf	?___llmod+2,w
  3593  069A  1683               	bsf	3,5	;RP0=1, select bank1
  3594  069B  1303               	bcf	3,6	;RP1=0, select bank1
  3595  069C  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3596  069D  1283               	bcf	3,5	;RP0=0, select bank0
  3597  069E  1303               	bcf	3,6	;RP1=0, select bank0
  3598  069F  0821               	movf	?___llmod+1,w
  3599  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  3600  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  3601  06A2  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3602  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  3603  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  3604  06A5  0820               	movf	?___llmod,w
  3605  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  3606  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  3607  06A8  00BF               	movwf	sprintf@tmpval^(0+128)
  3608  06A9                     l4362:
  3609                           
  3610                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3611  06A9  083F               	movf	sprintf@tmpval^(0+128),w
  3612  06AA  3E30               	addlw	48
  3613  06AB  00AD               	movwf	??_sprintf^(0+128)
  3614  06AC  0843               	movf	sprintf@sp^(0+128),w
  3615  06AD  0084               	movwf	4
  3616  06AE  082D               	movf	??_sprintf^(0+128),w
  3617  06AF  1383               	bcf	3,7	;select IRP bank0
  3618  06B0  0080               	movwf	0
  3619  06B1  3001               	movlw	1
  3620  06B2  00AD               	movwf	??_sprintf^(0+128)
  3621  06B3  082D               	movf	??_sprintf^(0+128),w
  3622  06B4  07C3               	addwf	sprintf@sp^(0+128),f
  3623  06B5                     l4364:
  3624                           
  3625                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3626  06B5  084A               	movf	sprintf@c^(0+128),w
  3627  06B6  00AD               	movwf	??_sprintf^(0+128)
  3628  06B7  3001               	movlw	1
  3629  06B8                     u7045:
  3630  06B8  1003               	clrc
  3631  06B9  0DAD               	rlf	??_sprintf^(0+128),f
  3632  06BA  3EFF               	addlw	-1
  3633  06BB  1D03               	skipz
  3634  06BC  2EB8               	goto	u7045
  3635  06BD  1003               	clrc
  3636  06BE  0D2D               	rlf	??_sprintf^(0+128),w
  3637  06BF  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3638  06C0  0084               	movwf	4
  3639  06C1  160A  118A  200A  120A  118A  	fcall	stringdir
  3640  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  3641  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  3642  06C8  00A0               	movwf	___llmod@divisor
  3643  06C9  160A  118A  200A  120A  118A  	fcall	stringdir
  3644  06CE  00A1               	movwf	___llmod@divisor+1
  3645  06CF  160A  118A  200A  120A  118A  	fcall	stringdir
  3646  06D4  00A2               	movwf	___llmod@divisor+2
  3647  06D5  160A  118A  200A  120A  118A  	fcall	stringdir
  3648  06DA  00A3               	movwf	___llmod@divisor+3
  3649  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  3650  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  3651  06DD  083C               	movf	(sprintf@val+3)^(0+128),w
  3652  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  3653  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  3654  06E0  00A7               	movwf	___llmod@dividend+3
  3655  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  3656  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  3657  06E3  083B               	movf	(sprintf@val+2)^(0+128),w
  3658  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  3659  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  3660  06E6  00A6               	movwf	___llmod@dividend+2
  3661  06E7  1683               	bsf	3,5	;RP0=1, select bank1
  3662  06E8  1303               	bcf	3,6	;RP1=0, select bank1
  3663  06E9  083A               	movf	(sprintf@val+1)^(0+128),w
  3664  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  3665  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  3666  06EC  00A5               	movwf	___llmod@dividend+1
  3667  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  3668  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  3669  06EF  0839               	movf	sprintf@val^(0+128),w
  3670  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  3671  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  3672  06F2  00A4               	movwf	___llmod@dividend
  3673  06F3  160A  158A  25E4  120A  118A  	fcall	___llmod
  3674  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  3675  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  3676  06FA  0823               	movf	?___llmod+3,w
  3677  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  3678  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  3679  06FD  00BC               	movwf	(sprintf@val+3)^(0+128)
  3680  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  3681  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  3682  0700  0822               	movf	?___llmod+2,w
  3683  0701  1683               	bsf	3,5	;RP0=1, select bank1
  3684  0702  1303               	bcf	3,6	;RP1=0, select bank1
  3685  0703  00BB               	movwf	(sprintf@val+2)^(0+128)
  3686  0704  1283               	bcf	3,5	;RP0=0, select bank0
  3687  0705  1303               	bcf	3,6	;RP1=0, select bank0
  3688  0706  0821               	movf	?___llmod+1,w
  3689  0707  1683               	bsf	3,5	;RP0=1, select bank1
  3690  0708  1303               	bcf	3,6	;RP1=0, select bank1
  3691  0709  00BA               	movwf	(sprintf@val+1)^(0+128)
  3692  070A  1283               	bcf	3,5	;RP0=0, select bank0
  3693  070B  1303               	bcf	3,6	;RP1=0, select bank0
  3694  070C  0820               	movf	?___llmod,w
  3695  070D  1683               	bsf	3,5	;RP0=1, select bank1
  3696  070E  1303               	bcf	3,6	;RP1=0, select bank1
  3697  070F  00B9               	movwf	sprintf@val^(0+128)
  3698  0710                     l4366:
  3699                           
  3700                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3701  0710  3001               	movlw	1
  3702  0711  02CA               	subwf	sprintf@c^(0+128),f
  3703  0712  0A4A               	incf	sprintf@c^(0+128),w
  3704  0713  1D03               	btfss	3,2
  3705  0714  2F16               	goto	u7051
  3706  0715  2F17               	goto	u7050
  3707  0716                     u7051:
  3708  0716  2E0F               	goto	l4358
  3709  0717                     u7050:
  3710  0717  2F29               	goto	l4374
  3711  0718                     l4368:
  3712                           
  3713                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3714  0718  3030               	movlw	48
  3715  0719  00AD               	movwf	??_sprintf^(0+128)
  3716  071A  0843               	movf	sprintf@sp^(0+128),w
  3717  071B  0084               	movwf	4
  3718  071C  082D               	movf	??_sprintf^(0+128),w
  3719  071D  1383               	bcf	3,7	;select IRP bank0
  3720  071E  0080               	movwf	0
  3721  071F                     l4370:
  3722  071F  3001               	movlw	1
  3723  0720  00AD               	movwf	??_sprintf^(0+128)
  3724  0721  082D               	movf	??_sprintf^(0+128),w
  3725  0722  07C3               	addwf	sprintf@sp^(0+128),f
  3726  0723                     l4372:
  3727                           
  3728                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3729  0723  30FF               	movlw	255
  3730  0724  07C4               	addwf	sprintf@prec^(0+128),f
  3731  0725  1803               	skipnc
  3732  0726  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  3733  0727  30FF               	movlw	255
  3734  0728  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  3735  0729                     l4374:
  3736                           
  3737                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3738  0729  0844               	movf	sprintf@prec^(0+128),w
  3739  072A  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3740  072B  1D03               	btfss	3,2
  3741  072C  2F2E               	goto	u7061
  3742  072D  2F2F               	goto	u7060
  3743  072E                     u7061:
  3744  072E  2F18               	goto	l4368
  3745  072F                     u7060:
  3746  072F  2F75               	goto	l4394
  3747  0730                     l4376:
  3748                           
  3749                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3750  0730  0844               	movf	sprintf@prec^(0+128),w
  3751  0731  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3752  0732  1D03               	btfss	3,2
  3753  0733  2F35               	goto	u7071
  3754  0734  2F36               	goto	u7070
  3755  0735                     u7071:
  3756  0735  2F44               	goto	l381
  3757  0736                     u7070:
  3758  0736                     l4378:
  3759  0736  083C               	movf	(sprintf@val+3)^(0+128),w
  3760  0737  043B               	iorwf	(sprintf@val+2)^(0+128),w
  3761  0738  043A               	iorwf	(sprintf@val+1)^(0+128),w
  3762  0739  0439               	iorwf	sprintf@val^(0+128),w
  3763  073A  1D03               	skipz
  3764  073B  2F3D               	goto	u7081
  3765  073C  2F3E               	goto	u7080
  3766  073D                     u7081:
  3767  073D  2F44               	goto	l381
  3768  073E                     u7080:
  3769  073E                     l4380:
  3770                           
  3771                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3772  073E  3001               	movlw	1
  3773  073F  07C4               	addwf	sprintf@prec^(0+128),f
  3774  0740  1803               	skipnc
  3775  0741  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  3776  0742  3000               	movlw	0
  3777  0743  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  3778  0744                     l381:
  3779                           
  3780                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3781  0744  0845               	movf	(sprintf@prec+1)^(0+128),w
  3782  0745  3A80               	xorlw	128
  3783  0746  3C80               	sublw	128
  3784  0747  1D03               	skipz
  3785  0748  2F4B               	goto	u7095
  3786  0749  0844               	movf	sprintf@prec^(0+128),w
  3787  074A  024A               	subwf	sprintf@c^(0+128),w
  3788  074B                     u7095:
  3789  074B  1803               	skipnc
  3790  074C  2F4E               	goto	u7091
  3791  074D  2F4F               	goto	u7090
  3792  074E                     u7091:
  3793  074E  2F50               	goto	l4384
  3794  074F                     u7090:
  3795  074F                     l4382:
  3796  074F  2F5F               	goto	l4388
  3797  0750                     l4384:
  3798  0750  1683               	bsf	3,5	;RP0=1, select bank1
  3799  0751  1303               	bcf	3,6	;RP1=0, select bank1
  3800  0752  0845               	movf	(sprintf@prec+1)^(0+128),w
  3801  0753  3A80               	xorlw	128
  3802  0754  00AD               	movwf	??_sprintf^(0+128)
  3803  0755  3080               	movlw	128
  3804  0756  022D               	subwf	??_sprintf^(0+128),w
  3805  0757  1D03               	skipz
  3806  0758  2F5B               	goto	u7105
  3807  0759  084A               	movf	sprintf@c^(0+128),w
  3808  075A  0244               	subwf	sprintf@prec^(0+128),w
  3809  075B                     u7105:
  3810  075B  1803               	skipnc
  3811  075C  2F5E               	goto	u7101
  3812  075D  2F5F               	goto	u7100
  3813  075E                     u7101:
  3814  075E  2F5F               	goto	l4388
  3815  075F                     u7100:
  3816  075F                     l4386:
  3817  075F                     l4388:
  3818                           
  3819                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3820  075F  3003               	movlw	3
  3821  0760  1683               	bsf	3,5	;RP0=1, select bank1
  3822  0761  1303               	bcf	3,6	;RP1=0, select bank1
  3823  0762  0537               	andwf	sprintf@flag^(0+128),w
  3824  0763  00AD               	movwf	??_sprintf^(0+128)
  3825  0764  3000               	movlw	0
  3826  0765  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3827  0766  00AE               	movwf	(??_sprintf+1)^(0+128)
  3828  0767  082D               	movf	??_sprintf^(0+128),w
  3829  0768  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3830  0769  1903               	btfsc	3,2
  3831  076A  2F6C               	goto	u7111
  3832  076B  2F6D               	goto	u7110
  3833  076C                     u7111:
  3834  076C  2F75               	goto	l4394
  3835  076D                     u7110:
  3836  076D                     l4390:
  3837                           
  3838                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3839  076D  302D               	movlw	45
  3840  076E  00AD               	movwf	??_sprintf^(0+128)
  3841  076F  0843               	movf	sprintf@sp^(0+128),w
  3842  0770  0084               	movwf	4
  3843  0771  082D               	movf	??_sprintf^(0+128),w
  3844  0772  1383               	bcf	3,7	;select IRP bank0
  3845  0773  0080               	movwf	0
  3846  0774  2837               	goto	l4206
  3847  0775                     l4394:
  3848                           
  3849                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3850  0775  3001               	movlw	1
  3851  0776  07A8               	addwf	sprintf@f^(0+128),f
  3852  0777  30FF               	movlw	-1
  3853  0778  0728               	addwf	sprintf@f^(0+128),w
  3854  0779  0084               	movwf	4
  3855  077A  160A  118A  200A  120A  118A  	fcall	stringdir
  3856  077F  00AD               	movwf	??_sprintf^(0+128)
  3857  0780  082D               	movf	??_sprintf^(0+128),w
  3858  0781  00CA               	movwf	sprintf@c^(0+128)
  3859  0782  084A               	movf	sprintf@c^(0+128),w
  3860  0783  1D03               	btfss	3,2
  3861  0784  2F86               	goto	u7121
  3862  0785  2F87               	goto	u7120
  3863  0786                     u7121:
  3864  0786  282A               	goto	l4202
  3865  0787                     u7120:
  3866  0787                     l4396:
  3867                           
  3868                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3869  0787  0843               	movf	sprintf@sp^(0+128),w
  3870  0788  0084               	movwf	4
  3871  0789  1383               	bcf	3,7	;select IRP bank0
  3872  078A  0180               	clrf	0
  3873  078B                     l387:
  3874  078B  0008               	return
  3875  078C                     __end_of_sprintf:
  3876                           
  3877                           	psect	text2
  3878  0C9D                     __ptext2:	
  3879 ;; *************** function _scale *****************
  3880 ;; Defined at:
  3881 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  scl             1    wreg     char 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  scl             1   55[BANK0 ] char 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  4   37[BANK0 ] char 
  3888 ;; Registers used:
  3889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3895 ;;      Params:         0       4       0       0       0
  3896 ;;      Locals:         0       5       0       0       0
  3897 ;;      Temps:          0      10       0       0       0
  3898 ;;      Totals:         0      19       0       0       0
  3899 ;;Total ram usage:       19 bytes
  3900 ;; Hardware stack levels used: 1
  3901 ;; Hardware stack levels required when called: 4
  3902 ;; This function calls:
  3903 ;;		___awdiv
  3904 ;;		___awmod
  3905 ;;		___flmul
  3906 ;; This function is called by:
  3907 ;;		_sprintf
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911  0C9D                     _scale:	
  3912                           ;psect for function _scale
  3913                           
  3914                           
  3915                           ;incstack = 0
  3916                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3917                           ;scale@scl stored from wreg
  3918  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3919  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3920  0C9F  00D7               	movwf	scale@scl
  3921  0CA0                     l3888:
  3922                           
  3923                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3924  0CA0  1FD7               	btfss	scale@scl,7
  3925  0CA1  2CA3               	goto	u5891
  3926  0CA2  2CA4               	goto	u5890
  3927  0CA3                     u5891:
  3928  0CA3  2E53               	goto	l3910
  3929  0CA4                     u5890:
  3930  0CA4                     l3890:
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3933  0CA4  09D7               	comf	scale@scl,f
  3934  0CA5  0AD7               	incf	scale@scl,f
  3935  0CA6                     l3892:
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3938  0CA6  0857               	movf	scale@scl,w
  3939  0CA7  3A80               	xorlw	128
  3940  0CA8  3E12               	addlw	-238
  3941  0CA9  1C03               	skipc
  3942  0CAA  2CAC               	goto	u5901
  3943  0CAB  2CAD               	goto	u5900
  3944  0CAC                     u5901:
  3945  0CAC  2D97               	goto	l3900
  3946  0CAD                     u5900:
  3947  0CAD                     l3894:
  3948                           
  3949                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3950  0CAD  300A               	movlw	10
  3951  0CAE  00A2               	movwf	___awdiv@divisor
  3952  0CAF  3000               	movlw	0
  3953  0CB0  00A3               	movwf	___awdiv@divisor+1
  3954  0CB1  0857               	movf	scale@scl,w
  3955  0CB2  00F5               	movwf	___awmod@dividend
  3956  0CB3  01F6               	clrf	___awmod@dividend+1
  3957  0CB4  1BF5               	btfsc	___awmod@dividend,7
  3958  0CB5  03F6               	decf	___awmod@dividend+1,f
  3959  0CB6  3064               	movlw	100
  3960  0CB7  00F3               	movwf	___awmod@divisor
  3961  0CB8  3000               	movlw	0
  3962  0CB9  00F4               	movwf	___awmod@divisor+1
  3963  0CBA  160A  158A  263A  120A  158A  	fcall	___awmod
  3964  0CBF  0874               	movf	?___awmod+1,w
  3965  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3967  0CC2  00A5               	movwf	___awdiv@dividend+1
  3968  0CC3  0873               	movf	?___awmod,w
  3969  0CC4  00A4               	movwf	___awdiv@dividend
  3970  0CC5  120A  118A  278C  120A  158A  	fcall	___awdiv
  3971  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3972  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3973  0CCC  0822               	movf	?___awdiv,w
  3974  0CCD  00C9               	movwf	??_scale
  3975  0CCE  3001               	movlw	1
  3976  0CCF                     u5915:
  3977  0CCF  1003               	clrc
  3978  0CD0  0DC9               	rlf	??_scale,f
  3979  0CD1  3EFF               	addlw	-1
  3980  0CD2  1D03               	skipz
  3981  0CD3  2CCF               	goto	u5915
  3982  0CD4  1003               	clrc
  3983  0CD5  0D49               	rlf	??_scale,w
  3984  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3985  0CD7  0084               	movwf	4
  3986  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  3987  0CDD  00CA               	movwf	??_scale+1
  3988  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  3989  0CE3  00CB               	movwf	??_scale+2
  3990  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  3991  0CE9  00CC               	movwf	??_scale+3
  3992  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  3993  0CEF  00CD               	movwf	??_scale+4
  3994  0CF0  084D               	movf	??_scale+4,w
  3995  0CF1  00AE               	movwf	___flmul@b+3
  3996  0CF2  084C               	movf	??_scale+3,w
  3997  0CF3  00AD               	movwf	___flmul@b+2
  3998  0CF4  084B               	movf	??_scale+2,w
  3999  0CF5  00AC               	movwf	___flmul@b+1
  4000  0CF6  084A               	movf	??_scale+1,w
  4001  0CF7  00AB               	movwf	___flmul@b
  4002  0CF8  3064               	movlw	100
  4003  0CF9  00A2               	movwf	___awdiv@divisor
  4004  0CFA  3000               	movlw	0
  4005  0CFB  00A3               	movwf	___awdiv@divisor+1
  4006  0CFC  0857               	movf	scale@scl,w
  4007  0CFD  00A4               	movwf	___awdiv@dividend
  4008  0CFE  01A5               	clrf	___awdiv@dividend+1
  4009  0CFF  1BA4               	btfsc	___awdiv@dividend,7
  4010  0D00  03A5               	decf	___awdiv@dividend+1,f
  4011  0D01  120A  118A  278C  120A  158A  	fcall	___awdiv
  4012  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  4013  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  4014  0D08  0822               	movf	?___awdiv,w
  4015  0D09  00CE               	movwf	??_scale+5
  4016  0D0A  3001               	movlw	1
  4017  0D0B                     u5925:
  4018  0D0B  1003               	clrc
  4019  0D0C  0DCE               	rlf	??_scale+5,f
  4020  0D0D  3EFF               	addlw	-1
  4021  0D0E  1D03               	skipz
  4022  0D0F  2D0B               	goto	u5925
  4023  0D10  1003               	clrc
  4024  0D11  0D4E               	rlf	??_scale+5,w
  4025  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4026  0D13  0084               	movwf	4
  4027  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  4028  0D19  00CF               	movwf	??_scale+6
  4029  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  4030  0D1F  00D0               	movwf	??_scale+7
  4031  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  4032  0D25  00D1               	movwf	??_scale+8
  4033  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  4034  0D2B  00D2               	movwf	??_scale+9
  4035  0D2C  0852               	movf	??_scale+9,w
  4036  0D2D  00B2               	movwf	___flmul@a+3
  4037  0D2E  0851               	movf	??_scale+8,w
  4038  0D2F  00B1               	movwf	___flmul@a+2
  4039  0D30  0850               	movf	??_scale+7,w
  4040  0D31  00B0               	movwf	___flmul@a+1
  4041  0D32  084F               	movf	??_scale+6,w
  4042  0D33  00AF               	movwf	___flmul@a
  4043  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  4044  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  4045  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  4046  0D3B  082E               	movf	?___flmul+3,w
  4047  0D3C  00D6               	movwf	_scale$1177+3
  4048  0D3D  082D               	movf	?___flmul+2,w
  4049  0D3E  00D5               	movwf	_scale$1177+2
  4050  0D3F  082C               	movf	?___flmul+1,w
  4051  0D40  00D4               	movwf	_scale$1177+1
  4052  0D41  082B               	movf	?___flmul,w
  4053  0D42  00D3               	movwf	_scale$1177
  4054                           
  4055                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4056  0D43  300A               	movlw	10
  4057  0D44  00F3               	movwf	___awmod@divisor
  4058  0D45  3000               	movlw	0
  4059  0D46  00F4               	movwf	___awmod@divisor+1
  4060  0D47  0857               	movf	scale@scl,w
  4061  0D48  00F5               	movwf	___awmod@dividend
  4062  0D49  01F6               	clrf	___awmod@dividend+1
  4063  0D4A  1BF5               	btfsc	___awmod@dividend,7
  4064  0D4B  03F6               	decf	___awmod@dividend+1,f
  4065  0D4C  160A  158A  263A  120A  158A  	fcall	___awmod
  4066  0D51  0873               	movf	?___awmod,w
  4067  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  4068  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  4069  0D54  00C9               	movwf	??_scale
  4070  0D55  3001               	movlw	1
  4071  0D56                     u5935:
  4072  0D56  1003               	clrc
  4073  0D57  0DC9               	rlf	??_scale,f
  4074  0D58  3EFF               	addlw	-1
  4075  0D59  1D03               	skipz
  4076  0D5A  2D56               	goto	u5935
  4077  0D5B  1003               	clrc
  4078  0D5C  0D49               	rlf	??_scale,w
  4079  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4080  0D5E  0084               	movwf	4
  4081  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  4082  0D64  00CA               	movwf	??_scale+1
  4083  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  4084  0D6A  00CB               	movwf	??_scale+2
  4085  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  4086  0D70  00CC               	movwf	??_scale+3
  4087  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  4088  0D76  00CD               	movwf	??_scale+4
  4089  0D77  084D               	movf	??_scale+4,w
  4090  0D78  00AE               	movwf	___flmul@b+3
  4091  0D79  084C               	movf	??_scale+3,w
  4092  0D7A  00AD               	movwf	___flmul@b+2
  4093  0D7B  084B               	movf	??_scale+2,w
  4094  0D7C  00AC               	movwf	___flmul@b+1
  4095  0D7D  084A               	movf	??_scale+1,w
  4096  0D7E  00AB               	movwf	___flmul@b
  4097  0D7F  0856               	movf	_scale$1177+3,w
  4098  0D80  00B2               	movwf	___flmul@a+3
  4099  0D81  0855               	movf	_scale$1177+2,w
  4100  0D82  00B1               	movwf	___flmul@a+2
  4101  0D83  0854               	movf	_scale$1177+1,w
  4102  0D84  00B0               	movwf	___flmul@a+1
  4103  0D85  0853               	movf	_scale$1177,w
  4104  0D86  00AF               	movwf	___flmul@a
  4105  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  4106  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  4107  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  4108  0D8E  082E               	movf	?___flmul+3,w
  4109  0D8F  00C8               	movwf	?_scale+3
  4110  0D90  082D               	movf	?___flmul+2,w
  4111  0D91  00C7               	movwf	?_scale+2
  4112  0D92  082C               	movf	?___flmul+1,w
  4113  0D93  00C6               	movwf	?_scale+1
  4114  0D94  082B               	movf	?___flmul,w
  4115  0D95  00C5               	movwf	?_scale
  4116  0D96  2FFF               	goto	l321
  4117  0D97                     l3900:
  4118  0D97  0857               	movf	scale@scl,w
  4119  0D98  3A80               	xorlw	128
  4120  0D99  3E75               	addlw	-139
  4121  0D9A  1C03               	skipc
  4122  0D9B  2D9D               	goto	u5941
  4123  0D9C  2D9E               	goto	u5940
  4124  0D9D                     u5941:
  4125  0D9D  2E26               	goto	l3906
  4126  0D9E                     u5940:
  4127  0D9E                     l3902:
  4128                           
  4129                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4130  0D9E  300A               	movlw	10
  4131  0D9F  00F3               	movwf	___awmod@divisor
  4132  0DA0  3000               	movlw	0
  4133  0DA1  00F4               	movwf	___awmod@divisor+1
  4134  0DA2  0857               	movf	scale@scl,w
  4135  0DA3  00F5               	movwf	___awmod@dividend
  4136  0DA4  01F6               	clrf	___awmod@dividend+1
  4137  0DA5  1BF5               	btfsc	___awmod@dividend,7
  4138  0DA6  03F6               	decf	___awmod@dividend+1,f
  4139  0DA7  160A  158A  263A  120A  158A  	fcall	___awmod
  4140  0DAC  0873               	movf	?___awmod,w
  4141  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4142  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4143  0DAF  00C9               	movwf	??_scale
  4144  0DB0  3001               	movlw	1
  4145  0DB1                     u5955:
  4146  0DB1  1003               	clrc
  4147  0DB2  0DC9               	rlf	??_scale,f
  4148  0DB3  3EFF               	addlw	-1
  4149  0DB4  1D03               	skipz
  4150  0DB5  2DB1               	goto	u5955
  4151  0DB6  1003               	clrc
  4152  0DB7  0D49               	rlf	??_scale,w
  4153  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4154  0DB9  0084               	movwf	4
  4155  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  4156  0DBF  00CA               	movwf	??_scale+1
  4157  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  4158  0DC5  00CB               	movwf	??_scale+2
  4159  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  4160  0DCB  00CC               	movwf	??_scale+3
  4161  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  4162  0DD1  00CD               	movwf	??_scale+4
  4163  0DD2  084D               	movf	??_scale+4,w
  4164  0DD3  00AE               	movwf	___flmul@b+3
  4165  0DD4  084C               	movf	??_scale+3,w
  4166  0DD5  00AD               	movwf	___flmul@b+2
  4167  0DD6  084B               	movf	??_scale+2,w
  4168  0DD7  00AC               	movwf	___flmul@b+1
  4169  0DD8  084A               	movf	??_scale+1,w
  4170  0DD9  00AB               	movwf	___flmul@b
  4171  0DDA  300A               	movlw	10
  4172  0DDB  00A2               	movwf	___awdiv@divisor
  4173  0DDC  3000               	movlw	0
  4174  0DDD  00A3               	movwf	___awdiv@divisor+1
  4175  0DDE  0857               	movf	scale@scl,w
  4176  0DDF  00A4               	movwf	___awdiv@dividend
  4177  0DE0  01A5               	clrf	___awdiv@dividend+1
  4178  0DE1  1BA4               	btfsc	___awdiv@dividend,7
  4179  0DE2  03A5               	decf	___awdiv@dividend+1,f
  4180  0DE3  120A  118A  278C  120A  158A  	fcall	___awdiv
  4181  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4182  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4183  0DEA  0822               	movf	?___awdiv,w
  4184  0DEB  00CE               	movwf	??_scale+5
  4185  0DEC  3001               	movlw	1
  4186  0DED                     u5965:
  4187  0DED  1003               	clrc
  4188  0DEE  0DCE               	rlf	??_scale+5,f
  4189  0DEF  3EFF               	addlw	-1
  4190  0DF0  1D03               	skipz
  4191  0DF1  2DED               	goto	u5965
  4192  0DF2  1003               	clrc
  4193  0DF3  0D4E               	rlf	??_scale+5,w
  4194  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4195  0DF5  0084               	movwf	4
  4196  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  4197  0DFB  00CF               	movwf	??_scale+6
  4198  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  4199  0E01  00D0               	movwf	??_scale+7
  4200  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  4201  0E07  00D1               	movwf	??_scale+8
  4202  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  4203  0E0D  00D2               	movwf	??_scale+9
  4204  0E0E  0852               	movf	??_scale+9,w
  4205  0E0F  00B2               	movwf	___flmul@a+3
  4206  0E10  0851               	movf	??_scale+8,w
  4207  0E11  00B1               	movwf	___flmul@a+2
  4208  0E12  0850               	movf	??_scale+7,w
  4209  0E13  00B0               	movwf	___flmul@a+1
  4210  0E14  084F               	movf	??_scale+6,w
  4211  0E15  00AF               	movwf	___flmul@a
  4212  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  4213  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4214  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4215  0E1D  082E               	movf	?___flmul+3,w
  4216  0E1E  00C8               	movwf	?_scale+3
  4217  0E1F  082D               	movf	?___flmul+2,w
  4218  0E20  00C7               	movwf	?_scale+2
  4219  0E21  082C               	movf	?___flmul+1,w
  4220  0E22  00C6               	movwf	?_scale+1
  4221  0E23  082B               	movf	?___flmul,w
  4222  0E24  00C5               	movwf	?_scale
  4223  0E25  2FFF               	goto	l321
  4224  0E26                     l3906:
  4225                           
  4226                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4227  0E26  0857               	movf	scale@scl,w
  4228  0E27  00C9               	movwf	??_scale
  4229  0E28  3001               	movlw	1
  4230  0E29                     u5975:
  4231  0E29  1003               	clrc
  4232  0E2A  0DC9               	rlf	??_scale,f
  4233  0E2B  3EFF               	addlw	-1
  4234  0E2C  1D03               	skipz
  4235  0E2D  2E29               	goto	u5975
  4236  0E2E  1003               	clrc
  4237  0E2F  0D49               	rlf	??_scale,w
  4238  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4239  0E31  0084               	movwf	4
  4240  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  4241  0E37  00CA               	movwf	??_scale+1
  4242  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  4243  0E3D  00CB               	movwf	??_scale+2
  4244  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  4245  0E43  00CC               	movwf	??_scale+3
  4246  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  4247  0E49  00CD               	movwf	??_scale+4
  4248  0E4A  084D               	movf	??_scale+4,w
  4249  0E4B  00C8               	movwf	?_scale+3
  4250  0E4C  084C               	movf	??_scale+3,w
  4251  0E4D  00C7               	movwf	?_scale+2
  4252  0E4E  084B               	movf	??_scale+2,w
  4253  0E4F  00C6               	movwf	?_scale+1
  4254  0E50  084A               	movf	??_scale+1,w
  4255  0E51  00C5               	movwf	?_scale
  4256  0E52  2FFF               	goto	l321
  4257  0E53                     l3910:
  4258                           
  4259                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4260  0E53  0857               	movf	scale@scl,w
  4261  0E54  3A80               	xorlw	128
  4262  0E55  3E12               	addlw	-238
  4263  0E56  1C03               	skipc
  4264  0E57  2E59               	goto	u5981
  4265  0E58  2E5A               	goto	u5980
  4266  0E59                     u5981:
  4267  0E59  2F44               	goto	l3918
  4268  0E5A                     u5980:
  4269  0E5A                     l3912:
  4270                           
  4271                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4272  0E5A  300A               	movlw	10
  4273  0E5B  00A2               	movwf	___awdiv@divisor
  4274  0E5C  3000               	movlw	0
  4275  0E5D  00A3               	movwf	___awdiv@divisor+1
  4276  0E5E  0857               	movf	scale@scl,w
  4277  0E5F  00F5               	movwf	___awmod@dividend
  4278  0E60  01F6               	clrf	___awmod@dividend+1
  4279  0E61  1BF5               	btfsc	___awmod@dividend,7
  4280  0E62  03F6               	decf	___awmod@dividend+1,f
  4281  0E63  3064               	movlw	100
  4282  0E64  00F3               	movwf	___awmod@divisor
  4283  0E65  3000               	movlw	0
  4284  0E66  00F4               	movwf	___awmod@divisor+1
  4285  0E67  160A  158A  263A  120A  158A  	fcall	___awmod
  4286  0E6C  0874               	movf	?___awmod+1,w
  4287  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4288  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4289  0E6F  00A5               	movwf	___awdiv@dividend+1
  4290  0E70  0873               	movf	?___awmod,w
  4291  0E71  00A4               	movwf	___awdiv@dividend
  4292  0E72  120A  118A  278C  120A  158A  	fcall	___awdiv
  4293  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4294  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4295  0E79  0822               	movf	?___awdiv,w
  4296  0E7A  00C9               	movwf	??_scale
  4297  0E7B  3001               	movlw	1
  4298  0E7C                     u5995:
  4299  0E7C  1003               	clrc
  4300  0E7D  0DC9               	rlf	??_scale,f
  4301  0E7E  3EFF               	addlw	-1
  4302  0E7F  1D03               	skipz
  4303  0E80  2E7C               	goto	u5995
  4304  0E81  1003               	clrc
  4305  0E82  0D49               	rlf	??_scale,w
  4306  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4307  0E84  0084               	movwf	4
  4308  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  4309  0E8A  00CA               	movwf	??_scale+1
  4310  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  4311  0E90  00CB               	movwf	??_scale+2
  4312  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  4313  0E96  00CC               	movwf	??_scale+3
  4314  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  4315  0E9C  00CD               	movwf	??_scale+4
  4316  0E9D  084D               	movf	??_scale+4,w
  4317  0E9E  00AE               	movwf	___flmul@b+3
  4318  0E9F  084C               	movf	??_scale+3,w
  4319  0EA0  00AD               	movwf	___flmul@b+2
  4320  0EA1  084B               	movf	??_scale+2,w
  4321  0EA2  00AC               	movwf	___flmul@b+1
  4322  0EA3  084A               	movf	??_scale+1,w
  4323  0EA4  00AB               	movwf	___flmul@b
  4324  0EA5  3064               	movlw	100
  4325  0EA6  00A2               	movwf	___awdiv@divisor
  4326  0EA7  3000               	movlw	0
  4327  0EA8  00A3               	movwf	___awdiv@divisor+1
  4328  0EA9  0857               	movf	scale@scl,w
  4329  0EAA  00A4               	movwf	___awdiv@dividend
  4330  0EAB  01A5               	clrf	___awdiv@dividend+1
  4331  0EAC  1BA4               	btfsc	___awdiv@dividend,7
  4332  0EAD  03A5               	decf	___awdiv@dividend+1,f
  4333  0EAE  120A  118A  278C  120A  158A  	fcall	___awdiv
  4334  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4335  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4336  0EB5  0822               	movf	?___awdiv,w
  4337  0EB6  00CE               	movwf	??_scale+5
  4338  0EB7  3001               	movlw	1
  4339  0EB8                     u6005:
  4340  0EB8  1003               	clrc
  4341  0EB9  0DCE               	rlf	??_scale+5,f
  4342  0EBA  3EFF               	addlw	-1
  4343  0EBB  1D03               	skipz
  4344  0EBC  2EB8               	goto	u6005
  4345  0EBD  1003               	clrc
  4346  0EBE  0D4E               	rlf	??_scale+5,w
  4347  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4348  0EC0  0084               	movwf	4
  4349  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  4350  0EC6  00CF               	movwf	??_scale+6
  4351  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  4352  0ECC  00D0               	movwf	??_scale+7
  4353  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  4354  0ED2  00D1               	movwf	??_scale+8
  4355  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  4356  0ED8  00D2               	movwf	??_scale+9
  4357  0ED9  0852               	movf	??_scale+9,w
  4358  0EDA  00B2               	movwf	___flmul@a+3
  4359  0EDB  0851               	movf	??_scale+8,w
  4360  0EDC  00B1               	movwf	___flmul@a+2
  4361  0EDD  0850               	movf	??_scale+7,w
  4362  0EDE  00B0               	movwf	___flmul@a+1
  4363  0EDF  084F               	movf	??_scale+6,w
  4364  0EE0  00AF               	movwf	___flmul@a
  4365  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4366  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4367  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4368  0EE8  082E               	movf	?___flmul+3,w
  4369  0EE9  00D6               	movwf	_scale$1177+3
  4370  0EEA  082D               	movf	?___flmul+2,w
  4371  0EEB  00D5               	movwf	_scale$1177+2
  4372  0EEC  082C               	movf	?___flmul+1,w
  4373  0EED  00D4               	movwf	_scale$1177+1
  4374  0EEE  082B               	movf	?___flmul,w
  4375  0EEF  00D3               	movwf	_scale$1177
  4376                           
  4377                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4378  0EF0  300A               	movlw	10
  4379  0EF1  00F3               	movwf	___awmod@divisor
  4380  0EF2  3000               	movlw	0
  4381  0EF3  00F4               	movwf	___awmod@divisor+1
  4382  0EF4  0857               	movf	scale@scl,w
  4383  0EF5  00F5               	movwf	___awmod@dividend
  4384  0EF6  01F6               	clrf	___awmod@dividend+1
  4385  0EF7  1BF5               	btfsc	___awmod@dividend,7
  4386  0EF8  03F6               	decf	___awmod@dividend+1,f
  4387  0EF9  160A  158A  263A  120A  158A  	fcall	___awmod
  4388  0EFE  0873               	movf	?___awmod,w
  4389  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4390  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4391  0F01  00C9               	movwf	??_scale
  4392  0F02  3001               	movlw	1
  4393  0F03                     u6015:
  4394  0F03  1003               	clrc
  4395  0F04  0DC9               	rlf	??_scale,f
  4396  0F05  3EFF               	addlw	-1
  4397  0F06  1D03               	skipz
  4398  0F07  2F03               	goto	u6015
  4399  0F08  1003               	clrc
  4400  0F09  0D49               	rlf	??_scale,w
  4401  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4402  0F0B  0084               	movwf	4
  4403  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4404  0F11  00CA               	movwf	??_scale+1
  4405  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  4406  0F17  00CB               	movwf	??_scale+2
  4407  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  4408  0F1D  00CC               	movwf	??_scale+3
  4409  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  4410  0F23  00CD               	movwf	??_scale+4
  4411  0F24  084D               	movf	??_scale+4,w
  4412  0F25  00AE               	movwf	___flmul@b+3
  4413  0F26  084C               	movf	??_scale+3,w
  4414  0F27  00AD               	movwf	___flmul@b+2
  4415  0F28  084B               	movf	??_scale+2,w
  4416  0F29  00AC               	movwf	___flmul@b+1
  4417  0F2A  084A               	movf	??_scale+1,w
  4418  0F2B  00AB               	movwf	___flmul@b
  4419  0F2C  0856               	movf	_scale$1177+3,w
  4420  0F2D  00B2               	movwf	___flmul@a+3
  4421  0F2E  0855               	movf	_scale$1177+2,w
  4422  0F2F  00B1               	movwf	___flmul@a+2
  4423  0F30  0854               	movf	_scale$1177+1,w
  4424  0F31  00B0               	movwf	___flmul@a+1
  4425  0F32  0853               	movf	_scale$1177,w
  4426  0F33  00AF               	movwf	___flmul@a
  4427  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4428  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4429  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4430  0F3B  082E               	movf	?___flmul+3,w
  4431  0F3C  00C8               	movwf	?_scale+3
  4432  0F3D  082D               	movf	?___flmul+2,w
  4433  0F3E  00C7               	movwf	?_scale+2
  4434  0F3F  082C               	movf	?___flmul+1,w
  4435  0F40  00C6               	movwf	?_scale+1
  4436  0F41  082B               	movf	?___flmul,w
  4437  0F42  00C5               	movwf	?_scale
  4438  0F43  2FFF               	goto	l321
  4439  0F44                     l3918:
  4440  0F44  0857               	movf	scale@scl,w
  4441  0F45  3A80               	xorlw	128
  4442  0F46  3E75               	addlw	-139
  4443  0F47  1C03               	skipc
  4444  0F48  2F4A               	goto	u6021
  4445  0F49  2F4B               	goto	u6020
  4446  0F4A                     u6021:
  4447  0F4A  2FD3               	goto	l3924
  4448  0F4B                     u6020:
  4449  0F4B                     l3920:
  4450                           
  4451                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4452  0F4B  300A               	movlw	10
  4453  0F4C  00F3               	movwf	___awmod@divisor
  4454  0F4D  3000               	movlw	0
  4455  0F4E  00F4               	movwf	___awmod@divisor+1
  4456  0F4F  0857               	movf	scale@scl,w
  4457  0F50  00F5               	movwf	___awmod@dividend
  4458  0F51  01F6               	clrf	___awmod@dividend+1
  4459  0F52  1BF5               	btfsc	___awmod@dividend,7
  4460  0F53  03F6               	decf	___awmod@dividend+1,f
  4461  0F54  160A  158A  263A  120A  158A  	fcall	___awmod
  4462  0F59  0873               	movf	?___awmod,w
  4463  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4464  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4465  0F5C  00C9               	movwf	??_scale
  4466  0F5D  3001               	movlw	1
  4467  0F5E                     u6035:
  4468  0F5E  1003               	clrc
  4469  0F5F  0DC9               	rlf	??_scale,f
  4470  0F60  3EFF               	addlw	-1
  4471  0F61  1D03               	skipz
  4472  0F62  2F5E               	goto	u6035
  4473  0F63  1003               	clrc
  4474  0F64  0D49               	rlf	??_scale,w
  4475  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4476  0F66  0084               	movwf	4
  4477  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  4478  0F6C  00CA               	movwf	??_scale+1
  4479  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4480  0F72  00CB               	movwf	??_scale+2
  4481  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  4482  0F78  00CC               	movwf	??_scale+3
  4483  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  4484  0F7E  00CD               	movwf	??_scale+4
  4485  0F7F  084D               	movf	??_scale+4,w
  4486  0F80  00AE               	movwf	___flmul@b+3
  4487  0F81  084C               	movf	??_scale+3,w
  4488  0F82  00AD               	movwf	___flmul@b+2
  4489  0F83  084B               	movf	??_scale+2,w
  4490  0F84  00AC               	movwf	___flmul@b+1
  4491  0F85  084A               	movf	??_scale+1,w
  4492  0F86  00AB               	movwf	___flmul@b
  4493  0F87  300A               	movlw	10
  4494  0F88  00A2               	movwf	___awdiv@divisor
  4495  0F89  3000               	movlw	0
  4496  0F8A  00A3               	movwf	___awdiv@divisor+1
  4497  0F8B  0857               	movf	scale@scl,w
  4498  0F8C  00A4               	movwf	___awdiv@dividend
  4499  0F8D  01A5               	clrf	___awdiv@dividend+1
  4500  0F8E  1BA4               	btfsc	___awdiv@dividend,7
  4501  0F8F  03A5               	decf	___awdiv@dividend+1,f
  4502  0F90  120A  118A  278C  120A  158A  	fcall	___awdiv
  4503  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4504  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4505  0F97  0822               	movf	?___awdiv,w
  4506  0F98  00CE               	movwf	??_scale+5
  4507  0F99  3001               	movlw	1
  4508  0F9A                     u6045:
  4509  0F9A  1003               	clrc
  4510  0F9B  0DCE               	rlf	??_scale+5,f
  4511  0F9C  3EFF               	addlw	-1
  4512  0F9D  1D03               	skipz
  4513  0F9E  2F9A               	goto	u6045
  4514  0F9F  1003               	clrc
  4515  0FA0  0D4E               	rlf	??_scale+5,w
  4516  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4517  0FA2  0084               	movwf	4
  4518  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4519  0FA8  00CF               	movwf	??_scale+6
  4520  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4521  0FAE  00D0               	movwf	??_scale+7
  4522  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4523  0FB4  00D1               	movwf	??_scale+8
  4524  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4525  0FBA  00D2               	movwf	??_scale+9
  4526  0FBB  0852               	movf	??_scale+9,w
  4527  0FBC  00B2               	movwf	___flmul@a+3
  4528  0FBD  0851               	movf	??_scale+8,w
  4529  0FBE  00B1               	movwf	___flmul@a+2
  4530  0FBF  0850               	movf	??_scale+7,w
  4531  0FC0  00B0               	movwf	___flmul@a+1
  4532  0FC1  084F               	movf	??_scale+6,w
  4533  0FC2  00AF               	movwf	___flmul@a
  4534  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4535  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4536  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4537  0FCA  082E               	movf	?___flmul+3,w
  4538  0FCB  00C8               	movwf	?_scale+3
  4539  0FCC  082D               	movf	?___flmul+2,w
  4540  0FCD  00C7               	movwf	?_scale+2
  4541  0FCE  082C               	movf	?___flmul+1,w
  4542  0FCF  00C6               	movwf	?_scale+1
  4543  0FD0  082B               	movf	?___flmul,w
  4544  0FD1  00C5               	movwf	?_scale
  4545  0FD2  2FFF               	goto	l321
  4546  0FD3                     l3924:
  4547                           
  4548                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4549  0FD3  0857               	movf	scale@scl,w
  4550  0FD4  00C9               	movwf	??_scale
  4551  0FD5  3001               	movlw	1
  4552  0FD6                     u6055:
  4553  0FD6  1003               	clrc
  4554  0FD7  0DC9               	rlf	??_scale,f
  4555  0FD8  3EFF               	addlw	-1
  4556  0FD9  1D03               	skipz
  4557  0FDA  2FD6               	goto	u6055
  4558  0FDB  1003               	clrc
  4559  0FDC  0D49               	rlf	??_scale,w
  4560  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4561  0FDE  0084               	movwf	4
  4562  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  4563  0FE4  00CA               	movwf	??_scale+1
  4564  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4565  0FEA  00CB               	movwf	??_scale+2
  4566  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  4567  0FF0  00CC               	movwf	??_scale+3
  4568  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4569  0FF6  00CD               	movwf	??_scale+4
  4570  0FF7  084D               	movf	??_scale+4,w
  4571  0FF8  00C8               	movwf	?_scale+3
  4572  0FF9  084C               	movf	??_scale+3,w
  4573  0FFA  00C7               	movwf	?_scale+2
  4574  0FFB  084B               	movf	??_scale+2,w
  4575  0FFC  00C6               	movwf	?_scale+1
  4576  0FFD  084A               	movf	??_scale+1,w
  4577  0FFE  00C5               	movwf	?_scale
  4578  0FFF                     l321:
  4579  0FFF  0008               	return
  4580  1000                     __end_of_scale:
  4581                           
  4582                           	psect	text3
  4583  1E3A                     __ptext3:	
  4584 ;; *************** function ___awmod *****************
  4585 ;; Defined at:
  4586 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awmod.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  divisor         2    3[COMMON] int 
  4589 ;;  dividend        2    5[COMMON] int 
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;  sign            1    1[BANK0 ] unsigned char 
  4592 ;;  counter         1    0[BANK0 ] unsigned char 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  2    3[COMMON] int 
  4595 ;; Registers used:
  4596 ;;		wreg, status,2, status,0
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4602 ;;      Params:         4       0       0       0       0
  4603 ;;      Locals:         0       2       0       0       0
  4604 ;;      Temps:          1       0       0       0       0
  4605 ;;      Totals:         5       2       0       0       0
  4606 ;;Total ram usage:        7 bytes
  4607 ;; Hardware stack levels used: 1
  4608 ;; Hardware stack levels required when called: 2
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		_scale
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616  1E3A                     ___awmod:	
  4617                           ;psect for function ___awmod
  4618                           
  4619  1E3A                     l3764:	
  4620                           ;incstack = 0
  4621                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4622                           
  4623  1E3A  1283               	bcf	3,5	;RP0=0, select bank0
  4624  1E3B  1303               	bcf	3,6	;RP1=0, select bank0
  4625  1E3C  01A1               	clrf	___awmod@sign
  4626  1E3D                     l3766:
  4627  1E3D  1FF6               	btfss	___awmod@dividend+1,7
  4628  1E3E  2E40               	goto	u5591
  4629  1E3F  2E41               	goto	u5590
  4630  1E40                     u5591:
  4631  1E40  2E48               	goto	l3772
  4632  1E41                     u5590:
  4633  1E41                     l3768:
  4634  1E41  09F5               	comf	___awmod@dividend,f
  4635  1E42  09F6               	comf	___awmod@dividend+1,f
  4636  1E43  0AF5               	incf	___awmod@dividend,f
  4637  1E44  1903               	skipnz
  4638  1E45  0AF6               	incf	___awmod@dividend+1,f
  4639  1E46                     l3770:
  4640  1E46  01A1               	clrf	___awmod@sign
  4641  1E47  0AA1               	incf	___awmod@sign,f
  4642  1E48                     l3772:
  4643  1E48  1FF4               	btfss	___awmod@divisor+1,7
  4644  1E49  2E4B               	goto	u5601
  4645  1E4A  2E4C               	goto	u5600
  4646  1E4B                     u5601:
  4647  1E4B  2E51               	goto	l3776
  4648  1E4C                     u5600:
  4649  1E4C                     l3774:
  4650  1E4C  09F3               	comf	___awmod@divisor,f
  4651  1E4D  09F4               	comf	___awmod@divisor+1,f
  4652  1E4E  0AF3               	incf	___awmod@divisor,f
  4653  1E4F  1903               	skipnz
  4654  1E50  0AF4               	incf	___awmod@divisor+1,f
  4655  1E51                     l3776:
  4656  1E51  0873               	movf	___awmod@divisor,w
  4657  1E52  0474               	iorwf	___awmod@divisor+1,w
  4658  1E53  1903               	btfsc	3,2
  4659  1E54  2E56               	goto	u5611
  4660  1E55  2E57               	goto	u5610
  4661  1E56                     u5611:
  4662  1E56  2E86               	goto	l3794
  4663  1E57                     u5610:
  4664  1E57                     l3778:
  4665  1E57  01A0               	clrf	___awmod@counter
  4666  1E58  0AA0               	incf	___awmod@counter,f
  4667  1E59  2E65               	goto	l3784
  4668  1E5A                     l3780:
  4669  1E5A  3001               	movlw	1
  4670  1E5B                     u5625:
  4671  1E5B  1003               	clrc
  4672  1E5C  0DF3               	rlf	___awmod@divisor,f
  4673  1E5D  0DF4               	rlf	___awmod@divisor+1,f
  4674  1E5E  3EFF               	addlw	-1
  4675  1E5F  1D03               	skipz
  4676  1E60  2E5B               	goto	u5625
  4677  1E61                     l3782:
  4678  1E61  3001               	movlw	1
  4679  1E62  00F7               	movwf	??___awmod
  4680  1E63  0877               	movf	??___awmod,w
  4681  1E64  07A0               	addwf	___awmod@counter,f
  4682  1E65                     l3784:
  4683  1E65  1FF4               	btfss	___awmod@divisor+1,7
  4684  1E66  2E68               	goto	u5631
  4685  1E67  2E69               	goto	u5630
  4686  1E68                     u5631:
  4687  1E68  2E5A               	goto	l3780
  4688  1E69                     u5630:
  4689  1E69                     l3786:
  4690  1E69  0874               	movf	___awmod@divisor+1,w
  4691  1E6A  0276               	subwf	___awmod@dividend+1,w
  4692  1E6B  1D03               	skipz
  4693  1E6C  2E6F               	goto	u5645
  4694  1E6D  0873               	movf	___awmod@divisor,w
  4695  1E6E  0275               	subwf	___awmod@dividend,w
  4696  1E6F                     u5645:
  4697  1E6F  1C03               	skipc
  4698  1E70  2E72               	goto	u5641
  4699  1E71  2E73               	goto	u5640
  4700  1E72                     u5641:
  4701  1E72  2E79               	goto	l3790
  4702  1E73                     u5640:
  4703  1E73                     l3788:
  4704  1E73  0873               	movf	___awmod@divisor,w
  4705  1E74  02F5               	subwf	___awmod@dividend,f
  4706  1E75  0874               	movf	___awmod@divisor+1,w
  4707  1E76  1C03               	skipc
  4708  1E77  03F6               	decf	___awmod@dividend+1,f
  4709  1E78  02F6               	subwf	___awmod@dividend+1,f
  4710  1E79                     l3790:
  4711  1E79  3001               	movlw	1
  4712  1E7A                     u5655:
  4713  1E7A  1003               	clrc
  4714  1E7B  0CF4               	rrf	___awmod@divisor+1,f
  4715  1E7C  0CF3               	rrf	___awmod@divisor,f
  4716  1E7D  3EFF               	addlw	-1
  4717  1E7E  1D03               	skipz
  4718  1E7F  2E7A               	goto	u5655
  4719  1E80                     l3792:
  4720  1E80  3001               	movlw	1
  4721  1E81  02A0               	subwf	___awmod@counter,f
  4722  1E82  1D03               	btfss	3,2
  4723  1E83  2E85               	goto	u5661
  4724  1E84  2E86               	goto	u5660
  4725  1E85                     u5661:
  4726  1E85  2E69               	goto	l3786
  4727  1E86                     u5660:
  4728  1E86                     l3794:
  4729  1E86  0821               	movf	___awmod@sign,w
  4730  1E87  1903               	btfsc	3,2
  4731  1E88  2E8A               	goto	u5671
  4732  1E89  2E8B               	goto	u5670
  4733  1E8A                     u5671:
  4734  1E8A  2E90               	goto	l3798
  4735  1E8B                     u5670:
  4736  1E8B                     l3796:
  4737  1E8B  09F5               	comf	___awmod@dividend,f
  4738  1E8C  09F6               	comf	___awmod@dividend+1,f
  4739  1E8D  0AF5               	incf	___awmod@dividend,f
  4740  1E8E  1903               	skipnz
  4741  1E8F  0AF6               	incf	___awmod@dividend+1,f
  4742  1E90                     l3798:
  4743  1E90  0876               	movf	___awmod@dividend+1,w
  4744  1E91  00F4               	movwf	?___awmod+1
  4745  1E92  0875               	movf	___awmod@dividend,w
  4746  1E93  00F3               	movwf	?___awmod
  4747  1E94                     l557:
  4748  1E94  0008               	return
  4749  1E95                     __end_of___awmod:
  4750                           
  4751                           	psect	text4
  4752  078C                     __ptext4:	
  4753 ;; *************** function ___awdiv *****************
  4754 ;; Defined at:
  4755 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;  divisor         2    2[BANK0 ] int 
  4758 ;;  dividend        2    4[BANK0 ] int 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;  quotient        2    9[BANK0 ] int 
  4761 ;;  sign            1    8[BANK0 ] unsigned char 
  4762 ;;  counter         1    7[BANK0 ] unsigned char 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  2    2[BANK0 ] int 
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, status,0
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4772 ;;      Params:         0       4       0       0       0
  4773 ;;      Locals:         0       4       0       0       0
  4774 ;;      Temps:          0       1       0       0       0
  4775 ;;      Totals:         0       9       0       0       0
  4776 ;;Total ram usage:        9 bytes
  4777 ;; Hardware stack levels used: 1
  4778 ;; Hardware stack levels required when called: 2
  4779 ;; This function calls:
  4780 ;;		Nothing
  4781 ;; This function is called by:
  4782 ;;		_scale
  4783 ;;		_sprintf
  4784 ;;		_convertion
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788  078C                     ___awdiv:	
  4789                           ;psect for function ___awdiv
  4790                           
  4791  078C                     l3720:	
  4792                           ;incstack = 0
  4793                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4794                           
  4795  078C  1283               	bcf	3,5	;RP0=0, select bank0
  4796  078D  1303               	bcf	3,6	;RP1=0, select bank0
  4797  078E  01A8               	clrf	___awdiv@sign
  4798  078F                     l3722:
  4799  078F  1FA3               	btfss	___awdiv@divisor+1,7
  4800  0790  2F92               	goto	u5491
  4801  0791  2F93               	goto	u5490
  4802  0792                     u5491:
  4803  0792  2F9A               	goto	l3728
  4804  0793                     u5490:
  4805  0793                     l3724:
  4806  0793  09A2               	comf	___awdiv@divisor,f
  4807  0794  09A3               	comf	___awdiv@divisor+1,f
  4808  0795  0AA2               	incf	___awdiv@divisor,f
  4809  0796  1903               	skipnz
  4810  0797  0AA3               	incf	___awdiv@divisor+1,f
  4811  0798                     l3726:
  4812  0798  01A8               	clrf	___awdiv@sign
  4813  0799  0AA8               	incf	___awdiv@sign,f
  4814  079A                     l3728:
  4815  079A  1FA5               	btfss	___awdiv@dividend+1,7
  4816  079B  2F9D               	goto	u5501
  4817  079C  2F9E               	goto	u5500
  4818  079D                     u5501:
  4819  079D  2FA7               	goto	l3734
  4820  079E                     u5500:
  4821  079E                     l3730:
  4822  079E  09A4               	comf	___awdiv@dividend,f
  4823  079F  09A5               	comf	___awdiv@dividend+1,f
  4824  07A0  0AA4               	incf	___awdiv@dividend,f
  4825  07A1  1903               	skipnz
  4826  07A2  0AA5               	incf	___awdiv@dividend+1,f
  4827  07A3                     l3732:
  4828  07A3  3001               	movlw	1
  4829  07A4  00A6               	movwf	??___awdiv
  4830  07A5  0826               	movf	??___awdiv,w
  4831  07A6  06A8               	xorwf	___awdiv@sign,f
  4832  07A7                     l3734:
  4833  07A7  01A9               	clrf	___awdiv@quotient
  4834  07A8  01AA               	clrf	___awdiv@quotient+1
  4835  07A9                     l3736:
  4836  07A9  0822               	movf	___awdiv@divisor,w
  4837  07AA  0423               	iorwf	___awdiv@divisor+1,w
  4838  07AB  1903               	btfsc	3,2
  4839  07AC  2FAE               	goto	u5511
  4840  07AD  2FAF               	goto	u5510
  4841  07AE                     u5511:
  4842  07AE  2FE6               	goto	l3756
  4843  07AF                     u5510:
  4844  07AF                     l3738:
  4845  07AF  01A7               	clrf	___awdiv@counter
  4846  07B0  0AA7               	incf	___awdiv@counter,f
  4847  07B1  2FBD               	goto	l3744
  4848  07B2                     l3740:
  4849  07B2  3001               	movlw	1
  4850  07B3                     u5525:
  4851  07B3  1003               	clrc
  4852  07B4  0DA2               	rlf	___awdiv@divisor,f
  4853  07B5  0DA3               	rlf	___awdiv@divisor+1,f
  4854  07B6  3EFF               	addlw	-1
  4855  07B7  1D03               	skipz
  4856  07B8  2FB3               	goto	u5525
  4857  07B9                     l3742:
  4858  07B9  3001               	movlw	1
  4859  07BA  00A6               	movwf	??___awdiv
  4860  07BB  0826               	movf	??___awdiv,w
  4861  07BC  07A7               	addwf	___awdiv@counter,f
  4862  07BD                     l3744:
  4863  07BD  1FA3               	btfss	___awdiv@divisor+1,7
  4864  07BE  2FC0               	goto	u5531
  4865  07BF  2FC1               	goto	u5530
  4866  07C0                     u5531:
  4867  07C0  2FB2               	goto	l3740
  4868  07C1                     u5530:
  4869  07C1                     l3746:
  4870  07C1  3001               	movlw	1
  4871  07C2                     u5545:
  4872  07C2  1003               	clrc
  4873  07C3  0DA9               	rlf	___awdiv@quotient,f
  4874  07C4  0DAA               	rlf	___awdiv@quotient+1,f
  4875  07C5  3EFF               	addlw	-1
  4876  07C6  1D03               	skipz
  4877  07C7  2FC2               	goto	u5545
  4878  07C8  0823               	movf	___awdiv@divisor+1,w
  4879  07C9  0225               	subwf	___awdiv@dividend+1,w
  4880  07CA  1D03               	skipz
  4881  07CB  2FCE               	goto	u5555
  4882  07CC  0822               	movf	___awdiv@divisor,w
  4883  07CD  0224               	subwf	___awdiv@dividend,w
  4884  07CE                     u5555:
  4885  07CE  1C03               	skipc
  4886  07CF  2FD1               	goto	u5551
  4887  07D0  2FD2               	goto	u5550
  4888  07D1                     u5551:
  4889  07D1  2FD9               	goto	l3752
  4890  07D2                     u5550:
  4891  07D2                     l3748:
  4892  07D2  0822               	movf	___awdiv@divisor,w
  4893  07D3  02A4               	subwf	___awdiv@dividend,f
  4894  07D4  0823               	movf	___awdiv@divisor+1,w
  4895  07D5  1C03               	skipc
  4896  07D6  03A5               	decf	___awdiv@dividend+1,f
  4897  07D7  02A5               	subwf	___awdiv@dividend+1,f
  4898  07D8                     l3750:
  4899  07D8  1429               	bsf	___awdiv@quotient,0
  4900  07D9                     l3752:
  4901  07D9  3001               	movlw	1
  4902  07DA                     u5565:
  4903  07DA  1003               	clrc
  4904  07DB  0CA3               	rrf	___awdiv@divisor+1,f
  4905  07DC  0CA2               	rrf	___awdiv@divisor,f
  4906  07DD  3EFF               	addlw	-1
  4907  07DE  1D03               	skipz
  4908  07DF  2FDA               	goto	u5565
  4909  07E0                     l3754:
  4910  07E0  3001               	movlw	1
  4911  07E1  02A7               	subwf	___awdiv@counter,f
  4912  07E2  1D03               	btfss	3,2
  4913  07E3  2FE5               	goto	u5571
  4914  07E4  2FE6               	goto	u5570
  4915  07E5                     u5571:
  4916  07E5  2FC1               	goto	l3746
  4917  07E6                     u5570:
  4918  07E6                     l3756:
  4919  07E6  0828               	movf	___awdiv@sign,w
  4920  07E7  1903               	btfsc	3,2
  4921  07E8  2FEA               	goto	u5581
  4922  07E9  2FEB               	goto	u5580
  4923  07EA                     u5581:
  4924  07EA  2FF0               	goto	l3760
  4925  07EB                     u5580:
  4926  07EB                     l3758:
  4927  07EB  09A9               	comf	___awdiv@quotient,f
  4928  07EC  09AA               	comf	___awdiv@quotient+1,f
  4929  07ED  0AA9               	incf	___awdiv@quotient,f
  4930  07EE  1903               	skipnz
  4931  07EF  0AAA               	incf	___awdiv@quotient+1,f
  4932  07F0                     l3760:
  4933  07F0  082A               	movf	___awdiv@quotient+1,w
  4934  07F1  00A3               	movwf	?___awdiv+1
  4935  07F2  0829               	movf	___awdiv@quotient,w
  4936  07F3  00A2               	movwf	?___awdiv
  4937  07F4                     l544:
  4938  07F4  0008               	return
  4939  07F5                     __end_of___awdiv:
  4940                           
  4941                           	psect	text5
  4942  0807                     __ptext5:	
  4943 ;; *************** function _isdigit *****************
  4944 ;; Defined at:
  4945 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\isdigit.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  c               1    wreg     unsigned char 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  c               1    4[COMMON] unsigned char 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;		None               void
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4959 ;;      Params:         0       0       0       0       0
  4960 ;;      Locals:         2       0       0       0       0
  4961 ;;      Temps:          0       0       0       0       0
  4962 ;;      Totals:         2       0       0       0       0
  4963 ;;Total ram usage:        2 bytes
  4964 ;; Hardware stack levels used: 1
  4965 ;; Hardware stack levels required when called: 2
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_sprintf
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973  0807                     _isdigit:	
  4974                           ;psect for function _isdigit
  4975                           
  4976                           
  4977                           ;incstack = 0
  4978                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4979                           ;isdigit@c stored from wreg
  4980  0807  00F4               	movwf	isdigit@c
  4981  0808                     l2966:
  4982  0808  01F3               	clrf	_isdigit$989
  4983  0809                     l2968:
  4984  0809  303A               	movlw	58
  4985  080A  0274               	subwf	isdigit@c,w
  4986  080B  1803               	skipnc
  4987  080C  280E               	goto	u4181
  4988  080D  280F               	goto	u4180
  4989  080E                     u4181:
  4990  080E  2817               	goto	l2974
  4991  080F                     u4180:
  4992  080F                     l2970:
  4993  080F  3030               	movlw	48
  4994  0810  0274               	subwf	isdigit@c,w
  4995  0811  1C03               	skipc
  4996  0812  2814               	goto	u4191
  4997  0813  2815               	goto	u4190
  4998  0814                     u4191:
  4999  0814  2817               	goto	l2974
  5000  0815                     u4190:
  5001  0815                     l2972:
  5002  0815  01F3               	clrf	_isdigit$989
  5003  0816  0AF3               	incf	_isdigit$989,f
  5004  0817                     l2974:
  5005  0817  0C73               	rrf	_isdigit$989,w
  5006  0818                     l878:
  5007  0818  0008               	return
  5008  0819                     __end_of_isdigit:
  5009                           
  5010                           	psect	text6
  5011  136B                     __ptext6:	
  5012 ;; *************** function _fround *****************
  5013 ;; Defined at:
  5014 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;  prec            1    wreg     unsigned char 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;  prec            1   56[BANK0 ] unsigned char 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  4   37[BANK0 ] unsigned char 
  5021 ;; Registers used:
  5022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5028 ;;      Params:         0       4       0       0       0
  5029 ;;      Locals:         0       9       0       0       0
  5030 ;;      Temps:          0       7       0       0       0
  5031 ;;      Totals:         0      20       0       0       0
  5032 ;;Total ram usage:       20 bytes
  5033 ;; Hardware stack levels used: 1
  5034 ;; Hardware stack levels required when called: 4
  5035 ;; This function calls:
  5036 ;;		___flmul
  5037 ;;		___lwdiv
  5038 ;;		___lwmod
  5039 ;; This function is called by:
  5040 ;;		_sprintf
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044  136B                     _fround:	
  5045                           ;psect for function _fround
  5046                           
  5047                           
  5048                           ;incstack = 0
  5049                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5050                           ;fround@prec stored from wreg
  5051  136B  1283               	bcf	3,5	;RP0=0, select bank0
  5052  136C  1303               	bcf	3,6	;RP1=0, select bank0
  5053  136D  00D8               	movwf	fround@prec
  5054  136E                     l3870:
  5055                           
  5056                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5057  136E  306E               	movlw	110
  5058  136F  0258               	subwf	fround@prec,w
  5059  1370  1C03               	skipc
  5060  1371  2B73               	goto	u5811
  5061  1372  2B74               	goto	u5810
  5062  1373                     u5811:
  5063  1373  2C83               	goto	l3878
  5064  1374                     u5810:
  5065  1374                     l3872:
  5066                           
  5067                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5068  1374  303F               	movlw	63
  5069  1375  00AE               	movwf	___flmul@b+3
  5070  1376  3000               	movlw	0
  5071  1377  00AD               	movwf	___flmul@b+2
  5072  1378  3000               	movlw	0
  5073  1379  00AC               	movwf	___flmul@b+1
  5074  137A  3000               	movlw	0
  5075  137B  00AB               	movwf	___flmul@b
  5076  137C  3064               	movlw	100
  5077  137D  00A1               	movwf	___lwdiv@divisor
  5078  137E  3000               	movlw	0
  5079  137F  00A2               	movwf	___lwdiv@divisor+1
  5080  1380  0858               	movf	fround@prec,w
  5081  1381  00C9               	movwf	??_fround
  5082  1382  01CA               	clrf	??_fround+1
  5083  1383  0849               	movf	??_fround,w
  5084  1384  00A3               	movwf	___lwdiv@dividend
  5085  1385  084A               	movf	??_fround+1,w
  5086  1386  00A4               	movwf	___lwdiv@dividend+1
  5087  1387  160A  158A  2415  160A  118A  	fcall	___lwdiv
  5088  138C  1283               	bcf	3,5	;RP0=0, select bank0
  5089  138D  1303               	bcf	3,6	;RP1=0, select bank0
  5090  138E  0821               	movf	?___lwdiv,w
  5091  138F  00CB               	movwf	??_fround+2
  5092  1390  3001               	movlw	1
  5093  1391                     u5825:
  5094  1391  1003               	clrc
  5095  1392  0DCB               	rlf	??_fround+2,f
  5096  1393  3EFF               	addlw	-1
  5097  1394  1D03               	skipz
  5098  1395  2B91               	goto	u5825
  5099  1396  1003               	clrc
  5100  1397  0D4B               	rlf	??_fround+2,w
  5101  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5102  1399  0084               	movwf	4
  5103  139A  160A  118A  200A  160A  118A  	fcall	stringdir
  5104  139F  00CC               	movwf	??_fround+3
  5105  13A0  160A  118A  200A  160A  118A  	fcall	stringdir
  5106  13A5  00CD               	movwf	??_fround+4
  5107  13A6  160A  118A  200A  160A  118A  	fcall	stringdir
  5108  13AB  00CE               	movwf	??_fround+5
  5109  13AC  160A  118A  200A  160A  118A  	fcall	stringdir
  5110  13B1  00CF               	movwf	??_fround+6
  5111  13B2  084F               	movf	??_fround+6,w
  5112  13B3  00B2               	movwf	___flmul@a+3
  5113  13B4  084E               	movf	??_fround+5,w
  5114  13B5  00B1               	movwf	___flmul@a+2
  5115  13B6  084D               	movf	??_fround+4,w
  5116  13B7  00B0               	movwf	___flmul@a+1
  5117  13B8  084C               	movf	??_fround+3,w
  5118  13B9  00AF               	movwf	___flmul@a
  5119  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  5120  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  5121  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  5122  13C1  082E               	movf	?___flmul+3,w
  5123  13C2  00D7               	movwf	_fround$1175+3
  5124  13C3  082D               	movf	?___flmul+2,w
  5125  13C4  00D6               	movwf	_fround$1175+2
  5126  13C5  082C               	movf	?___flmul+1,w
  5127  13C6  00D5               	movwf	_fround$1175+1
  5128  13C7  082B               	movf	?___flmul,w
  5129  13C8  00D4               	movwf	_fround$1175
  5130                           
  5131                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5132  13C9  300A               	movlw	10
  5133  13CA  00A1               	movwf	___lwdiv@divisor
  5134  13CB  3000               	movlw	0
  5135  13CC  00A2               	movwf	___lwdiv@divisor+1
  5136  13CD  0858               	movf	fround@prec,w
  5137  13CE  00C9               	movwf	??_fround
  5138  13CF  01CA               	clrf	??_fround+1
  5139  13D0  0849               	movf	??_fround,w
  5140  13D1  00F5               	movwf	___lwmod@dividend
  5141  13D2  084A               	movf	??_fround+1,w
  5142  13D3  00F6               	movwf	___lwmod@dividend+1
  5143  13D4  3064               	movlw	100
  5144  13D5  00F3               	movwf	___lwmod@divisor
  5145  13D6  3000               	movlw	0
  5146  13D7  00F4               	movwf	___lwmod@divisor+1
  5147  13D8  160A  158A  2315  160A  118A  	fcall	___lwmod
  5148  13DD  0874               	movf	?___lwmod+1,w
  5149  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  5150  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  5151  13E0  00A4               	movwf	___lwdiv@dividend+1
  5152  13E1  0873               	movf	?___lwmod,w
  5153  13E2  00A3               	movwf	___lwdiv@dividend
  5154  13E3  160A  158A  2415  160A  118A  	fcall	___lwdiv
  5155  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  5156  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  5157  13EA  0821               	movf	?___lwdiv,w
  5158  13EB  00CB               	movwf	??_fround+2
  5159  13EC  3001               	movlw	1
  5160  13ED                     u5835:
  5161  13ED  1003               	clrc
  5162  13EE  0DCB               	rlf	??_fround+2,f
  5163  13EF  3EFF               	addlw	-1
  5164  13F0  1D03               	skipz
  5165  13F1  2BED               	goto	u5835
  5166  13F2  1003               	clrc
  5167  13F3  0D4B               	rlf	??_fround+2,w
  5168  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5169  13F5  0084               	movwf	4
  5170  13F6  160A  118A  200A  160A  118A  	fcall	stringdir
  5171  13FB  00CC               	movwf	??_fround+3
  5172  13FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5173  1401  00CD               	movwf	??_fround+4
  5174  1402  160A  118A  200A  160A  118A  	fcall	stringdir
  5175  1407  00CE               	movwf	??_fround+5
  5176  1408  160A  118A  200A  160A  118A  	fcall	stringdir
  5177  140D  00CF               	movwf	??_fround+6
  5178  140E  084F               	movf	??_fround+6,w
  5179  140F  00AE               	movwf	___flmul@b+3
  5180  1410  084E               	movf	??_fround+5,w
  5181  1411  00AD               	movwf	___flmul@b+2
  5182  1412  084D               	movf	??_fround+4,w
  5183  1413  00AC               	movwf	___flmul@b+1
  5184  1414  084C               	movf	??_fround+3,w
  5185  1415  00AB               	movwf	___flmul@b
  5186  1416  0857               	movf	_fround$1175+3,w
  5187  1417  00B2               	movwf	___flmul@a+3
  5188  1418  0856               	movf	_fround$1175+2,w
  5189  1419  00B1               	movwf	___flmul@a+2
  5190  141A  0855               	movf	_fround$1175+1,w
  5191  141B  00B0               	movwf	___flmul@a+1
  5192  141C  0854               	movf	_fround$1175,w
  5193  141D  00AF               	movwf	___flmul@a
  5194  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  5195  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5196  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5197  1425  082E               	movf	?___flmul+3,w
  5198  1426  00D3               	movwf	_fround$1176+3
  5199  1427  082D               	movf	?___flmul+2,w
  5200  1428  00D2               	movwf	_fround$1176+2
  5201  1429  082C               	movf	?___flmul+1,w
  5202  142A  00D1               	movwf	_fround$1176+1
  5203  142B  082B               	movf	?___flmul,w
  5204  142C  00D0               	movwf	_fround$1176
  5205                           
  5206                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5207  142D  300A               	movlw	10
  5208  142E  00F3               	movwf	___lwmod@divisor
  5209  142F  3000               	movlw	0
  5210  1430  00F4               	movwf	___lwmod@divisor+1
  5211  1431  0858               	movf	fround@prec,w
  5212  1432  00C9               	movwf	??_fround
  5213  1433  01CA               	clrf	??_fround+1
  5214  1434  0849               	movf	??_fround,w
  5215  1435  00F5               	movwf	___lwmod@dividend
  5216  1436  084A               	movf	??_fround+1,w
  5217  1437  00F6               	movwf	___lwmod@dividend+1
  5218  1438  160A  158A  2315  160A  118A  	fcall	___lwmod
  5219  143D  0873               	movf	?___lwmod,w
  5220  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5221  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5222  1440  00CB               	movwf	??_fround+2
  5223  1441  3001               	movlw	1
  5224  1442                     u5845:
  5225  1442  1003               	clrc
  5226  1443  0DCB               	rlf	??_fround+2,f
  5227  1444  3EFF               	addlw	-1
  5228  1445  1D03               	skipz
  5229  1446  2C42               	goto	u5845
  5230  1447  1003               	clrc
  5231  1448  0D4B               	rlf	??_fround+2,w
  5232  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5233  144A  0084               	movwf	4
  5234  144B  160A  118A  200A  160A  118A  	fcall	stringdir
  5235  1450  00CC               	movwf	??_fround+3
  5236  1451  160A  118A  200A  160A  118A  	fcall	stringdir
  5237  1456  00CD               	movwf	??_fround+4
  5238  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  5239  145C  00CE               	movwf	??_fround+5
  5240  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  5241  1462  00CF               	movwf	??_fround+6
  5242  1463  084F               	movf	??_fround+6,w
  5243  1464  00AE               	movwf	___flmul@b+3
  5244  1465  084E               	movf	??_fround+5,w
  5245  1466  00AD               	movwf	___flmul@b+2
  5246  1467  084D               	movf	??_fround+4,w
  5247  1468  00AC               	movwf	___flmul@b+1
  5248  1469  084C               	movf	??_fround+3,w
  5249  146A  00AB               	movwf	___flmul@b
  5250  146B  0853               	movf	_fround$1176+3,w
  5251  146C  00B2               	movwf	___flmul@a+3
  5252  146D  0852               	movf	_fround$1176+2,w
  5253  146E  00B1               	movwf	___flmul@a+2
  5254  146F  0851               	movf	_fround$1176+1,w
  5255  1470  00B0               	movwf	___flmul@a+1
  5256  1471  0850               	movf	_fround$1176,w
  5257  1472  00AF               	movwf	___flmul@a
  5258  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  5259  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5260  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5261  147A  082E               	movf	?___flmul+3,w
  5262  147B  00C8               	movwf	?_fround+3
  5263  147C  082D               	movf	?___flmul+2,w
  5264  147D  00C7               	movwf	?_fround+2
  5265  147E  082C               	movf	?___flmul+1,w
  5266  147F  00C6               	movwf	?_fround+1
  5267  1480  082B               	movf	?___flmul,w
  5268  1481  00C5               	movwf	?_fround
  5269  1482  2D77               	goto	l314
  5270  1483                     l3878:
  5271  1483  300B               	movlw	11
  5272  1484  0258               	subwf	fround@prec,w
  5273  1485  1C03               	skipc
  5274  1486  2C88               	goto	u5851
  5275  1487  2C89               	goto	u5850
  5276  1488                     u5851:
  5277  1488  2D34               	goto	l3884
  5278  1489                     u5850:
  5279  1489                     l3880:
  5280                           
  5281                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5282  1489  303F               	movlw	63
  5283  148A  00AE               	movwf	___flmul@b+3
  5284  148B  3000               	movlw	0
  5285  148C  00AD               	movwf	___flmul@b+2
  5286  148D  3000               	movlw	0
  5287  148E  00AC               	movwf	___flmul@b+1
  5288  148F  3000               	movlw	0
  5289  1490  00AB               	movwf	___flmul@b
  5290  1491  300A               	movlw	10
  5291  1492  00A1               	movwf	___lwdiv@divisor
  5292  1493  3000               	movlw	0
  5293  1494  00A2               	movwf	___lwdiv@divisor+1
  5294  1495  0858               	movf	fround@prec,w
  5295  1496  00C9               	movwf	??_fround
  5296  1497  01CA               	clrf	??_fround+1
  5297  1498  0849               	movf	??_fround,w
  5298  1499  00A3               	movwf	___lwdiv@dividend
  5299  149A  084A               	movf	??_fround+1,w
  5300  149B  00A4               	movwf	___lwdiv@dividend+1
  5301  149C  160A  158A  2415  160A  118A  	fcall	___lwdiv
  5302  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  5303  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  5304  14A3  0821               	movf	?___lwdiv,w
  5305  14A4  00CB               	movwf	??_fround+2
  5306  14A5  3001               	movlw	1
  5307  14A6                     u5865:
  5308  14A6  1003               	clrc
  5309  14A7  0DCB               	rlf	??_fround+2,f
  5310  14A8  3EFF               	addlw	-1
  5311  14A9  1D03               	skipz
  5312  14AA  2CA6               	goto	u5865
  5313  14AB  1003               	clrc
  5314  14AC  0D4B               	rlf	??_fround+2,w
  5315  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5316  14AE  0084               	movwf	4
  5317  14AF  160A  118A  200A  160A  118A  	fcall	stringdir
  5318  14B4  00CC               	movwf	??_fround+3
  5319  14B5  160A  118A  200A  160A  118A  	fcall	stringdir
  5320  14BA  00CD               	movwf	??_fround+4
  5321  14BB  160A  118A  200A  160A  118A  	fcall	stringdir
  5322  14C0  00CE               	movwf	??_fround+5
  5323  14C1  160A  118A  200A  160A  118A  	fcall	stringdir
  5324  14C6  00CF               	movwf	??_fround+6
  5325  14C7  084F               	movf	??_fround+6,w
  5326  14C8  00B2               	movwf	___flmul@a+3
  5327  14C9  084E               	movf	??_fround+5,w
  5328  14CA  00B1               	movwf	___flmul@a+2
  5329  14CB  084D               	movf	??_fround+4,w
  5330  14CC  00B0               	movwf	___flmul@a+1
  5331  14CD  084C               	movf	??_fround+3,w
  5332  14CE  00AF               	movwf	___flmul@a
  5333  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  5334  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5335  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5336  14D6  082E               	movf	?___flmul+3,w
  5337  14D7  00D7               	movwf	_fround$1175+3
  5338  14D8  082D               	movf	?___flmul+2,w
  5339  14D9  00D6               	movwf	_fround$1175+2
  5340  14DA  082C               	movf	?___flmul+1,w
  5341  14DB  00D5               	movwf	_fround$1175+1
  5342  14DC  082B               	movf	?___flmul,w
  5343  14DD  00D4               	movwf	_fround$1175
  5344                           
  5345                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5346  14DE  300A               	movlw	10
  5347  14DF  00F3               	movwf	___lwmod@divisor
  5348  14E0  3000               	movlw	0
  5349  14E1  00F4               	movwf	___lwmod@divisor+1
  5350  14E2  0858               	movf	fround@prec,w
  5351  14E3  00C9               	movwf	??_fround
  5352  14E4  01CA               	clrf	??_fround+1
  5353  14E5  0849               	movf	??_fround,w
  5354  14E6  00F5               	movwf	___lwmod@dividend
  5355  14E7  084A               	movf	??_fround+1,w
  5356  14E8  00F6               	movwf	___lwmod@dividend+1
  5357  14E9  160A  158A  2315  160A  118A  	fcall	___lwmod
  5358  14EE  0873               	movf	?___lwmod,w
  5359  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5360  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5361  14F1  00CB               	movwf	??_fround+2
  5362  14F2  3001               	movlw	1
  5363  14F3                     u5875:
  5364  14F3  1003               	clrc
  5365  14F4  0DCB               	rlf	??_fround+2,f
  5366  14F5  3EFF               	addlw	-1
  5367  14F6  1D03               	skipz
  5368  14F7  2CF3               	goto	u5875
  5369  14F8  1003               	clrc
  5370  14F9  0D4B               	rlf	??_fround+2,w
  5371  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5372  14FB  0084               	movwf	4
  5373  14FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5374  1501  00CC               	movwf	??_fround+3
  5375  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  5376  1507  00CD               	movwf	??_fround+4
  5377  1508  160A  118A  200A  160A  118A  	fcall	stringdir
  5378  150D  00CE               	movwf	??_fround+5
  5379  150E  160A  118A  200A  160A  118A  	fcall	stringdir
  5380  1513  00CF               	movwf	??_fround+6
  5381  1514  084F               	movf	??_fround+6,w
  5382  1515  00AE               	movwf	___flmul@b+3
  5383  1516  084E               	movf	??_fround+5,w
  5384  1517  00AD               	movwf	___flmul@b+2
  5385  1518  084D               	movf	??_fround+4,w
  5386  1519  00AC               	movwf	___flmul@b+1
  5387  151A  084C               	movf	??_fround+3,w
  5388  151B  00AB               	movwf	___flmul@b
  5389  151C  0857               	movf	_fround$1175+3,w
  5390  151D  00B2               	movwf	___flmul@a+3
  5391  151E  0856               	movf	_fround$1175+2,w
  5392  151F  00B1               	movwf	___flmul@a+2
  5393  1520  0855               	movf	_fround$1175+1,w
  5394  1521  00B0               	movwf	___flmul@a+1
  5395  1522  0854               	movf	_fround$1175,w
  5396  1523  00AF               	movwf	___flmul@a
  5397  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  5398  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5399  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5400  152B  082E               	movf	?___flmul+3,w
  5401  152C  00C8               	movwf	?_fround+3
  5402  152D  082D               	movf	?___flmul+2,w
  5403  152E  00C7               	movwf	?_fround+2
  5404  152F  082C               	movf	?___flmul+1,w
  5405  1530  00C6               	movwf	?_fround+1
  5406  1531  082B               	movf	?___flmul,w
  5407  1532  00C5               	movwf	?_fround
  5408  1533  2D77               	goto	l314
  5409  1534                     l3884:
  5410                           
  5411                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5412  1534  303F               	movlw	63
  5413  1535  00AE               	movwf	___flmul@b+3
  5414  1536  3000               	movlw	0
  5415  1537  00AD               	movwf	___flmul@b+2
  5416  1538  3000               	movlw	0
  5417  1539  00AC               	movwf	___flmul@b+1
  5418  153A  3000               	movlw	0
  5419  153B  00AB               	movwf	___flmul@b
  5420  153C  0858               	movf	fround@prec,w
  5421  153D  00C9               	movwf	??_fround
  5422  153E  3001               	movlw	1
  5423  153F                     u5885:
  5424  153F  1003               	clrc
  5425  1540  0DC9               	rlf	??_fround,f
  5426  1541  3EFF               	addlw	-1
  5427  1542  1D03               	skipz
  5428  1543  2D3F               	goto	u5885
  5429  1544  1003               	clrc
  5430  1545  0D49               	rlf	??_fround,w
  5431  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5432  1547  0084               	movwf	4
  5433  1548  160A  118A  200A  160A  118A  	fcall	stringdir
  5434  154D  00CA               	movwf	??_fround+1
  5435  154E  160A  118A  200A  160A  118A  	fcall	stringdir
  5436  1553  00CB               	movwf	??_fround+2
  5437  1554  160A  118A  200A  160A  118A  	fcall	stringdir
  5438  1559  00CC               	movwf	??_fround+3
  5439  155A  160A  118A  200A  160A  118A  	fcall	stringdir
  5440  155F  00CD               	movwf	??_fround+4
  5441  1560  084D               	movf	??_fround+4,w
  5442  1561  00B2               	movwf	___flmul@a+3
  5443  1562  084C               	movf	??_fround+3,w
  5444  1563  00B1               	movwf	___flmul@a+2
  5445  1564  084B               	movf	??_fround+2,w
  5446  1565  00B0               	movwf	___flmul@a+1
  5447  1566  084A               	movf	??_fround+1,w
  5448  1567  00AF               	movwf	___flmul@a
  5449  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  5450  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5451  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5452  156F  082E               	movf	?___flmul+3,w
  5453  1570  00C8               	movwf	?_fround+3
  5454  1571  082D               	movf	?___flmul+2,w
  5455  1572  00C7               	movwf	?_fround+2
  5456  1573  082C               	movf	?___flmul+1,w
  5457  1574  00C6               	movwf	?_fround+1
  5458  1575  082B               	movf	?___flmul,w
  5459  1576  00C5               	movwf	?_fround
  5460  1577                     l314:
  5461  1577  0008               	return
  5462  1578                     __end_of_fround:
  5463                           
  5464                           	psect	text7
  5465  1B15                     __ptext7:	
  5466 ;; *************** function ___lwmod *****************
  5467 ;; Defined at:
  5468 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;  divisor         2    3[COMMON] unsigned int 
  5471 ;;  dividend        2    5[COMMON] unsigned int 
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;  counter         1    0[BANK0 ] unsigned char 
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  2    3[COMMON] unsigned int 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5483 ;;      Params:         4       0       0       0       0
  5484 ;;      Locals:         0       1       0       0       0
  5485 ;;      Temps:          1       0       0       0       0
  5486 ;;      Totals:         5       1       0       0       0
  5487 ;;Total ram usage:        6 bytes
  5488 ;; Hardware stack levels used: 1
  5489 ;; Hardware stack levels required when called: 2
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_fround
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497  1B15                     ___lwmod:	
  5498                           ;psect for function ___lwmod
  5499                           
  5500  1B15                     l3828:	
  5501                           ;incstack = 0
  5502                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5503                           
  5504  1B15  0873               	movf	___lwmod@divisor,w
  5505  1B16  0474               	iorwf	___lwmod@divisor+1,w
  5506  1B17  1903               	btfsc	3,2
  5507  1B18  2B1A               	goto	u5751
  5508  1B19  2B1B               	goto	u5750
  5509  1B1A                     u5751:
  5510  1B1A  2B4C               	goto	l3846
  5511  1B1B                     u5750:
  5512  1B1B                     l3830:
  5513  1B1B  1283               	bcf	3,5	;RP0=0, select bank0
  5514  1B1C  1303               	bcf	3,6	;RP1=0, select bank0
  5515  1B1D  01A0               	clrf	___lwmod@counter
  5516  1B1E  0AA0               	incf	___lwmod@counter,f
  5517  1B1F  2B2B               	goto	l3836
  5518  1B20                     l3832:
  5519  1B20  3001               	movlw	1
  5520  1B21                     u5765:
  5521  1B21  1003               	clrc
  5522  1B22  0DF3               	rlf	___lwmod@divisor,f
  5523  1B23  0DF4               	rlf	___lwmod@divisor+1,f
  5524  1B24  3EFF               	addlw	-1
  5525  1B25  1D03               	skipz
  5526  1B26  2B21               	goto	u5765
  5527  1B27                     l3834:
  5528  1B27  3001               	movlw	1
  5529  1B28  00F7               	movwf	??___lwmod
  5530  1B29  0877               	movf	??___lwmod,w
  5531  1B2A  07A0               	addwf	___lwmod@counter,f
  5532  1B2B                     l3836:
  5533  1B2B  1FF4               	btfss	___lwmod@divisor+1,7
  5534  1B2C  2B2E               	goto	u5771
  5535  1B2D  2B2F               	goto	u5770
  5536  1B2E                     u5771:
  5537  1B2E  2B20               	goto	l3832
  5538  1B2F                     u5770:
  5539  1B2F                     l3838:
  5540  1B2F  0874               	movf	___lwmod@divisor+1,w
  5541  1B30  0276               	subwf	___lwmod@dividend+1,w
  5542  1B31  1D03               	skipz
  5543  1B32  2B35               	goto	u5785
  5544  1B33  0873               	movf	___lwmod@divisor,w
  5545  1B34  0275               	subwf	___lwmod@dividend,w
  5546  1B35                     u5785:
  5547  1B35  1C03               	skipc
  5548  1B36  2B38               	goto	u5781
  5549  1B37  2B39               	goto	u5780
  5550  1B38                     u5781:
  5551  1B38  2B3F               	goto	l3842
  5552  1B39                     u5780:
  5553  1B39                     l3840:
  5554  1B39  0873               	movf	___lwmod@divisor,w
  5555  1B3A  02F5               	subwf	___lwmod@dividend,f
  5556  1B3B  0874               	movf	___lwmod@divisor+1,w
  5557  1B3C  1C03               	skipc
  5558  1B3D  03F6               	decf	___lwmod@dividend+1,f
  5559  1B3E  02F6               	subwf	___lwmod@dividend+1,f
  5560  1B3F                     l3842:
  5561  1B3F  3001               	movlw	1
  5562  1B40                     u5795:
  5563  1B40  1003               	clrc
  5564  1B41  0CF4               	rrf	___lwmod@divisor+1,f
  5565  1B42  0CF3               	rrf	___lwmod@divisor,f
  5566  1B43  3EFF               	addlw	-1
  5567  1B44  1D03               	skipz
  5568  1B45  2B40               	goto	u5795
  5569  1B46                     l3844:
  5570  1B46  3001               	movlw	1
  5571  1B47  02A0               	subwf	___lwmod@counter,f
  5572  1B48  1D03               	btfss	3,2
  5573  1B49  2B4B               	goto	u5801
  5574  1B4A  2B4C               	goto	u5800
  5575  1B4B                     u5801:
  5576  1B4B  2B2F               	goto	l3838
  5577  1B4C                     u5800:
  5578  1B4C                     l3846:
  5579  1B4C  0876               	movf	___lwmod@dividend+1,w
  5580  1B4D  00F4               	movwf	?___lwmod+1
  5581  1B4E  0875               	movf	___lwmod@dividend,w
  5582  1B4F  00F3               	movwf	?___lwmod
  5583  1B50                     l707:
  5584  1B50  0008               	return
  5585  1B51                     __end_of___lwmod:
  5586                           
  5587                           	psect	text8
  5588  1C15                     __ptext8:	
  5589 ;; *************** function ___lwdiv *****************
  5590 ;; Defined at:
  5591 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;  divisor         2    1[BANK0 ] unsigned int 
  5594 ;;  dividend        2    3[BANK0 ] unsigned int 
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  quotient        2    7[BANK0 ] unsigned int 
  5597 ;;  counter         1    6[BANK0 ] unsigned char 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  2    1[BANK0 ] unsigned int 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5607 ;;      Params:         0       4       0       0       0
  5608 ;;      Locals:         0       3       0       0       0
  5609 ;;      Temps:          0       1       0       0       0
  5610 ;;      Totals:         0       8       0       0       0
  5611 ;;Total ram usage:        8 bytes
  5612 ;; Hardware stack levels used: 1
  5613 ;; Hardware stack levels required when called: 2
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		_fround
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621  1C15                     ___lwdiv:	
  5622                           ;psect for function ___lwdiv
  5623                           
  5624  1C15                     l3802:	
  5625                           ;incstack = 0
  5626                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5627                           
  5628  1C15  1283               	bcf	3,5	;RP0=0, select bank0
  5629  1C16  1303               	bcf	3,6	;RP1=0, select bank0
  5630  1C17  01A7               	clrf	___lwdiv@quotient
  5631  1C18  01A8               	clrf	___lwdiv@quotient+1
  5632  1C19                     l3804:
  5633  1C19  0821               	movf	___lwdiv@divisor,w
  5634  1C1A  0422               	iorwf	___lwdiv@divisor+1,w
  5635  1C1B  1903               	btfsc	3,2
  5636  1C1C  2C1E               	goto	u5681
  5637  1C1D  2C1F               	goto	u5680
  5638  1C1E                     u5681:
  5639  1C1E  2C56               	goto	l3824
  5640  1C1F                     u5680:
  5641  1C1F                     l3806:
  5642  1C1F  01A6               	clrf	___lwdiv@counter
  5643  1C20  0AA6               	incf	___lwdiv@counter,f
  5644  1C21  2C2D               	goto	l3812
  5645  1C22                     l3808:
  5646  1C22  3001               	movlw	1
  5647  1C23                     u5695:
  5648  1C23  1003               	clrc
  5649  1C24  0DA1               	rlf	___lwdiv@divisor,f
  5650  1C25  0DA2               	rlf	___lwdiv@divisor+1,f
  5651  1C26  3EFF               	addlw	-1
  5652  1C27  1D03               	skipz
  5653  1C28  2C23               	goto	u5695
  5654  1C29                     l3810:
  5655  1C29  3001               	movlw	1
  5656  1C2A  00A5               	movwf	??___lwdiv
  5657  1C2B  0825               	movf	??___lwdiv,w
  5658  1C2C  07A6               	addwf	___lwdiv@counter,f
  5659  1C2D                     l3812:
  5660  1C2D  1FA2               	btfss	___lwdiv@divisor+1,7
  5661  1C2E  2C30               	goto	u5701
  5662  1C2F  2C31               	goto	u5700
  5663  1C30                     u5701:
  5664  1C30  2C22               	goto	l3808
  5665  1C31                     u5700:
  5666  1C31                     l3814:
  5667  1C31  3001               	movlw	1
  5668  1C32                     u5715:
  5669  1C32  1003               	clrc
  5670  1C33  0DA7               	rlf	___lwdiv@quotient,f
  5671  1C34  0DA8               	rlf	___lwdiv@quotient+1,f
  5672  1C35  3EFF               	addlw	-1
  5673  1C36  1D03               	skipz
  5674  1C37  2C32               	goto	u5715
  5675  1C38  0822               	movf	___lwdiv@divisor+1,w
  5676  1C39  0224               	subwf	___lwdiv@dividend+1,w
  5677  1C3A  1D03               	skipz
  5678  1C3B  2C3E               	goto	u5725
  5679  1C3C  0821               	movf	___lwdiv@divisor,w
  5680  1C3D  0223               	subwf	___lwdiv@dividend,w
  5681  1C3E                     u5725:
  5682  1C3E  1C03               	skipc
  5683  1C3F  2C41               	goto	u5721
  5684  1C40  2C42               	goto	u5720
  5685  1C41                     u5721:
  5686  1C41  2C49               	goto	l3820
  5687  1C42                     u5720:
  5688  1C42                     l3816:
  5689  1C42  0821               	movf	___lwdiv@divisor,w
  5690  1C43  02A3               	subwf	___lwdiv@dividend,f
  5691  1C44  0822               	movf	___lwdiv@divisor+1,w
  5692  1C45  1C03               	skipc
  5693  1C46  03A4               	decf	___lwdiv@dividend+1,f
  5694  1C47  02A4               	subwf	___lwdiv@dividend+1,f
  5695  1C48                     l3818:
  5696  1C48  1427               	bsf	___lwdiv@quotient,0
  5697  1C49                     l3820:
  5698  1C49  3001               	movlw	1
  5699  1C4A                     u5735:
  5700  1C4A  1003               	clrc
  5701  1C4B  0CA2               	rrf	___lwdiv@divisor+1,f
  5702  1C4C  0CA1               	rrf	___lwdiv@divisor,f
  5703  1C4D  3EFF               	addlw	-1
  5704  1C4E  1D03               	skipz
  5705  1C4F  2C4A               	goto	u5735
  5706  1C50                     l3822:
  5707  1C50  3001               	movlw	1
  5708  1C51  02A6               	subwf	___lwdiv@counter,f
  5709  1C52  1D03               	btfss	3,2
  5710  1C53  2C55               	goto	u5741
  5711  1C54  2C56               	goto	u5740
  5712  1C55                     u5741:
  5713  1C55  2C31               	goto	l3814
  5714  1C56                     u5740:
  5715  1C56                     l3824:
  5716  1C56  0828               	movf	___lwdiv@quotient+1,w
  5717  1C57  00A2               	movwf	?___lwdiv+1
  5718  1C58  0827               	movf	___lwdiv@quotient,w
  5719  1C59  00A1               	movwf	?___lwdiv
  5720  1C5A                     l697:
  5721  1C5A  0008               	return
  5722  1C5B                     __end_of___lwdiv:
  5723                           
  5724                           	psect	text9
  5725  093C                     __ptext9:	
  5726 ;; *************** function ___flmul *****************
  5727 ;; Defined at:
  5728 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcmul.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  b               4   11[BANK0 ] unsigned int 
  5731 ;;  a               4   15[BANK0 ] unsigned int 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  prod            4   31[BANK0 ] struct .
  5734 ;;  grs             4   25[BANK0 ] unsigned long 
  5735 ;;  temp            2   35[BANK0 ] struct .
  5736 ;;  bexp            1   30[BANK0 ] unsigned char 
  5737 ;;  aexp            1   29[BANK0 ] unsigned char 
  5738 ;;  sign            1   24[BANK0 ] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  4   11[BANK0 ] unsigned char 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5748 ;;      Params:         0       8       0       0       0
  5749 ;;      Locals:         0      13       0       0       0
  5750 ;;      Temps:          0       5       0       0       0
  5751 ;;      Totals:         0      26       0       0       0
  5752 ;;Total ram usage:       26 bytes
  5753 ;; Hardware stack levels used: 1
  5754 ;; Hardware stack levels required when called: 3
  5755 ;; This function calls:
  5756 ;;		__Umul8_16
  5757 ;; This function is called by:
  5758 ;;		_main
  5759 ;;		_fround
  5760 ;;		_scale
  5761 ;;		_sprintf
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           
  5765  093C                     ___flmul:	
  5766                           ;psect for function ___flmul
  5767                           
  5768  093C                     l2668:	
  5769                           ;incstack = 0
  5770                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5771                           
  5772  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5773  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5774  093E  082E               	movf	___flmul@b+3,w
  5775  093F  3980               	andlw	128
  5776  0940  00B3               	movwf	??___flmul
  5777  0941  0833               	movf	??___flmul,w
  5778  0942  00B8               	movwf	___flmul@sign
  5779  0943                     l2670:
  5780  0943  082E               	movf	___flmul@b+3,w
  5781  0944  00B3               	movwf	??___flmul
  5782  0945  0733               	addwf	??___flmul,w
  5783  0946  00B4               	movwf	??___flmul+1
  5784  0947  0834               	movf	??___flmul+1,w
  5785  0948  00BE               	movwf	___flmul@bexp
  5786  0949                     l2672:
  5787  0949  1FAD               	btfss	___flmul@b+2,7
  5788  094A  294C               	goto	u3551
  5789  094B  294D               	goto	u3550
  5790  094C                     u3551:
  5791  094C  294E               	goto	l2676
  5792  094D                     u3550:
  5793  094D                     l2674:
  5794  094D  143E               	bsf	___flmul@bexp,0
  5795  094E                     l2676:
  5796  094E  083E               	movf	___flmul@bexp,w
  5797  094F  1903               	btfsc	3,2
  5798  0950  2952               	goto	u3561
  5799  0951  2953               	goto	u3560
  5800  0952                     u3561:
  5801  0952  2962               	goto	l2684
  5802  0953                     u3560:
  5803  0953                     l2678:
  5804  0953  0A3E               	incf	___flmul@bexp,w
  5805  0954  1D03               	btfss	3,2
  5806  0955  2957               	goto	u3571
  5807  0956  2958               	goto	u3570
  5808  0957                     u3571:
  5809  0957  2960               	goto	l2682
  5810  0958                     u3570:
  5811  0958                     l2680:
  5812  0958  3000               	movlw	0
  5813  0959  00AE               	movwf	___flmul@b+3
  5814  095A  3000               	movlw	0
  5815  095B  00AD               	movwf	___flmul@b+2
  5816  095C  3000               	movlw	0
  5817  095D  00AC               	movwf	___flmul@b+1
  5818  095E  3000               	movlw	0
  5819  095F  00AB               	movwf	___flmul@b
  5820  0960                     l2682:
  5821  0960  17AD               	bsf	___flmul@b+2,7
  5822  0961  296A               	goto	l2686
  5823  0962                     l2684:
  5824  0962  3000               	movlw	0
  5825  0963  00AE               	movwf	___flmul@b+3
  5826  0964  3000               	movlw	0
  5827  0965  00AD               	movwf	___flmul@b+2
  5828  0966  3000               	movlw	0
  5829  0967  00AC               	movwf	___flmul@b+1
  5830  0968  3000               	movlw	0
  5831  0969  00AB               	movwf	___flmul@b
  5832  096A                     l2686:
  5833  096A  0832               	movf	___flmul@a+3,w
  5834  096B  3980               	andlw	128
  5835  096C  00B3               	movwf	??___flmul
  5836  096D  0833               	movf	??___flmul,w
  5837  096E  06B8               	xorwf	___flmul@sign,f
  5838  096F                     l2688:
  5839  096F  0832               	movf	___flmul@a+3,w
  5840  0970  00B3               	movwf	??___flmul
  5841  0971  0733               	addwf	??___flmul,w
  5842  0972  00B4               	movwf	??___flmul+1
  5843  0973  0834               	movf	??___flmul+1,w
  5844  0974  00BD               	movwf	___flmul@aexp
  5845  0975                     l2690:
  5846  0975  1FB1               	btfss	___flmul@a+2,7
  5847  0976  2978               	goto	u3581
  5848  0977  2979               	goto	u3580
  5849  0978                     u3581:
  5850  0978  297A               	goto	l2694
  5851  0979                     u3580:
  5852  0979                     l2692:
  5853  0979  143D               	bsf	___flmul@aexp,0
  5854  097A                     l2694:
  5855  097A  083D               	movf	___flmul@aexp,w
  5856  097B  1903               	btfsc	3,2
  5857  097C  297E               	goto	u3591
  5858  097D  297F               	goto	u3590
  5859  097E                     u3591:
  5860  097E  298E               	goto	l2702
  5861  097F                     u3590:
  5862  097F                     l2696:
  5863  097F  0A3D               	incf	___flmul@aexp,w
  5864  0980  1D03               	btfss	3,2
  5865  0981  2983               	goto	u3601
  5866  0982  2984               	goto	u3600
  5867  0983                     u3601:
  5868  0983  298C               	goto	l2700
  5869  0984                     u3600:
  5870  0984                     l2698:
  5871  0984  3000               	movlw	0
  5872  0985  00B2               	movwf	___flmul@a+3
  5873  0986  3000               	movlw	0
  5874  0987  00B1               	movwf	___flmul@a+2
  5875  0988  3000               	movlw	0
  5876  0989  00B0               	movwf	___flmul@a+1
  5877  098A  3000               	movlw	0
  5878  098B  00AF               	movwf	___flmul@a
  5879  098C                     l2700:
  5880  098C  17B1               	bsf	___flmul@a+2,7
  5881  098D  2996               	goto	l2704
  5882  098E                     l2702:
  5883  098E  3000               	movlw	0
  5884  098F  00B2               	movwf	___flmul@a+3
  5885  0990  3000               	movlw	0
  5886  0991  00B1               	movwf	___flmul@a+2
  5887  0992  3000               	movlw	0
  5888  0993  00B0               	movwf	___flmul@a+1
  5889  0994  3000               	movlw	0
  5890  0995  00AF               	movwf	___flmul@a
  5891  0996                     l2704:
  5892  0996  083D               	movf	___flmul@aexp,w
  5893  0997  1903               	btfsc	3,2
  5894  0998  299A               	goto	u3611
  5895  0999  299B               	goto	u3610
  5896  099A                     u3611:
  5897  099A  29A0               	goto	l2708
  5898  099B                     u3610:
  5899  099B                     l2706:
  5900  099B  083E               	movf	___flmul@bexp,w
  5901  099C  1D03               	btfss	3,2
  5902  099D  299F               	goto	u3621
  5903  099E  29A0               	goto	u3620
  5904  099F                     u3621:
  5905  099F  29A9               	goto	l2712
  5906  09A0                     u3620:
  5907  09A0                     l2708:
  5908  09A0  3000               	movlw	0
  5909  09A1  00AE               	movwf	?___flmul+3
  5910  09A2  3000               	movlw	0
  5911  09A3  00AD               	movwf	?___flmul+2
  5912  09A4  3000               	movlw	0
  5913  09A5  00AC               	movwf	?___flmul+1
  5914  09A6  3000               	movlw	0
  5915  09A7  00AB               	movwf	?___flmul
  5916  09A8  2C9C               	goto	l814
  5917  09A9                     l2712:
  5918  09A9  082B               	movf	___flmul@b,w
  5919  09AA  00B3               	movwf	??___flmul
  5920  09AB  0833               	movf	??___flmul,w
  5921  09AC  00F3               	movwf	__Umul8_16@multiplicand
  5922  09AD  0831               	movf	___flmul@a+2,w
  5923  09AE  160A  158A  2297  120A  158A  	fcall	__Umul8_16
  5924  09B3  0874               	movf	?__Umul8_16+1,w
  5925  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  5926  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  5927  09B6  00C4               	movwf	___flmul@temp+1
  5928  09B7  0873               	movf	?__Umul8_16,w
  5929  09B8  00C3               	movwf	___flmul@temp
  5930  09B9                     l2714:
  5931  09B9  0843               	movf	___flmul@temp,w
  5932  09BA  00B3               	movwf	??___flmul
  5933  09BB  01B4               	clrf	??___flmul+1
  5934  09BC  01B5               	clrf	??___flmul+2
  5935  09BD  01B6               	clrf	??___flmul+3
  5936  09BE  0836               	movf	??___flmul+3,w
  5937  09BF  00BC               	movwf	___flmul@grs+3
  5938  09C0  0835               	movf	??___flmul+2,w
  5939  09C1  00BB               	movwf	___flmul@grs+2
  5940  09C2  0834               	movf	??___flmul+1,w
  5941  09C3  00BA               	movwf	___flmul@grs+1
  5942  09C4  0833               	movf	??___flmul,w
  5943  09C5  00B9               	movwf	___flmul@grs
  5944  09C6                     l2716:
  5945  09C6  0844               	movf	___flmul@temp+1,w
  5946  09C7  00B3               	movwf	??___flmul
  5947  09C8  01B4               	clrf	??___flmul+1
  5948  09C9  01B5               	clrf	??___flmul+2
  5949  09CA  01B6               	clrf	??___flmul+3
  5950  09CB  0836               	movf	??___flmul+3,w
  5951  09CC  00C2               	movwf	___flmul@prod+3
  5952  09CD  0835               	movf	??___flmul+2,w
  5953  09CE  00C1               	movwf	___flmul@prod+2
  5954  09CF  0834               	movf	??___flmul+1,w
  5955  09D0  00C0               	movwf	___flmul@prod+1
  5956  09D1  0833               	movf	??___flmul,w
  5957  09D2  00BF               	movwf	___flmul@prod
  5958  09D3  082C               	movf	___flmul@b+1,w
  5959  09D4  00B3               	movwf	??___flmul
  5960  09D5  0833               	movf	??___flmul,w
  5961  09D6  00F3               	movwf	__Umul8_16@multiplicand
  5962  09D7  0830               	movf	___flmul@a+1,w
  5963  09D8  160A  158A  2297  120A  158A  	fcall	__Umul8_16
  5964  09DD  0874               	movf	?__Umul8_16+1,w
  5965  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  5966  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  5967  09E0  00C4               	movwf	___flmul@temp+1
  5968  09E1  0873               	movf	?__Umul8_16,w
  5969  09E2  00C3               	movwf	___flmul@temp
  5970  09E3                     l2718:
  5971  09E3  0843               	movf	___flmul@temp,w
  5972  09E4  00B3               	movwf	??___flmul
  5973  09E5  01B4               	clrf	??___flmul+1
  5974  09E6  01B5               	clrf	??___flmul+2
  5975  09E7  01B6               	clrf	??___flmul+3
  5976  09E8  0833               	movf	??___flmul,w
  5977  09E9  07B9               	addwf	___flmul@grs,f
  5978  09EA  0834               	movf	??___flmul+1,w
  5979  09EB  1103               	clrz
  5980  09EC  1803               	skipnc
  5981  09ED  3E01               	addlw	1
  5982  09EE  1903               	skipnz
  5983  09EF  29F1               	goto	u3631
  5984  09F0  07BA               	addwf	___flmul@grs+1,f
  5985  09F1                     u3631:
  5986  09F1  0835               	movf	??___flmul+2,w
  5987  09F2  1103               	clrz
  5988  09F3  1803               	skipnc
  5989  09F4  3E01               	addlw	1
  5990  09F5  1903               	skipnz
  5991  09F6  29F8               	goto	u3632
  5992  09F7  07BB               	addwf	___flmul@grs+2,f
  5993  09F8                     u3632:
  5994  09F8  0836               	movf	??___flmul+3,w
  5995  09F9  1103               	clrz
  5996  09FA  1803               	skipnc
  5997  09FB  3E01               	addlw	1
  5998  09FC  1903               	skipnz
  5999  09FD  29FF               	goto	u3633
  6000  09FE  07BC               	addwf	___flmul@grs+3,f
  6001  09FF                     u3633:
  6002  09FF                     l2720:
  6003  09FF  0844               	movf	___flmul@temp+1,w
  6004  0A00  00B3               	movwf	??___flmul
  6005  0A01  01B4               	clrf	??___flmul+1
  6006  0A02  01B5               	clrf	??___flmul+2
  6007  0A03  01B6               	clrf	??___flmul+3
  6008  0A04  0833               	movf	??___flmul,w
  6009  0A05  07BF               	addwf	___flmul@prod,f
  6010  0A06  0834               	movf	??___flmul+1,w
  6011  0A07  1103               	clrz
  6012  0A08  1803               	skipnc
  6013  0A09  3E01               	addlw	1
  6014  0A0A  1903               	skipnz
  6015  0A0B  2A0D               	goto	u3641
  6016  0A0C  07C0               	addwf	___flmul@prod+1,f
  6017  0A0D                     u3641:
  6018  0A0D  0835               	movf	??___flmul+2,w
  6019  0A0E  1103               	clrz
  6020  0A0F  1803               	skipnc
  6021  0A10  3E01               	addlw	1
  6022  0A11  1903               	skipnz
  6023  0A12  2A14               	goto	u3642
  6024  0A13  07C1               	addwf	___flmul@prod+2,f
  6025  0A14                     u3642:
  6026  0A14  0836               	movf	??___flmul+3,w
  6027  0A15  1103               	clrz
  6028  0A16  1803               	skipnc
  6029  0A17  3E01               	addlw	1
  6030  0A18  1903               	skipnz
  6031  0A19  2A1B               	goto	u3643
  6032  0A1A  07C2               	addwf	___flmul@prod+3,f
  6033  0A1B                     u3643:
  6034  0A1B  082D               	movf	___flmul@b+2,w
  6035  0A1C  00B3               	movwf	??___flmul
  6036  0A1D  0833               	movf	??___flmul,w
  6037  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  6038  0A1F  082F               	movf	___flmul@a,w
  6039  0A20  160A  158A  2297  120A  158A  	fcall	__Umul8_16
  6040  0A25  0874               	movf	?__Umul8_16+1,w
  6041  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  6042  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  6043  0A28  00C4               	movwf	___flmul@temp+1
  6044  0A29  0873               	movf	?__Umul8_16,w
  6045  0A2A  00C3               	movwf	___flmul@temp
  6046  0A2B                     l2722:
  6047  0A2B  0843               	movf	___flmul@temp,w
  6048  0A2C  00B3               	movwf	??___flmul
  6049  0A2D  01B4               	clrf	??___flmul+1
  6050  0A2E  01B5               	clrf	??___flmul+2
  6051  0A2F  01B6               	clrf	??___flmul+3
  6052  0A30  0833               	movf	??___flmul,w
  6053  0A31  07B9               	addwf	___flmul@grs,f
  6054  0A32  0834               	movf	??___flmul+1,w
  6055  0A33  1103               	clrz
  6056  0A34  1803               	skipnc
  6057  0A35  3E01               	addlw	1
  6058  0A36  1903               	skipnz
  6059  0A37  2A39               	goto	u3651
  6060  0A38  07BA               	addwf	___flmul@grs+1,f
  6061  0A39                     u3651:
  6062  0A39  0835               	movf	??___flmul+2,w
  6063  0A3A  1103               	clrz
  6064  0A3B  1803               	skipnc
  6065  0A3C  3E01               	addlw	1
  6066  0A3D  1903               	skipnz
  6067  0A3E  2A40               	goto	u3652
  6068  0A3F  07BB               	addwf	___flmul@grs+2,f
  6069  0A40                     u3652:
  6070  0A40  0836               	movf	??___flmul+3,w
  6071  0A41  1103               	clrz
  6072  0A42  1803               	skipnc
  6073  0A43  3E01               	addlw	1
  6074  0A44  1903               	skipnz
  6075  0A45  2A47               	goto	u3653
  6076  0A46  07BC               	addwf	___flmul@grs+3,f
  6077  0A47                     u3653:
  6078  0A47                     l2724:
  6079  0A47  0844               	movf	___flmul@temp+1,w
  6080  0A48  00B3               	movwf	??___flmul
  6081  0A49  01B4               	clrf	??___flmul+1
  6082  0A4A  01B5               	clrf	??___flmul+2
  6083  0A4B  01B6               	clrf	??___flmul+3
  6084  0A4C  0833               	movf	??___flmul,w
  6085  0A4D  07BF               	addwf	___flmul@prod,f
  6086  0A4E  0834               	movf	??___flmul+1,w
  6087  0A4F  1103               	clrz
  6088  0A50  1803               	skipnc
  6089  0A51  3E01               	addlw	1
  6090  0A52  1903               	skipnz
  6091  0A53  2A55               	goto	u3661
  6092  0A54  07C0               	addwf	___flmul@prod+1,f
  6093  0A55                     u3661:
  6094  0A55  0835               	movf	??___flmul+2,w
  6095  0A56  1103               	clrz
  6096  0A57  1803               	skipnc
  6097  0A58  3E01               	addlw	1
  6098  0A59  1903               	skipnz
  6099  0A5A  2A5C               	goto	u3662
  6100  0A5B  07C1               	addwf	___flmul@prod+2,f
  6101  0A5C                     u3662:
  6102  0A5C  0836               	movf	??___flmul+3,w
  6103  0A5D  1103               	clrz
  6104  0A5E  1803               	skipnc
  6105  0A5F  3E01               	addlw	1
  6106  0A60  1903               	skipnz
  6107  0A61  2A63               	goto	u3663
  6108  0A62  07C2               	addwf	___flmul@prod+3,f
  6109  0A63                     u3663:
  6110  0A63                     l2726:
  6111  0A63  3008               	movlw	8
  6112  0A64  00B3               	movwf	??___flmul
  6113  0A65                     u3675:
  6114  0A65  1003               	clrc
  6115  0A66  0DB9               	rlf	___flmul@grs,f
  6116  0A67  0DBA               	rlf	___flmul@grs+1,f
  6117  0A68  0DBB               	rlf	___flmul@grs+2,f
  6118  0A69  0DBC               	rlf	___flmul@grs+3,f
  6119  0A6A  0BB3               	decfsz	??___flmul,f
  6120  0A6B  2A65               	goto	u3675
  6121  0A6C                     l2728:
  6122  0A6C  082C               	movf	___flmul@b+1,w
  6123  0A6D  00B3               	movwf	??___flmul
  6124  0A6E  0833               	movf	??___flmul,w
  6125  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  6126  0A70  082F               	movf	___flmul@a,w
  6127  0A71  160A  158A  2297  120A  158A  	fcall	__Umul8_16
  6128  0A76  0874               	movf	?__Umul8_16+1,w
  6129  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  6130  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  6131  0A79  00C4               	movwf	___flmul@temp+1
  6132  0A7A  0873               	movf	?__Umul8_16,w
  6133  0A7B  00C3               	movwf	___flmul@temp
  6134  0A7C                     l2730:
  6135  0A7C  0843               	movf	___flmul@temp,w
  6136  0A7D  00B3               	movwf	??___flmul
  6137  0A7E  0844               	movf	___flmul@temp+1,w
  6138  0A7F  00B4               	movwf	??___flmul+1
  6139  0A80  01B5               	clrf	??___flmul+2
  6140  0A81  01B6               	clrf	??___flmul+3
  6141  0A82  0833               	movf	??___flmul,w
  6142  0A83  07B9               	addwf	___flmul@grs,f
  6143  0A84  0834               	movf	??___flmul+1,w
  6144  0A85  1103               	clrz
  6145  0A86  1803               	skipnc
  6146  0A87  3E01               	addlw	1
  6147  0A88  1903               	skipnz
  6148  0A89  2A8B               	goto	u3681
  6149  0A8A  07BA               	addwf	___flmul@grs+1,f
  6150  0A8B                     u3681:
  6151  0A8B  0835               	movf	??___flmul+2,w
  6152  0A8C  1103               	clrz
  6153  0A8D  1803               	skipnc
  6154  0A8E  3E01               	addlw	1
  6155  0A8F  1903               	skipnz
  6156  0A90  2A92               	goto	u3682
  6157  0A91  07BB               	addwf	___flmul@grs+2,f
  6158  0A92                     u3682:
  6159  0A92  0836               	movf	??___flmul+3,w
  6160  0A93  1103               	clrz
  6161  0A94  1803               	skipnc
  6162  0A95  3E01               	addlw	1
  6163  0A96  1903               	skipnz
  6164  0A97  2A99               	goto	u3683
  6165  0A98  07BC               	addwf	___flmul@grs+3,f
  6166  0A99                     u3683:
  6167  0A99                     l2732:
  6168  0A99  082B               	movf	___flmul@b,w
  6169  0A9A  00B3               	movwf	??___flmul
  6170  0A9B  0833               	movf	??___flmul,w
  6171  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  6172  0A9D  0830               	movf	___flmul@a+1,w
  6173  0A9E  160A  158A  2297  120A  158A  	fcall	__Umul8_16
  6174  0AA3  0874               	movf	?__Umul8_16+1,w
  6175  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  6176  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  6177  0AA6  00C4               	movwf	___flmul@temp+1
  6178  0AA7  0873               	movf	?__Umul8_16,w
  6179  0AA8  00C3               	movwf	___flmul@temp
  6180  0AA9                     l2734:
  6181  0AA9  0843               	movf	___flmul@temp,w
  6182  0AAA  00B3               	movwf	??___flmul
  6183  0AAB  0844               	movf	___flmul@temp+1,w
  6184  0AAC  00B4               	movwf	??___flmul+1
  6185  0AAD  01B5               	clrf	??___flmul+2
  6186  0AAE  01B6               	clrf	??___flmul+3
  6187  0AAF  0833               	movf	??___flmul,w
  6188  0AB0  07B9               	addwf	___flmul@grs,f
  6189  0AB1  0834               	movf	??___flmul+1,w
  6190  0AB2  1103               	clrz
  6191  0AB3  1803               	skipnc
  6192  0AB4  3E01               	addlw	1
  6193  0AB5  1903               	skipnz
  6194  0AB6  2AB8               	goto	u3691
  6195  0AB7  07BA               	addwf	___flmul@grs+1,f
  6196  0AB8                     u3691:
  6197  0AB8  0835               	movf	??___flmul+2,w
  6198  0AB9  1103               	clrz
  6199  0ABA  1803               	skipnc
  6200  0ABB  3E01               	addlw	1
  6201  0ABC  1903               	skipnz
  6202  0ABD  2ABF               	goto	u3692
  6203  0ABE  07BB               	addwf	___flmul@grs+2,f
  6204  0ABF                     u3692:
  6205  0ABF  0836               	movf	??___flmul+3,w
  6206  0AC0  1103               	clrz
  6207  0AC1  1803               	skipnc
  6208  0AC2  3E01               	addlw	1
  6209  0AC3  1903               	skipnz
  6210  0AC4  2AC6               	goto	u3693
  6211  0AC5  07BC               	addwf	___flmul@grs+3,f
  6212  0AC6                     u3693:
  6213  0AC6                     l2736:
  6214  0AC6  3008               	movlw	8
  6215  0AC7  00B3               	movwf	??___flmul
  6216  0AC8                     u3705:
  6217  0AC8  1003               	clrc
  6218  0AC9  0DB9               	rlf	___flmul@grs,f
  6219  0ACA  0DBA               	rlf	___flmul@grs+1,f
  6220  0ACB  0DBB               	rlf	___flmul@grs+2,f
  6221  0ACC  0DBC               	rlf	___flmul@grs+3,f
  6222  0ACD  0BB3               	decfsz	??___flmul,f
  6223  0ACE  2AC8               	goto	u3705
  6224  0ACF  082B               	movf	___flmul@b,w
  6225  0AD0  00B3               	movwf	??___flmul
  6226  0AD1  0833               	movf	??___flmul,w
  6227  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  6228  0AD3  082F               	movf	___flmul@a,w
  6229  0AD4  160A  158A  2297  120A  158A  	fcall	__Umul8_16
  6230  0AD9  0874               	movf	?__Umul8_16+1,w
  6231  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  6232  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  6233  0ADC  00C4               	movwf	___flmul@temp+1
  6234  0ADD  0873               	movf	?__Umul8_16,w
  6235  0ADE  00C3               	movwf	___flmul@temp
  6236  0ADF                     l2738:
  6237  0ADF  0843               	movf	___flmul@temp,w
  6238  0AE0  00B3               	movwf	??___flmul
  6239  0AE1  0844               	movf	___flmul@temp+1,w
  6240  0AE2  00B4               	movwf	??___flmul+1
  6241  0AE3  01B5               	clrf	??___flmul+2
  6242  0AE4  01B6               	clrf	??___flmul+3
  6243  0AE5  0833               	movf	??___flmul,w
  6244  0AE6  07B9               	addwf	___flmul@grs,f
  6245  0AE7  0834               	movf	??___flmul+1,w
  6246  0AE8  1103               	clrz
  6247  0AE9  1803               	skipnc
  6248  0AEA  3E01               	addlw	1
  6249  0AEB  1903               	skipnz
  6250  0AEC  2AEE               	goto	u3711
  6251  0AED  07BA               	addwf	___flmul@grs+1,f
  6252  0AEE                     u3711:
  6253  0AEE  0835               	movf	??___flmul+2,w
  6254  0AEF  1103               	clrz
  6255  0AF0  1803               	skipnc
  6256  0AF1  3E01               	addlw	1
  6257  0AF2  1903               	skipnz
  6258  0AF3  2AF5               	goto	u3712
  6259  0AF4  07BB               	addwf	___flmul@grs+2,f
  6260  0AF5                     u3712:
  6261  0AF5  0836               	movf	??___flmul+3,w
  6262  0AF6  1103               	clrz
  6263  0AF7  1803               	skipnc
  6264  0AF8  3E01               	addlw	1
  6265  0AF9  1903               	skipnz
  6266  0AFA  2AFC               	goto	u3713
  6267  0AFB  07BC               	addwf	___flmul@grs+3,f
  6268  0AFC                     u3713:
  6269  0AFC                     l2740:
  6270  0AFC  082C               	movf	___flmul@b+1,w
  6271  0AFD  00B3               	movwf	??___flmul
  6272  0AFE  0833               	movf	??___flmul,w
  6273  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  6274  0B00  0831               	movf	___flmul@a+2,w
  6275  0B01  160A  158A  2297  120A  158A  	fcall	__Umul8_16
  6276  0B06  0874               	movf	?__Umul8_16+1,w
  6277  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  6278  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  6279  0B09  00C4               	movwf	___flmul@temp+1
  6280  0B0A  0873               	movf	?__Umul8_16,w
  6281  0B0B  00C3               	movwf	___flmul@temp
  6282  0B0C  0843               	movf	___flmul@temp,w
  6283  0B0D  00B3               	movwf	??___flmul
  6284  0B0E  0844               	movf	___flmul@temp+1,w
  6285  0B0F  00B4               	movwf	??___flmul+1
  6286  0B10  01B5               	clrf	??___flmul+2
  6287  0B11  01B6               	clrf	??___flmul+3
  6288  0B12  0833               	movf	??___flmul,w
  6289  0B13  07BF               	addwf	___flmul@prod,f
  6290  0B14  0834               	movf	??___flmul+1,w
  6291  0B15  1103               	clrz
  6292  0B16  1803               	skipnc
  6293  0B17  3E01               	addlw	1
  6294  0B18  1903               	skipnz
  6295  0B19  2B1B               	goto	u3721
  6296  0B1A  07C0               	addwf	___flmul@prod+1,f
  6297  0B1B                     u3721:
  6298  0B1B  0835               	movf	??___flmul+2,w
  6299  0B1C  1103               	clrz
  6300  0B1D  1803               	skipnc
  6301  0B1E  3E01               	addlw	1
  6302  0B1F  1903               	skipnz
  6303  0B20  2B22               	goto	u3722
  6304  0B21  07C1               	addwf	___flmul@prod+2,f
  6305  0B22                     u3722:
  6306  0B22  0836               	movf	??___flmul+3,w
  6307  0B23  1103               	clrz
  6308  0B24  1803               	skipnc
  6309  0B25  3E01               	addlw	1
  6310  0B26  1903               	skipnz
  6311  0B27  2B29               	goto	u3723
  6312  0B28  07C2               	addwf	___flmul@prod+3,f
  6313  0B29                     u3723:
  6314  0B29                     l2742:
  6315  0B29  082D               	movf	___flmul@b+2,w
  6316  0B2A  00B3               	movwf	??___flmul
  6317  0B2B  0833               	movf	??___flmul,w
  6318  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  6319  0B2D  0830               	movf	___flmul@a+1,w
  6320  0B2E  160A  158A  2297  120A  158A  	fcall	__Umul8_16
  6321  0B33  0874               	movf	?__Umul8_16+1,w
  6322  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  6323  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  6324  0B36  00C4               	movwf	___flmul@temp+1
  6325  0B37  0873               	movf	?__Umul8_16,w
  6326  0B38  00C3               	movwf	___flmul@temp
  6327  0B39                     l2744:
  6328  0B39  0843               	movf	___flmul@temp,w
  6329  0B3A  00B3               	movwf	??___flmul
  6330  0B3B  0844               	movf	___flmul@temp+1,w
  6331  0B3C  00B4               	movwf	??___flmul+1
  6332  0B3D  01B5               	clrf	??___flmul+2
  6333  0B3E  01B6               	clrf	??___flmul+3
  6334  0B3F  0833               	movf	??___flmul,w
  6335  0B40  07BF               	addwf	___flmul@prod,f
  6336  0B41  0834               	movf	??___flmul+1,w
  6337  0B42  1103               	clrz
  6338  0B43  1803               	skipnc
  6339  0B44  3E01               	addlw	1
  6340  0B45  1903               	skipnz
  6341  0B46  2B48               	goto	u3731
  6342  0B47  07C0               	addwf	___flmul@prod+1,f
  6343  0B48                     u3731:
  6344  0B48  0835               	movf	??___flmul+2,w
  6345  0B49  1103               	clrz
  6346  0B4A  1803               	skipnc
  6347  0B4B  3E01               	addlw	1
  6348  0B4C  1903               	skipnz
  6349  0B4D  2B4F               	goto	u3732
  6350  0B4E  07C1               	addwf	___flmul@prod+2,f
  6351  0B4F                     u3732:
  6352  0B4F  0836               	movf	??___flmul+3,w
  6353  0B50  1103               	clrz
  6354  0B51  1803               	skipnc
  6355  0B52  3E01               	addlw	1
  6356  0B53  1903               	skipnz
  6357  0B54  2B56               	goto	u3733
  6358  0B55  07C2               	addwf	___flmul@prod+3,f
  6359  0B56                     u3733:
  6360  0B56  082D               	movf	___flmul@b+2,w
  6361  0B57  00B3               	movwf	??___flmul
  6362  0B58  0833               	movf	??___flmul,w
  6363  0B59  00F3               	movwf	__Umul8_16@multiplicand
  6364  0B5A  0831               	movf	___flmul@a+2,w
  6365  0B5B  160A  158A  2297  120A  158A  	fcall	__Umul8_16
  6366  0B60  0874               	movf	?__Umul8_16+1,w
  6367  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6368  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6369  0B63  00C4               	movwf	___flmul@temp+1
  6370  0B64  0873               	movf	?__Umul8_16,w
  6371  0B65  00C3               	movwf	___flmul@temp
  6372  0B66                     l2746:
  6373  0B66  0843               	movf	___flmul@temp,w
  6374  0B67  00B3               	movwf	??___flmul
  6375  0B68  0844               	movf	___flmul@temp+1,w
  6376  0B69  00B4               	movwf	??___flmul+1
  6377  0B6A  01B5               	clrf	??___flmul+2
  6378  0B6B  01B6               	clrf	??___flmul+3
  6379  0B6C  3008               	movlw	8
  6380  0B6D                     u3745:
  6381  0B6D  1003               	clrc
  6382  0B6E  0DB3               	rlf	??___flmul,f
  6383  0B6F  0DB4               	rlf	??___flmul+1,f
  6384  0B70  0DB5               	rlf	??___flmul+2,f
  6385  0B71  0DB6               	rlf	??___flmul+3,f
  6386  0B72                     u3740:
  6387  0B72  3EFF               	addlw	-1
  6388  0B73  1D03               	skipz
  6389  0B74  2B6D               	goto	u3745
  6390  0B75  0833               	movf	??___flmul,w
  6391  0B76  07BF               	addwf	___flmul@prod,f
  6392  0B77  0834               	movf	??___flmul+1,w
  6393  0B78  1103               	clrz
  6394  0B79  1803               	skipnc
  6395  0B7A  3E01               	addlw	1
  6396  0B7B  1903               	skipnz
  6397  0B7C  2B7E               	goto	u3751
  6398  0B7D  07C0               	addwf	___flmul@prod+1,f
  6399  0B7E                     u3751:
  6400  0B7E  0835               	movf	??___flmul+2,w
  6401  0B7F  1103               	clrz
  6402  0B80  1803               	skipnc
  6403  0B81  3E01               	addlw	1
  6404  0B82  1903               	skipnz
  6405  0B83  2B85               	goto	u3752
  6406  0B84  07C1               	addwf	___flmul@prod+2,f
  6407  0B85                     u3752:
  6408  0B85  0836               	movf	??___flmul+3,w
  6409  0B86  1103               	clrz
  6410  0B87  1803               	skipnc
  6411  0B88  3E01               	addlw	1
  6412  0B89  1903               	skipnz
  6413  0B8A  2B8C               	goto	u3753
  6414  0B8B  07C2               	addwf	___flmul@prod+3,f
  6415  0B8C                     u3753:
  6416  0B8C                     l2748:
  6417  0B8C  0839               	movf	___flmul@grs,w
  6418  0B8D  00B3               	movwf	??___flmul
  6419  0B8E  083A               	movf	___flmul@grs+1,w
  6420  0B8F  00B4               	movwf	??___flmul+1
  6421  0B90  083B               	movf	___flmul@grs+2,w
  6422  0B91  00B5               	movwf	??___flmul+2
  6423  0B92  083C               	movf	___flmul@grs+3,w
  6424  0B93  00B6               	movwf	??___flmul+3
  6425  0B94  3018               	movlw	24
  6426  0B95                     u3765:
  6427  0B95  1003               	clrc
  6428  0B96  0CB6               	rrf	??___flmul+3,f
  6429  0B97  0CB5               	rrf	??___flmul+2,f
  6430  0B98  0CB4               	rrf	??___flmul+1,f
  6431  0B99  0CB3               	rrf	??___flmul,f
  6432  0B9A                     u3760:
  6433  0B9A  3EFF               	addlw	-1
  6434  0B9B  1D03               	skipz
  6435  0B9C  2B95               	goto	u3765
  6436  0B9D  0833               	movf	??___flmul,w
  6437  0B9E  07BF               	addwf	___flmul@prod,f
  6438  0B9F  0834               	movf	??___flmul+1,w
  6439  0BA0  1103               	clrz
  6440  0BA1  1803               	skipnc
  6441  0BA2  3E01               	addlw	1
  6442  0BA3  1903               	skipnz
  6443  0BA4  2BA6               	goto	u3771
  6444  0BA5  07C0               	addwf	___flmul@prod+1,f
  6445  0BA6                     u3771:
  6446  0BA6  0835               	movf	??___flmul+2,w
  6447  0BA7  1103               	clrz
  6448  0BA8  1803               	skipnc
  6449  0BA9  3E01               	addlw	1
  6450  0BAA  1903               	skipnz
  6451  0BAB  2BAD               	goto	u3772
  6452  0BAC  07C1               	addwf	___flmul@prod+2,f
  6453  0BAD                     u3772:
  6454  0BAD  0836               	movf	??___flmul+3,w
  6455  0BAE  1103               	clrz
  6456  0BAF  1803               	skipnc
  6457  0BB0  3E01               	addlw	1
  6458  0BB1  1903               	skipnz
  6459  0BB2  2BB4               	goto	u3773
  6460  0BB3  07C2               	addwf	___flmul@prod+3,f
  6461  0BB4                     u3773:
  6462  0BB4                     l2750:
  6463  0BB4  3008               	movlw	8
  6464  0BB5  00B3               	movwf	??___flmul
  6465  0BB6                     u3785:
  6466  0BB6  1003               	clrc
  6467  0BB7  0DB9               	rlf	___flmul@grs,f
  6468  0BB8  0DBA               	rlf	___flmul@grs+1,f
  6469  0BB9  0DBB               	rlf	___flmul@grs+2,f
  6470  0BBA  0DBC               	rlf	___flmul@grs+3,f
  6471  0BBB  0BB3               	decfsz	??___flmul,f
  6472  0BBC  2BB6               	goto	u3785
  6473  0BBD                     l2752:
  6474  0BBD  083E               	movf	___flmul@bexp,w
  6475  0BBE  073D               	addwf	___flmul@aexp,w
  6476  0BBF  00B3               	movwf	??___flmul
  6477  0BC0  01B4               	clrf	??___flmul+1
  6478  0BC1  0DB4               	rlf	??___flmul+1,f
  6479  0BC2  0833               	movf	??___flmul,w
  6480  0BC3  3E82               	addlw	130
  6481  0BC4  00C3               	movwf	___flmul@temp
  6482  0BC5  0834               	movf	??___flmul+1,w
  6483  0BC6  1803               	skipnc
  6484  0BC7  3E01               	addlw	1
  6485  0BC8  3EFF               	addlw	255
  6486  0BC9  00C4               	movwf	___flmul@temp+1
  6487  0BCA  2BE8               	goto	l2764
  6488  0BCB                     l2754:
  6489  0BCB  3001               	movlw	1
  6490  0BCC  00B3               	movwf	??___flmul
  6491  0BCD                     u3795:
  6492  0BCD  1003               	clrc
  6493  0BCE  0DBF               	rlf	___flmul@prod,f
  6494  0BCF  0DC0               	rlf	___flmul@prod+1,f
  6495  0BD0  0DC1               	rlf	___flmul@prod+2,f
  6496  0BD1  0DC2               	rlf	___flmul@prod+3,f
  6497  0BD2  0BB3               	decfsz	??___flmul,f
  6498  0BD3  2BCD               	goto	u3795
  6499  0BD4                     l2756:
  6500  0BD4  1FBC               	btfss	___flmul@grs+3,7
  6501  0BD5  2BD7               	goto	u3801
  6502  0BD6  2BD8               	goto	u3800
  6503  0BD7                     u3801:
  6504  0BD7  2BD9               	goto	l2760
  6505  0BD8                     u3800:
  6506  0BD8                     l2758:
  6507  0BD8  143F               	bsf	___flmul@prod,0
  6508  0BD9                     l2760:
  6509  0BD9  3001               	movlw	1
  6510  0BDA  00B3               	movwf	??___flmul
  6511  0BDB                     u3815:
  6512  0BDB  1003               	clrc
  6513  0BDC  0DB9               	rlf	___flmul@grs,f
  6514  0BDD  0DBA               	rlf	___flmul@grs+1,f
  6515  0BDE  0DBB               	rlf	___flmul@grs+2,f
  6516  0BDF  0DBC               	rlf	___flmul@grs+3,f
  6517  0BE0  0BB3               	decfsz	??___flmul,f
  6518  0BE1  2BDB               	goto	u3815
  6519  0BE2                     l2762:
  6520  0BE2  30FF               	movlw	255
  6521  0BE3  07C3               	addwf	___flmul@temp,f
  6522  0BE4  1803               	skipnc
  6523  0BE5  0AC4               	incf	___flmul@temp+1,f
  6524  0BE6  30FF               	movlw	255
  6525  0BE7  07C4               	addwf	___flmul@temp+1,f
  6526  0BE8                     l2764:
  6527  0BE8  1FC1               	btfss	___flmul@prod+2,7
  6528  0BE9  2BEB               	goto	u3821
  6529  0BEA  2BEC               	goto	u3820
  6530  0BEB                     u3821:
  6531  0BEB  2BCB               	goto	l2754
  6532  0BEC                     u3820:
  6533  0BEC                     l2766:
  6534  0BEC  01BD               	clrf	___flmul@aexp
  6535  0BED                     l2768:
  6536  0BED  1FBC               	btfss	___flmul@grs+3,7
  6537  0BEE  2BF0               	goto	u3831
  6538  0BEF  2BF1               	goto	u3830
  6539  0BF0                     u3831:
  6540  0BF0  2C0D               	goto	l2776
  6541  0BF1                     u3830:
  6542  0BF1                     l2770:
  6543  0BF1  30FF               	movlw	255
  6544  0BF2  0539               	andwf	___flmul@grs,w
  6545  0BF3  00B3               	movwf	??___flmul
  6546  0BF4  30FF               	movlw	255
  6547  0BF5  053A               	andwf	___flmul@grs+1,w
  6548  0BF6  00B4               	movwf	??___flmul+1
  6549  0BF7  30FF               	movlw	255
  6550  0BF8  053B               	andwf	___flmul@grs+2,w
  6551  0BF9  00B5               	movwf	??___flmul+2
  6552  0BFA  307F               	movlw	127
  6553  0BFB  053C               	andwf	___flmul@grs+3,w
  6554  0BFC  00B6               	movwf	??___flmul+3
  6555  0BFD  0836               	movf	??___flmul+3,w
  6556  0BFE  0435               	iorwf	??___flmul+2,w
  6557  0BFF  0434               	iorwf	??___flmul+1,w
  6558  0C00  0433               	iorwf	??___flmul,w
  6559  0C01  1903               	skipnz
  6560  0C02  2C04               	goto	u3841
  6561  0C03  2C05               	goto	u3840
  6562  0C04                     u3841:
  6563  0C04  2C08               	goto	l820
  6564  0C05                     u3840:
  6565  0C05                     l2772:
  6566  0C05  01BD               	clrf	___flmul@aexp
  6567  0C06  0ABD               	incf	___flmul@aexp,f
  6568  0C07  2C0D               	goto	l2776
  6569  0C08                     l820:
  6570  0C08  1C3F               	btfss	___flmul@prod,0
  6571  0C09  2C0B               	goto	u3851
  6572  0C0A  2C0C               	goto	u3850
  6573  0C0B                     u3851:
  6574  0C0B  2C0D               	goto	l2776
  6575  0C0C                     u3850:
  6576  0C0C  2C05               	goto	l2772
  6577  0C0D                     l2776:
  6578  0C0D  083D               	movf	___flmul@aexp,w
  6579  0C0E  1903               	btfsc	3,2
  6580  0C0F  2C11               	goto	u3861
  6581  0C10  2C12               	goto	u3860
  6582  0C11                     u3861:
  6583  0C11  2C43               	goto	l2786
  6584  0C12                     u3860:
  6585  0C12                     l2778:
  6586  0C12  3001               	movlw	1
  6587  0C13  07BF               	addwf	___flmul@prod,f
  6588  0C14  3000               	movlw	0
  6589  0C15  1803               	skipnc
  6590  0C16  3001               	movlw	1
  6591  0C17  07C0               	addwf	___flmul@prod+1,f
  6592  0C18  3000               	movlw	0
  6593  0C19  1803               	skipnc
  6594  0C1A  3001               	movlw	1
  6595  0C1B  07C1               	addwf	___flmul@prod+2,f
  6596  0C1C  3000               	movlw	0
  6597  0C1D  1803               	skipnc
  6598  0C1E  3001               	movlw	1
  6599  0C1F  07C2               	addwf	___flmul@prod+3,f
  6600  0C20                     l2780:
  6601  0C20  1C42               	btfss	___flmul@prod+3,0
  6602  0C21  2C23               	goto	u3871
  6603  0C22  2C24               	goto	u3870
  6604  0C23                     u3871:
  6605  0C23  2C43               	goto	l2786
  6606  0C24                     u3870:
  6607  0C24                     l2782:
  6608  0C24  083F               	movf	___flmul@prod,w
  6609  0C25  00B3               	movwf	??___flmul
  6610  0C26  0840               	movf	___flmul@prod+1,w
  6611  0C27  00B4               	movwf	??___flmul+1
  6612  0C28  0841               	movf	___flmul@prod+2,w
  6613  0C29  00B5               	movwf	??___flmul+2
  6614  0C2A  0842               	movf	___flmul@prod+3,w
  6615  0C2B  00B6               	movwf	??___flmul+3
  6616  0C2C  3001               	movlw	1
  6617  0C2D  00B7               	movwf	??___flmul+4
  6618  0C2E                     u3885:
  6619  0C2E  0D36               	rlf	??___flmul+3,w
  6620  0C2F  0CB6               	rrf	??___flmul+3,f
  6621  0C30  0CB5               	rrf	??___flmul+2,f
  6622  0C31  0CB4               	rrf	??___flmul+1,f
  6623  0C32  0CB3               	rrf	??___flmul,f
  6624  0C33                     u3880:
  6625  0C33  0BB7               	decfsz	??___flmul+4,f
  6626  0C34  2C2E               	goto	u3885
  6627  0C35  0836               	movf	??___flmul+3,w
  6628  0C36  00C2               	movwf	___flmul@prod+3
  6629  0C37  0835               	movf	??___flmul+2,w
  6630  0C38  00C1               	movwf	___flmul@prod+2
  6631  0C39  0834               	movf	??___flmul+1,w
  6632  0C3A  00C0               	movwf	___flmul@prod+1
  6633  0C3B  0833               	movf	??___flmul,w
  6634  0C3C  00BF               	movwf	___flmul@prod
  6635  0C3D                     l2784:
  6636  0C3D  3001               	movlw	1
  6637  0C3E  07C3               	addwf	___flmul@temp,f
  6638  0C3F  1803               	skipnc
  6639  0C40  0AC4               	incf	___flmul@temp+1,f
  6640  0C41  3000               	movlw	0
  6641  0C42  07C4               	addwf	___flmul@temp+1,f
  6642  0C43                     l2786:
  6643  0C43  0844               	movf	___flmul@temp+1,w
  6644  0C44  3A80               	xorlw	128
  6645  0C45  00FF               	movwf	btemp+1
  6646  0C46  3080               	movlw	128
  6647  0C47  027F               	subwf	btemp+1,w
  6648  0C48  1D03               	skipz
  6649  0C49  2C4C               	goto	u3895
  6650  0C4A  30FF               	movlw	255
  6651  0C4B  0243               	subwf	___flmul@temp,w
  6652  0C4C                     u3895:
  6653  0C4C  1C03               	skipc
  6654  0C4D  2C4F               	goto	u3891
  6655  0C4E  2C50               	goto	u3890
  6656  0C4F                     u3891:
  6657  0C4F  2C5B               	goto	l2790
  6658  0C50                     u3890:
  6659  0C50                     l2788:
  6660  0C50  307F               	movlw	127
  6661  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6662  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6663  0C53  00C2               	movwf	___flmul@prod+3
  6664  0C54  3080               	movlw	128
  6665  0C55  00C1               	movwf	___flmul@prod+2
  6666  0C56  3000               	movlw	0
  6667  0C57  00C0               	movwf	___flmul@prod+1
  6668  0C58  3000               	movlw	0
  6669  0C59  00BF               	movwf	___flmul@prod
  6670  0C5A  2C90               	goto	l826
  6671  0C5B                     l2790:
  6672  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6673  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6674  0C5D  0844               	movf	___flmul@temp+1,w
  6675  0C5E  3A80               	xorlw	128
  6676  0C5F  00FF               	movwf	btemp+1
  6677  0C60  3080               	movlw	128
  6678  0C61  027F               	subwf	btemp+1,w
  6679  0C62  1D03               	skipz
  6680  0C63  2C66               	goto	u3905
  6681  0C64  3001               	movlw	1
  6682  0C65  0243               	subwf	___flmul@temp,w
  6683  0C66                     u3905:
  6684  0C66  1803               	skipnc
  6685  0C67  2C69               	goto	u3901
  6686  0C68  2C6A               	goto	u3900
  6687  0C69                     u3901:
  6688  0C69  2C76               	goto	l2796
  6689  0C6A                     u3900:
  6690  0C6A                     l2792:
  6691  0C6A  3000               	movlw	0
  6692  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6693  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6694  0C6D  00C2               	movwf	___flmul@prod+3
  6695  0C6E  3000               	movlw	0
  6696  0C6F  00C1               	movwf	___flmul@prod+2
  6697  0C70  3000               	movlw	0
  6698  0C71  00C0               	movwf	___flmul@prod+1
  6699  0C72  3000               	movlw	0
  6700  0C73  00BF               	movwf	___flmul@prod
  6701  0C74                     l2794:
  6702  0C74  01B8               	clrf	___flmul@sign
  6703  0C75  2C90               	goto	l826
  6704  0C76                     l2796:
  6705  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6706  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6707  0C78  0843               	movf	___flmul@temp,w
  6708  0C79  00B3               	movwf	??___flmul
  6709  0C7A  0833               	movf	??___flmul,w
  6710  0C7B  00BE               	movwf	___flmul@bexp
  6711  0C7C  30FF               	movlw	255
  6712  0C7D  05BF               	andwf	___flmul@prod,f
  6713  0C7E  30FF               	movlw	255
  6714  0C7F  05C0               	andwf	___flmul@prod+1,f
  6715  0C80  307F               	movlw	127
  6716  0C81  05C1               	andwf	___flmul@prod+2,f
  6717  0C82  3000               	movlw	0
  6718  0C83  05C2               	andwf	___flmul@prod+3,f
  6719  0C84                     l2798:
  6720  0C84  1C3E               	btfss	___flmul@bexp,0
  6721  0C85  2C87               	goto	u3911
  6722  0C86  2C88               	goto	u3910
  6723  0C87                     u3911:
  6724  0C87  2C89               	goto	l2802
  6725  0C88                     u3910:
  6726  0C88                     l2800:
  6727  0C88  17C1               	bsf	___flmul@prod+2,7
  6728  0C89                     l2802:
  6729  0C89  083E               	movf	___flmul@bexp,w
  6730  0C8A  00B3               	movwf	??___flmul
  6731  0C8B  1003               	clrc
  6732  0C8C  0C33               	rrf	??___flmul,w
  6733  0C8D  00B4               	movwf	??___flmul+1
  6734  0C8E  0834               	movf	??___flmul+1,w
  6735  0C8F  00C2               	movwf	___flmul@prod+3
  6736  0C90                     l826:
  6737  0C90  0838               	movf	___flmul@sign,w
  6738  0C91  00B3               	movwf	??___flmul
  6739  0C92  0833               	movf	??___flmul,w
  6740  0C93  04C2               	iorwf	___flmul@prod+3,f
  6741  0C94                     l2804:
  6742  0C94  0842               	movf	___flmul@prod+3,w
  6743  0C95  00AE               	movwf	?___flmul+3
  6744  0C96  0841               	movf	___flmul@prod+2,w
  6745  0C97  00AD               	movwf	?___flmul+2
  6746  0C98  0840               	movf	___flmul@prod+1,w
  6747  0C99  00AC               	movwf	?___flmul+1
  6748  0C9A  083F               	movf	___flmul@prod,w
  6749  0C9B  00AB               	movwf	?___flmul
  6750  0C9C                     l814:
  6751  0C9C  0008               	return
  6752  0C9D                     __end_of___flmul:
  6753                           
  6754                           	psect	text10
  6755  1A97                     __ptext10:	
  6756 ;; *************** function __Umul8_16 *****************
  6757 ;; Defined at:
  6758 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8_16.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;  multiplier      1    wreg     unsigned char 
  6761 ;;  multiplicand    1    3[COMMON] unsigned char 
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6764 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6765 ;;  product         2    0[BANK0 ] unsigned int 
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  2    3[COMMON] unsigned int 
  6768 ;; Registers used:
  6769 ;;		wreg, status,2, status,0
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6775 ;;      Params:         2       0       0       0       0
  6776 ;;      Locals:         0       5       0       0       0
  6777 ;;      Temps:          2       0       0       0       0
  6778 ;;      Totals:         4       5       0       0       0
  6779 ;;Total ram usage:        9 bytes
  6780 ;; Hardware stack levels used: 1
  6781 ;; Hardware stack levels required when called: 2
  6782 ;; This function calls:
  6783 ;;		Nothing
  6784 ;; This function is called by:
  6785 ;;		___flmul
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789  1A97                     __Umul8_16:	
  6790                           ;psect for function __Umul8_16
  6791                           
  6792                           
  6793                           ;incstack = 0
  6794                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6795                           ;__Umul8_16@multiplier stored from wreg
  6796  1A97  1283               	bcf	3,5	;RP0=0, select bank0
  6797  1A98  1303               	bcf	3,6	;RP1=0, select bank0
  6798  1A99  00A4               	movwf	__Umul8_16@multiplier
  6799  1A9A                     l2328:
  6800  1A9A  01A0               	clrf	__Umul8_16@product
  6801  1A9B  01A1               	clrf	__Umul8_16@product+1
  6802  1A9C                     l2330:
  6803  1A9C  0873               	movf	__Umul8_16@multiplicand,w
  6804  1A9D  00F5               	movwf	??__Umul8_16
  6805  1A9E  01F6               	clrf	??__Umul8_16+1
  6806  1A9F  0875               	movf	??__Umul8_16,w
  6807  1AA0  00A2               	movwf	__Umul8_16@word_mpld
  6808  1AA1  0876               	movf	??__Umul8_16+1,w
  6809  1AA2  00A3               	movwf	__Umul8_16@word_mpld+1
  6810  1AA3                     l2332:
  6811  1AA3  1C24               	btfss	__Umul8_16@multiplier,0
  6812  1AA4  2AA6               	goto	u2741
  6813  1AA5  2AA7               	goto	u2740
  6814  1AA6                     u2741:
  6815  1AA6  2AAD               	goto	l833
  6816  1AA7                     u2740:
  6817  1AA7                     l2334:
  6818  1AA7  0822               	movf	__Umul8_16@word_mpld,w
  6819  1AA8  07A0               	addwf	__Umul8_16@product,f
  6820  1AA9  1803               	skipnc
  6821  1AAA  0AA1               	incf	__Umul8_16@product+1,f
  6822  1AAB  0823               	movf	__Umul8_16@word_mpld+1,w
  6823  1AAC  07A1               	addwf	__Umul8_16@product+1,f
  6824  1AAD                     l833:
  6825  1AAD  3001               	movlw	1
  6826  1AAE                     u2755:
  6827  1AAE  1003               	clrc
  6828  1AAF  0DA2               	rlf	__Umul8_16@word_mpld,f
  6829  1AB0  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6830  1AB1  3EFF               	addlw	-1
  6831  1AB2  1D03               	skipz
  6832  1AB3  2AAE               	goto	u2755
  6833  1AB4  1003               	clrc
  6834  1AB5  0CA4               	rrf	__Umul8_16@multiplier,f
  6835  1AB6                     l2336:
  6836  1AB6  0824               	movf	__Umul8_16@multiplier,w
  6837  1AB7  1D03               	btfss	3,2
  6838  1AB8  2ABA               	goto	u2761
  6839  1AB9  2ABB               	goto	u2760
  6840  1ABA                     u2761:
  6841  1ABA  2AA3               	goto	l2332
  6842  1ABB                     u2760:
  6843  1ABB                     l2338:
  6844  1ABB  0821               	movf	__Umul8_16@product+1,w
  6845  1ABC  00F4               	movwf	?__Umul8_16+1
  6846  1ABD  0820               	movf	__Umul8_16@product,w
  6847  1ABE  00F3               	movwf	?__Umul8_16
  6848  1ABF                     l835:
  6849  1ABF  0008               	return
  6850  1AC0                     __end_of__Umul8_16:
  6851                           
  6852                           	psect	text11
  6853  11F0                     __ptext11:	
  6854 ;; *************** function __tdiv_to_l_ *****************
  6855 ;; Defined at:
  6856 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\ftdivl.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  f1              4    0[BANK0 ] float 
  6859 ;;  f2              4    4[BANK0 ] float 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  quot            4    8[BANK0 ] unsigned long 
  6862 ;;  exp1            1   13[BANK0 ] unsigned char 
  6863 ;;  cntr            1   12[BANK0 ] unsigned char 
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  4    0[BANK0 ] unsigned long 
  6866 ;; Registers used:
  6867 ;;		wreg, status,2, status,0
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6873 ;;      Params:         0       8       0       0       0
  6874 ;;      Locals:         0       6       0       0       0
  6875 ;;      Temps:          4       0       0       0       0
  6876 ;;      Totals:         4      14       0       0       0
  6877 ;;Total ram usage:       18 bytes
  6878 ;; Hardware stack levels used: 1
  6879 ;; Hardware stack levels required when called: 2
  6880 ;; This function calls:
  6881 ;;		Nothing
  6882 ;; This function is called by:
  6883 ;;		_sprintf
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887  11F0                     __tdiv_to_l_:	
  6888                           ;psect for function __tdiv_to_l_
  6889                           
  6890  11F0                     l3928:	
  6891                           ;incstack = 0
  6892                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6893                           
  6894  11F0  1283               	bcf	3,5	;RP0=0, select bank0
  6895  11F1  1303               	bcf	3,6	;RP1=0, select bank0
  6896  11F2  0820               	movf	__tdiv_to_l_@f1,w
  6897  11F3  00F3               	movwf	??__tdiv_to_l_
  6898  11F4  0821               	movf	__tdiv_to_l_@f1+1,w
  6899  11F5  00F4               	movwf	??__tdiv_to_l_+1
  6900  11F6  0822               	movf	__tdiv_to_l_@f1+2,w
  6901  11F7  00F5               	movwf	??__tdiv_to_l_+2
  6902  11F8  1003               	clrc
  6903  11F9  0D74               	rlf	??__tdiv_to_l_+1,w
  6904  11FA  0D75               	rlf	??__tdiv_to_l_+2,w
  6905  11FB  00F6               	movwf	??__tdiv_to_l_+3
  6906  11FC  0876               	movf	??__tdiv_to_l_+3,w
  6907  11FD  00AD               	movwf	__tdiv_to_l_@exp1
  6908  11FE  082D               	movf	__tdiv_to_l_@exp1,w
  6909  11FF  1D03               	btfss	3,2
  6910  1200  2A02               	goto	u6061
  6911  1201  2A03               	goto	u6060
  6912  1202                     u6061:
  6913  1202  2A0C               	goto	l3934
  6914  1203                     u6060:
  6915  1203                     l3930:
  6916  1203  3000               	movlw	0
  6917  1204  00A3               	movwf	?__tdiv_to_l_+3
  6918  1205  3000               	movlw	0
  6919  1206  00A2               	movwf	?__tdiv_to_l_+2
  6920  1207  3000               	movlw	0
  6921  1208  00A1               	movwf	?__tdiv_to_l_+1
  6922  1209  3000               	movlw	0
  6923  120A  00A0               	movwf	?__tdiv_to_l_
  6924  120B  2AAC               	goto	l608
  6925  120C                     l3934:
  6926  120C  0824               	movf	__tdiv_to_l_@f2,w
  6927  120D  00F3               	movwf	??__tdiv_to_l_
  6928  120E  0825               	movf	__tdiv_to_l_@f2+1,w
  6929  120F  00F4               	movwf	??__tdiv_to_l_+1
  6930  1210  0826               	movf	__tdiv_to_l_@f2+2,w
  6931  1211  00F5               	movwf	??__tdiv_to_l_+2
  6932  1212  1003               	clrc
  6933  1213  0D74               	rlf	??__tdiv_to_l_+1,w
  6934  1214  0D75               	rlf	??__tdiv_to_l_+2,w
  6935  1215  00F6               	movwf	??__tdiv_to_l_+3
  6936  1216  0876               	movf	??__tdiv_to_l_+3,w
  6937  1217  00AC               	movwf	__tdiv_to_l_@cntr
  6938  1218  082C               	movf	__tdiv_to_l_@cntr,w
  6939  1219  1D03               	btfss	3,2
  6940  121A  2A1C               	goto	u6071
  6941  121B  2A1D               	goto	u6070
  6942  121C                     u6071:
  6943  121C  2A1E               	goto	l609
  6944  121D                     u6070:
  6945  121D  2A03               	goto	l3930
  6946  121E                     l609:
  6947  121E  17A1               	bsf	__tdiv_to_l_@f1+1,7
  6948  121F                     l3940:
  6949  121F  30FF               	movlw	255
  6950  1220  05A0               	andwf	__tdiv_to_l_@f1,f
  6951  1221  30FF               	movlw	255
  6952  1222  05A1               	andwf	__tdiv_to_l_@f1+1,f
  6953  1223  3000               	movlw	0
  6954  1224  05A2               	andwf	__tdiv_to_l_@f1+2,f
  6955  1225                     l3942:
  6956  1225  17A5               	bsf	__tdiv_to_l_@f2+1,7
  6957  1226  30FF               	movlw	255
  6958  1227  05A4               	andwf	__tdiv_to_l_@f2,f
  6959  1228  30FF               	movlw	255
  6960  1229  05A5               	andwf	__tdiv_to_l_@f2+1,f
  6961  122A  3000               	movlw	0
  6962  122B  05A6               	andwf	__tdiv_to_l_@f2+2,f
  6963  122C  3000               	movlw	0
  6964  122D  00AB               	movwf	__tdiv_to_l_@quot+3
  6965  122E  3000               	movlw	0
  6966  122F  00AA               	movwf	__tdiv_to_l_@quot+2
  6967  1230  3000               	movlw	0
  6968  1231  00A9               	movwf	__tdiv_to_l_@quot+1
  6969  1232  3000               	movlw	0
  6970  1233  00A8               	movwf	__tdiv_to_l_@quot
  6971  1234                     l3944:
  6972  1234  307F               	movlw	127
  6973  1235  02AD               	subwf	__tdiv_to_l_@exp1,f
  6974  1236                     l3946:
  6975  1236  3098               	movlw	152
  6976  1237  072C               	addwf	__tdiv_to_l_@cntr,w
  6977  1238  00F3               	movwf	??__tdiv_to_l_
  6978  1239  0873               	movf	??__tdiv_to_l_,w
  6979  123A  02AD               	subwf	__tdiv_to_l_@exp1,f
  6980  123B  3018               	movlw	24
  6981  123C  00F3               	movwf	??__tdiv_to_l_
  6982  123D  0873               	movf	??__tdiv_to_l_,w
  6983  123E  00AC               	movwf	__tdiv_to_l_@cntr
  6984  123F                     l3948:
  6985  123F  3001               	movlw	1
  6986  1240  00F3               	movwf	??__tdiv_to_l_
  6987  1241                     u6085:
  6988  1241  1003               	clrc
  6989  1242  0DA8               	rlf	__tdiv_to_l_@quot,f
  6990  1243  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6991  1244  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6992  1245  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6993  1246  0BF3               	decfsz	??__tdiv_to_l_,f
  6994  1247  2A41               	goto	u6085
  6995  1248                     l3950:
  6996  1248  0826               	movf	__tdiv_to_l_@f2+2,w
  6997  1249  0222               	subwf	__tdiv_to_l_@f1+2,w
  6998  124A  1D03               	skipz
  6999  124B  2A52               	goto	u6095
  7000  124C  0825               	movf	__tdiv_to_l_@f2+1,w
  7001  124D  0221               	subwf	__tdiv_to_l_@f1+1,w
  7002  124E  1D03               	skipz
  7003  124F  2A52               	goto	u6095
  7004  1250  0824               	movf	__tdiv_to_l_@f2,w
  7005  1251  0220               	subwf	__tdiv_to_l_@f1,w
  7006  1252                     u6095:
  7007  1252  1C03               	skipc
  7008  1253  2A55               	goto	u6091
  7009  1254  2A56               	goto	u6090
  7010  1255                     u6091:
  7011  1255  2A61               	goto	l3956
  7012  1256                     u6090:
  7013  1256                     l3952:
  7014  1256  0824               	movf	__tdiv_to_l_@f2,w
  7015  1257  02A0               	subwf	__tdiv_to_l_@f1,f
  7016  1258  0825               	movf	__tdiv_to_l_@f2+1,w
  7017  1259  1C03               	skipc
  7018  125A  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  7019  125B  02A1               	subwf	__tdiv_to_l_@f1+1,f
  7020  125C  0826               	movf	__tdiv_to_l_@f2+2,w
  7021  125D  1C03               	skipc
  7022  125E  0A26               	incf	__tdiv_to_l_@f2+2,w
  7023  125F  02A2               	subwf	__tdiv_to_l_@f1+2,f
  7024  1260                     l3954:
  7025  1260  1428               	bsf	__tdiv_to_l_@quot,0
  7026  1261                     l3956:
  7027  1261  3001               	movlw	1
  7028  1262                     u6105:
  7029  1262  1003               	clrc
  7030  1263  0DA0               	rlf	__tdiv_to_l_@f1,f
  7031  1264  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  7032  1265  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  7033  1266  3EFF               	addlw	-1
  7034  1267  1D03               	skipz
  7035  1268  2A62               	goto	u6105
  7036  1269                     l3958:
  7037  1269  3001               	movlw	1
  7038  126A  02AC               	subwf	__tdiv_to_l_@cntr,f
  7039  126B  1D03               	btfss	3,2
  7040  126C  2A6E               	goto	u6111
  7041  126D  2A6F               	goto	u6110
  7042  126E                     u6111:
  7043  126E  2A3F               	goto	l3948
  7044  126F                     u6110:
  7045  126F                     l612:
  7046  126F  1FAD               	btfss	__tdiv_to_l_@exp1,7
  7047  1270  2A72               	goto	u6121
  7048  1271  2A73               	goto	u6120
  7049  1272                     u6121:
  7050  1272  2A8D               	goto	l3968
  7051  1273                     u6120:
  7052  1273                     l3960:
  7053  1273  082D               	movf	__tdiv_to_l_@exp1,w
  7054  1274  3A80               	xorlw	128
  7055  1275  3E97               	addlw	151
  7056  1276  1803               	skipnc
  7057  1277  2A79               	goto	u6131
  7058  1278  2A7A               	goto	u6130
  7059  1279                     u6131:
  7060  1279  2A7B               	goto	l3966
  7061  127A                     u6130:
  7062  127A  2A03               	goto	l3930
  7063  127B                     l3966:
  7064  127B  3001               	movlw	1
  7065  127C                     u6145:
  7066  127C  1003               	clrc
  7067  127D  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  7068  127E  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  7069  127F  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  7070  1280  0CA8               	rrf	__tdiv_to_l_@quot,f
  7071  1281  3EFF               	addlw	-1
  7072  1282  1D03               	skipz
  7073  1283  2A7C               	goto	u6145
  7074  1284  3001               	movlw	1
  7075  1285  00F3               	movwf	??__tdiv_to_l_
  7076  1286  0873               	movf	??__tdiv_to_l_,w
  7077  1287  07AD               	addwf	__tdiv_to_l_@exp1,f
  7078  1288  1D03               	btfss	3,2
  7079  1289  2A8B               	goto	u6151
  7080  128A  2A8C               	goto	u6150
  7081  128B                     u6151:
  7082  128B  2A7B               	goto	l3966
  7083  128C                     u6150:
  7084  128C  2AA4               	goto	l3976
  7085  128D                     l3968:
  7086  128D  3018               	movlw	24
  7087  128E  022D               	subwf	__tdiv_to_l_@exp1,w
  7088  128F  1C03               	skipc
  7089  1290  2A92               	goto	u6161
  7090  1291  2A93               	goto	u6160
  7091  1292                     u6161:
  7092  1292  2A9F               	goto	l619
  7093  1293                     u6160:
  7094  1293  2A03               	goto	l3930
  7095  1294                     l3974:
  7096  1294  3001               	movlw	1
  7097  1295  00F3               	movwf	??__tdiv_to_l_
  7098  1296                     u6175:
  7099  1296  1003               	clrc
  7100  1297  0DA8               	rlf	__tdiv_to_l_@quot,f
  7101  1298  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  7102  1299  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  7103  129A  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  7104  129B  0BF3               	decfsz	??__tdiv_to_l_,f
  7105  129C  2A96               	goto	u6175
  7106  129D  3001               	movlw	1
  7107  129E  02AD               	subwf	__tdiv_to_l_@exp1,f
  7108  129F                     l619:
  7109  129F  082D               	movf	__tdiv_to_l_@exp1,w
  7110  12A0  1D03               	btfss	3,2
  7111  12A1  2AA3               	goto	u6181
  7112  12A2  2AA4               	goto	u6180
  7113  12A3                     u6181:
  7114  12A3  2A94               	goto	l3974
  7115  12A4                     u6180:
  7116  12A4                     l3976:
  7117  12A4  082B               	movf	__tdiv_to_l_@quot+3,w
  7118  12A5  00A3               	movwf	?__tdiv_to_l_+3
  7119  12A6  082A               	movf	__tdiv_to_l_@quot+2,w
  7120  12A7  00A2               	movwf	?__tdiv_to_l_+2
  7121  12A8  0829               	movf	__tdiv_to_l_@quot+1,w
  7122  12A9  00A1               	movwf	?__tdiv_to_l_+1
  7123  12AA  0828               	movf	__tdiv_to_l_@quot,w
  7124  12AB  00A0               	movwf	?__tdiv_to_l_
  7125  12AC                     l608:
  7126  12AC  0008               	return
  7127  12AD                     __end_of__tdiv_to_l_:
  7128                           
  7129                           	psect	text12
  7130  12AD                     __ptext12:	
  7131 ;; *************** function __div_to_l_ *****************
  7132 ;; Defined at:
  7133 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fldivl.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  f1              4    0[BANK0 ] unsigned long 
  7136 ;;  f2              4    4[BANK0 ] unsigned long 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;  quot            4    8[BANK0 ] unsigned long 
  7139 ;;  exp1            1   13[BANK0 ] unsigned char 
  7140 ;;  cntr            1   12[BANK0 ] unsigned char 
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  4    0[BANK0 ] unsigned long 
  7143 ;; Registers used:
  7144 ;;		wreg, status,2, status,0
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7150 ;;      Params:         0       8       0       0       0
  7151 ;;      Locals:         0       6       0       0       0
  7152 ;;      Temps:          1       0       0       0       0
  7153 ;;      Totals:         1      14       0       0       0
  7154 ;;Total ram usage:       15 bytes
  7155 ;; Hardware stack levels used: 1
  7156 ;; Hardware stack levels required when called: 2
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_sprintf
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164  12AD                     __div_to_l_:	
  7165                           ;psect for function __div_to_l_
  7166                           
  7167  12AD                     l3980:	
  7168                           ;incstack = 0
  7169                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7170                           
  7171  12AD  1003               	clrc
  7172  12AE  1283               	bcf	3,5	;RP0=0, select bank0
  7173  12AF  1303               	bcf	3,6	;RP1=0, select bank0
  7174  12B0  0D22               	rlf	__div_to_l_@f1+2,w
  7175  12B1  0D23               	rlf	__div_to_l_@f1+3,w
  7176  12B2  00F3               	movwf	??__div_to_l_
  7177  12B3  0873               	movf	??__div_to_l_,w
  7178  12B4  00AD               	movwf	__div_to_l_@exp1
  7179  12B5  082D               	movf	__div_to_l_@exp1,w
  7180  12B6  1D03               	btfss	3,2
  7181  12B7  2AB9               	goto	u6191
  7182  12B8  2ABA               	goto	u6190
  7183  12B9                     u6191:
  7184  12B9  2AC3               	goto	l3986
  7185  12BA                     u6190:
  7186  12BA                     l3982:
  7187  12BA  3000               	movlw	0
  7188  12BB  00A3               	movwf	?__div_to_l_+3
  7189  12BC  3000               	movlw	0
  7190  12BD  00A2               	movwf	?__div_to_l_+2
  7191  12BE  3000               	movlw	0
  7192  12BF  00A1               	movwf	?__div_to_l_+1
  7193  12C0  3000               	movlw	0
  7194  12C1  00A0               	movwf	?__div_to_l_
  7195  12C2  2B6A               	goto	l561
  7196  12C3                     l3986:
  7197  12C3  1003               	clrc
  7198  12C4  0D26               	rlf	__div_to_l_@f2+2,w
  7199  12C5  0D27               	rlf	__div_to_l_@f2+3,w
  7200  12C6  00F3               	movwf	??__div_to_l_
  7201  12C7  0873               	movf	??__div_to_l_,w
  7202  12C8  00AC               	movwf	__div_to_l_@cntr
  7203  12C9  082C               	movf	__div_to_l_@cntr,w
  7204  12CA  1D03               	btfss	3,2
  7205  12CB  2ACD               	goto	u6201
  7206  12CC  2ACE               	goto	u6200
  7207  12CD                     u6201:
  7208  12CD  2ACF               	goto	l562
  7209  12CE                     u6200:
  7210  12CE  2ABA               	goto	l3982
  7211  12CF                     l562:
  7212  12CF  17A2               	bsf	__div_to_l_@f1+2,7
  7213  12D0                     l3992:
  7214  12D0  30FF               	movlw	255
  7215  12D1  05A0               	andwf	__div_to_l_@f1,f
  7216  12D2  30FF               	movlw	255
  7217  12D3  05A1               	andwf	__div_to_l_@f1+1,f
  7218  12D4  30FF               	movlw	255
  7219  12D5  05A2               	andwf	__div_to_l_@f1+2,f
  7220  12D6  3000               	movlw	0
  7221  12D7  05A3               	andwf	__div_to_l_@f1+3,f
  7222  12D8                     l3994:
  7223  12D8  17A6               	bsf	__div_to_l_@f2+2,7
  7224  12D9  30FF               	movlw	255
  7225  12DA  05A4               	andwf	__div_to_l_@f2,f
  7226  12DB  30FF               	movlw	255
  7227  12DC  05A5               	andwf	__div_to_l_@f2+1,f
  7228  12DD  30FF               	movlw	255
  7229  12DE  05A6               	andwf	__div_to_l_@f2+2,f
  7230  12DF  3000               	movlw	0
  7231  12E0  05A7               	andwf	__div_to_l_@f2+3,f
  7232  12E1  3000               	movlw	0
  7233  12E2  00AB               	movwf	__div_to_l_@quot+3
  7234  12E3  3000               	movlw	0
  7235  12E4  00AA               	movwf	__div_to_l_@quot+2
  7236  12E5  3000               	movlw	0
  7237  12E6  00A9               	movwf	__div_to_l_@quot+1
  7238  12E7  3000               	movlw	0
  7239  12E8  00A8               	movwf	__div_to_l_@quot
  7240  12E9                     l3996:
  7241  12E9  307F               	movlw	127
  7242  12EA  02AD               	subwf	__div_to_l_@exp1,f
  7243  12EB                     l3998:
  7244  12EB  30A0               	movlw	160
  7245  12EC  072C               	addwf	__div_to_l_@cntr,w
  7246  12ED  00F3               	movwf	??__div_to_l_
  7247  12EE  0873               	movf	??__div_to_l_,w
  7248  12EF  02AD               	subwf	__div_to_l_@exp1,f
  7249  12F0  3020               	movlw	32
  7250  12F1  00F3               	movwf	??__div_to_l_
  7251  12F2  0873               	movf	??__div_to_l_,w
  7252  12F3  00AC               	movwf	__div_to_l_@cntr
  7253  12F4                     l4000:
  7254  12F4  3001               	movlw	1
  7255  12F5  00F3               	movwf	??__div_to_l_
  7256  12F6                     u6215:
  7257  12F6  1003               	clrc
  7258  12F7  0DA8               	rlf	__div_to_l_@quot,f
  7259  12F8  0DA9               	rlf	__div_to_l_@quot+1,f
  7260  12F9  0DAA               	rlf	__div_to_l_@quot+2,f
  7261  12FA  0DAB               	rlf	__div_to_l_@quot+3,f
  7262  12FB  0BF3               	decfsz	??__div_to_l_,f
  7263  12FC  2AF6               	goto	u6215
  7264  12FD                     l4002:
  7265  12FD  0827               	movf	__div_to_l_@f2+3,w
  7266  12FE  0223               	subwf	__div_to_l_@f1+3,w
  7267  12FF  1D03               	skipz
  7268  1300  2B0B               	goto	u6225
  7269  1301  0826               	movf	__div_to_l_@f2+2,w
  7270  1302  0222               	subwf	__div_to_l_@f1+2,w
  7271  1303  1D03               	skipz
  7272  1304  2B0B               	goto	u6225
  7273  1305  0825               	movf	__div_to_l_@f2+1,w
  7274  1306  0221               	subwf	__div_to_l_@f1+1,w
  7275  1307  1D03               	skipz
  7276  1308  2B0B               	goto	u6225
  7277  1309  0824               	movf	__div_to_l_@f2,w
  7278  130A  0220               	subwf	__div_to_l_@f1,w
  7279  130B                     u6225:
  7280  130B  1C03               	skipc
  7281  130C  2B0E               	goto	u6221
  7282  130D  2B0F               	goto	u6220
  7283  130E                     u6221:
  7284  130E  2B1E               	goto	l4008
  7285  130F                     u6220:
  7286  130F                     l4004:
  7287  130F  0824               	movf	__div_to_l_@f2,w
  7288  1310  02A0               	subwf	__div_to_l_@f1,f
  7289  1311  0825               	movf	__div_to_l_@f2+1,w
  7290  1312  1C03               	skipc
  7291  1313  0F25               	incfsz	__div_to_l_@f2+1,w
  7292  1314  02A1               	subwf	__div_to_l_@f1+1,f
  7293  1315  0826               	movf	__div_to_l_@f2+2,w
  7294  1316  1C03               	skipc
  7295  1317  0F26               	incfsz	__div_to_l_@f2+2,w
  7296  1318  02A2               	subwf	__div_to_l_@f1+2,f
  7297  1319  0827               	movf	__div_to_l_@f2+3,w
  7298  131A  1C03               	skipc
  7299  131B  0F27               	incfsz	__div_to_l_@f2+3,w
  7300  131C  02A3               	subwf	__div_to_l_@f1+3,f
  7301  131D                     l4006:
  7302  131D  1428               	bsf	__div_to_l_@quot,0
  7303  131E                     l4008:
  7304  131E  3001               	movlw	1
  7305  131F  00F3               	movwf	??__div_to_l_
  7306  1320                     u6235:
  7307  1320  1003               	clrc
  7308  1321  0DA0               	rlf	__div_to_l_@f1,f
  7309  1322  0DA1               	rlf	__div_to_l_@f1+1,f
  7310  1323  0DA2               	rlf	__div_to_l_@f1+2,f
  7311  1324  0DA3               	rlf	__div_to_l_@f1+3,f
  7312  1325  0BF3               	decfsz	??__div_to_l_,f
  7313  1326  2B20               	goto	u6235
  7314  1327                     l4010:
  7315  1327  3001               	movlw	1
  7316  1328  02AC               	subwf	__div_to_l_@cntr,f
  7317  1329  1D03               	btfss	3,2
  7318  132A  2B2C               	goto	u6241
  7319  132B  2B2D               	goto	u6240
  7320  132C                     u6241:
  7321  132C  2AF4               	goto	l4000
  7322  132D                     u6240:
  7323  132D                     l565:
  7324  132D  1FAD               	btfss	__div_to_l_@exp1,7
  7325  132E  2B30               	goto	u6251
  7326  132F  2B31               	goto	u6250
  7327  1330                     u6251:
  7328  1330  2B4B               	goto	l4020
  7329  1331                     u6250:
  7330  1331                     l4012:
  7331  1331  082D               	movf	__div_to_l_@exp1,w
  7332  1332  3A80               	xorlw	128
  7333  1333  3E9F               	addlw	159
  7334  1334  1803               	skipnc
  7335  1335  2B37               	goto	u6261
  7336  1336  2B38               	goto	u6260
  7337  1337                     u6261:
  7338  1337  2B39               	goto	l4018
  7339  1338                     u6260:
  7340  1338  2ABA               	goto	l3982
  7341  1339                     l4018:
  7342  1339  3001               	movlw	1
  7343  133A                     u6275:
  7344  133A  1003               	clrc
  7345  133B  0CAB               	rrf	__div_to_l_@quot+3,f
  7346  133C  0CAA               	rrf	__div_to_l_@quot+2,f
  7347  133D  0CA9               	rrf	__div_to_l_@quot+1,f
  7348  133E  0CA8               	rrf	__div_to_l_@quot,f
  7349  133F  3EFF               	addlw	-1
  7350  1340  1D03               	skipz
  7351  1341  2B3A               	goto	u6275
  7352  1342  3001               	movlw	1
  7353  1343  00F3               	movwf	??__div_to_l_
  7354  1344  0873               	movf	??__div_to_l_,w
  7355  1345  07AD               	addwf	__div_to_l_@exp1,f
  7356  1346  1D03               	btfss	3,2
  7357  1347  2B49               	goto	u6281
  7358  1348  2B4A               	goto	u6280
  7359  1349                     u6281:
  7360  1349  2B39               	goto	l4018
  7361  134A                     u6280:
  7362  134A  2B62               	goto	l4028
  7363  134B                     l4020:
  7364  134B  3020               	movlw	32
  7365  134C  022D               	subwf	__div_to_l_@exp1,w
  7366  134D  1C03               	skipc
  7367  134E  2B50               	goto	u6291
  7368  134F  2B51               	goto	u6290
  7369  1350                     u6291:
  7370  1350  2B5D               	goto	l572
  7371  1351                     u6290:
  7372  1351  2ABA               	goto	l3982
  7373  1352                     l4026:
  7374  1352  3001               	movlw	1
  7375  1353  00F3               	movwf	??__div_to_l_
  7376  1354                     u6305:
  7377  1354  1003               	clrc
  7378  1355  0DA8               	rlf	__div_to_l_@quot,f
  7379  1356  0DA9               	rlf	__div_to_l_@quot+1,f
  7380  1357  0DAA               	rlf	__div_to_l_@quot+2,f
  7381  1358  0DAB               	rlf	__div_to_l_@quot+3,f
  7382  1359  0BF3               	decfsz	??__div_to_l_,f
  7383  135A  2B54               	goto	u6305
  7384  135B  3001               	movlw	1
  7385  135C  02AD               	subwf	__div_to_l_@exp1,f
  7386  135D                     l572:
  7387  135D  082D               	movf	__div_to_l_@exp1,w
  7388  135E  1D03               	btfss	3,2
  7389  135F  2B61               	goto	u6311
  7390  1360  2B62               	goto	u6310
  7391  1361                     u6311:
  7392  1361  2B52               	goto	l4026
  7393  1362                     u6310:
  7394  1362                     l4028:
  7395  1362  082B               	movf	__div_to_l_@quot+3,w
  7396  1363  00A3               	movwf	?__div_to_l_+3
  7397  1364  082A               	movf	__div_to_l_@quot+2,w
  7398  1365  00A2               	movwf	?__div_to_l_+2
  7399  1366  0829               	movf	__div_to_l_@quot+1,w
  7400  1367  00A1               	movwf	?__div_to_l_+1
  7401  1368  0828               	movf	__div_to_l_@quot,w
  7402  1369  00A0               	movwf	?__div_to_l_
  7403  136A                     l561:
  7404  136A  0008               	return
  7405  136B                     __end_of__div_to_l_:
  7406                           
  7407                           	psect	text13
  7408  1134                     __ptext13:	
  7409 ;; *************** function ___xxtofl *****************
  7410 ;; Defined at:
  7411 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\xxtofl.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;  sign            1    wreg     unsigned char 
  7414 ;;  val             4    3[COMMON] long 
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;  sign            1    4[BANK0 ] unsigned char 
  7417 ;;  arg             4    6[BANK0 ] unsigned long 
  7418 ;;  exp             1    5[BANK0 ] unsigned char 
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  4    3[COMMON] unsigned char 
  7421 ;; Registers used:
  7422 ;;		wreg, status,2, status,0
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7428 ;;      Params:         4       0       0       0       0
  7429 ;;      Locals:         0       6       0       0       0
  7430 ;;      Temps:          0       4       0       0       0
  7431 ;;      Totals:         4      10       0       0       0
  7432 ;;Total ram usage:       14 bytes
  7433 ;; Hardware stack levels used: 1
  7434 ;; Hardware stack levels required when called: 2
  7435 ;; This function calls:
  7436 ;;		Nothing
  7437 ;; This function is called by:
  7438 ;;		_main
  7439 ;;		_sprintf
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443  1134                     ___xxtofl:	
  7444                           ;psect for function ___xxtofl
  7445                           
  7446                           
  7447                           ;incstack = 0
  7448                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7449                           ;___xxtofl@sign stored from wreg
  7450  1134  1283               	bcf	3,5	;RP0=0, select bank0
  7451  1135  1303               	bcf	3,6	;RP1=0, select bank0
  7452  1136  00A4               	movwf	___xxtofl@sign
  7453  1137                     l4122:
  7454  1137  0824               	movf	___xxtofl@sign,w
  7455  1138  1903               	btfsc	3,2
  7456  1139  293B               	goto	u6591
  7457  113A  293C               	goto	u6590
  7458  113B                     u6591:
  7459  113B  2950               	goto	l4128
  7460  113C                     u6590:
  7461  113C                     l4124:
  7462  113C  1FF6               	btfss	___xxtofl@val+3,7
  7463  113D  293F               	goto	u6601
  7464  113E  2940               	goto	u6600
  7465  113F                     u6601:
  7466  113F  2950               	goto	l4128
  7467  1140                     u6600:
  7468  1140                     l4126:
  7469  1140  0973               	comf	___xxtofl@val,w
  7470  1141  00A6               	movwf	___xxtofl@arg
  7471  1142  0974               	comf	___xxtofl@val+1,w
  7472  1143  00A7               	movwf	___xxtofl@arg+1
  7473  1144  0975               	comf	___xxtofl@val+2,w
  7474  1145  00A8               	movwf	___xxtofl@arg+2
  7475  1146  0976               	comf	___xxtofl@val+3,w
  7476  1147  00A9               	movwf	___xxtofl@arg+3
  7477  1148  0AA6               	incf	___xxtofl@arg,f
  7478  1149  1903               	skipnz
  7479  114A  0AA7               	incf	___xxtofl@arg+1,f
  7480  114B  1903               	skipnz
  7481  114C  0AA8               	incf	___xxtofl@arg+2,f
  7482  114D  1903               	skipnz
  7483  114E  0AA9               	incf	___xxtofl@arg+3,f
  7484  114F  2958               	goto	l858
  7485  1150                     l4128:
  7486  1150  0876               	movf	___xxtofl@val+3,w
  7487  1151  00A9               	movwf	___xxtofl@arg+3
  7488  1152  0875               	movf	___xxtofl@val+2,w
  7489  1153  00A8               	movwf	___xxtofl@arg+2
  7490  1154  0874               	movf	___xxtofl@val+1,w
  7491  1155  00A7               	movwf	___xxtofl@arg+1
  7492  1156  0873               	movf	___xxtofl@val,w
  7493  1157  00A6               	movwf	___xxtofl@arg
  7494  1158                     l858:
  7495  1158  0876               	movf	___xxtofl@val+3,w
  7496  1159  0475               	iorwf	___xxtofl@val+2,w
  7497  115A  0474               	iorwf	___xxtofl@val+1,w
  7498  115B  0473               	iorwf	___xxtofl@val,w
  7499  115C  1D03               	skipz
  7500  115D  295F               	goto	u6611
  7501  115E  2960               	goto	u6610
  7502  115F                     u6611:
  7503  115F  2969               	goto	l4134
  7504  1160                     u6610:
  7505  1160                     l4130:
  7506  1160  3000               	movlw	0
  7507  1161  00F6               	movwf	?___xxtofl+3
  7508  1162  3000               	movlw	0
  7509  1163  00F5               	movwf	?___xxtofl+2
  7510  1164  3000               	movlw	0
  7511  1165  00F4               	movwf	?___xxtofl+1
  7512  1166  3000               	movlw	0
  7513  1167  00F3               	movwf	?___xxtofl
  7514  1168  29EF               	goto	l860
  7515  1169                     l4134:
  7516  1169  3096               	movlw	150
  7517  116A  00A0               	movwf	??___xxtofl
  7518  116B  0820               	movf	??___xxtofl,w
  7519  116C  00A5               	movwf	___xxtofl@exp
  7520  116D  297B               	goto	l4138
  7521  116E                     l4136:
  7522  116E  3001               	movlw	1
  7523  116F  00A0               	movwf	??___xxtofl
  7524  1170  0820               	movf	??___xxtofl,w
  7525  1171  07A5               	addwf	___xxtofl@exp,f
  7526  1172  3001               	movlw	1
  7527  1173                     u6625:
  7528  1173  1003               	clrc
  7529  1174  0CA9               	rrf	___xxtofl@arg+3,f
  7530  1175  0CA8               	rrf	___xxtofl@arg+2,f
  7531  1176  0CA7               	rrf	___xxtofl@arg+1,f
  7532  1177  0CA6               	rrf	___xxtofl@arg,f
  7533  1178  3EFF               	addlw	-1
  7534  1179  1D03               	skipz
  7535  117A  2973               	goto	u6625
  7536  117B                     l4138:
  7537  117B  30FE               	movlw	254
  7538  117C  0529               	andwf	___xxtofl@arg+3,w
  7539  117D  1D03               	btfss	3,2
  7540  117E  2980               	goto	u6631
  7541  117F  2981               	goto	u6630
  7542  1180                     u6631:
  7543  1180  296E               	goto	l4136
  7544  1181                     u6630:
  7545  1181  299D               	goto	l864
  7546  1182                     l4140:
  7547  1182  3001               	movlw	1
  7548  1183  00A0               	movwf	??___xxtofl
  7549  1184  0820               	movf	??___xxtofl,w
  7550  1185  07A5               	addwf	___xxtofl@exp,f
  7551  1186                     l4142:
  7552  1186  3001               	movlw	1
  7553  1187  07A6               	addwf	___xxtofl@arg,f
  7554  1188  3000               	movlw	0
  7555  1189  1803               	skipnc
  7556  118A  3001               	movlw	1
  7557  118B  07A7               	addwf	___xxtofl@arg+1,f
  7558  118C  3000               	movlw	0
  7559  118D  1803               	skipnc
  7560  118E  3001               	movlw	1
  7561  118F  07A8               	addwf	___xxtofl@arg+2,f
  7562  1190  3000               	movlw	0
  7563  1191  1803               	skipnc
  7564  1192  3001               	movlw	1
  7565  1193  07A9               	addwf	___xxtofl@arg+3,f
  7566  1194                     l4144:
  7567  1194  3001               	movlw	1
  7568  1195                     u6645:
  7569  1195  1003               	clrc
  7570  1196  0CA9               	rrf	___xxtofl@arg+3,f
  7571  1197  0CA8               	rrf	___xxtofl@arg+2,f
  7572  1198  0CA7               	rrf	___xxtofl@arg+1,f
  7573  1199  0CA6               	rrf	___xxtofl@arg,f
  7574  119A  3EFF               	addlw	-1
  7575  119B  1D03               	skipz
  7576  119C  2995               	goto	u6645
  7577  119D                     l864:
  7578  119D  30FF               	movlw	255
  7579  119E  0529               	andwf	___xxtofl@arg+3,w
  7580  119F  1D03               	btfss	3,2
  7581  11A0  29A2               	goto	u6651
  7582  11A1  29A3               	goto	u6650
  7583  11A2                     u6651:
  7584  11A2  2982               	goto	l4140
  7585  11A3                     u6650:
  7586  11A3  29AF               	goto	l4148
  7587  11A4                     l4146:
  7588  11A4  3001               	movlw	1
  7589  11A5  02A5               	subwf	___xxtofl@exp,f
  7590  11A6  3001               	movlw	1
  7591  11A7  00A0               	movwf	??___xxtofl
  7592  11A8                     u6665:
  7593  11A8  1003               	clrc
  7594  11A9  0DA6               	rlf	___xxtofl@arg,f
  7595  11AA  0DA7               	rlf	___xxtofl@arg+1,f
  7596  11AB  0DA8               	rlf	___xxtofl@arg+2,f
  7597  11AC  0DA9               	rlf	___xxtofl@arg+3,f
  7598  11AD  0BA0               	decfsz	??___xxtofl,f
  7599  11AE  29A8               	goto	u6665
  7600  11AF                     l4148:
  7601  11AF  1BA8               	btfsc	___xxtofl@arg+2,7
  7602  11B0  29B2               	goto	u6671
  7603  11B1  29B3               	goto	u6670
  7604  11B2                     u6671:
  7605  11B2  29B9               	goto	l871
  7606  11B3                     u6670:
  7607  11B3                     l4150:
  7608  11B3  3002               	movlw	2
  7609  11B4  0225               	subwf	___xxtofl@exp,w
  7610  11B5  1803               	skipnc
  7611  11B6  29B8               	goto	u6681
  7612  11B7  29B9               	goto	u6680
  7613  11B8                     u6681:
  7614  11B8  29A4               	goto	l4146
  7615  11B9                     u6680:
  7616  11B9                     l871:
  7617  11B9  1825               	btfsc	___xxtofl@exp,0
  7618  11BA  29BC               	goto	u6691
  7619  11BB  29BD               	goto	u6690
  7620  11BC                     u6691:
  7621  11BC  29C5               	goto	l872
  7622  11BD                     u6690:
  7623  11BD                     l4152:
  7624  11BD  30FF               	movlw	255
  7625  11BE  05A6               	andwf	___xxtofl@arg,f
  7626  11BF  30FF               	movlw	255
  7627  11C0  05A7               	andwf	___xxtofl@arg+1,f
  7628  11C1  307F               	movlw	127
  7629  11C2  05A8               	andwf	___xxtofl@arg+2,f
  7630  11C3  30FF               	movlw	255
  7631  11C4  05A9               	andwf	___xxtofl@arg+3,f
  7632  11C5                     l872:
  7633  11C5  1003               	clrc
  7634  11C6  0CA5               	rrf	___xxtofl@exp,f
  7635  11C7                     l4154:
  7636  11C7  0825               	movf	___xxtofl@exp,w
  7637  11C8  00A0               	movwf	??___xxtofl
  7638  11C9  01A1               	clrf	??___xxtofl+1
  7639  11CA  01A2               	clrf	??___xxtofl+2
  7640  11CB  01A3               	clrf	??___xxtofl+3
  7641  11CC  3018               	movlw	24
  7642  11CD                     u6705:
  7643  11CD  1003               	clrc
  7644  11CE  0DA0               	rlf	??___xxtofl,f
  7645  11CF  0DA1               	rlf	??___xxtofl+1,f
  7646  11D0  0DA2               	rlf	??___xxtofl+2,f
  7647  11D1  0DA3               	rlf	??___xxtofl+3,f
  7648  11D2                     u6700:
  7649  11D2  3EFF               	addlw	-1
  7650  11D3  1D03               	skipz
  7651  11D4  29CD               	goto	u6705
  7652  11D5  0820               	movf	??___xxtofl,w
  7653  11D6  04A6               	iorwf	___xxtofl@arg,f
  7654  11D7  0821               	movf	??___xxtofl+1,w
  7655  11D8  04A7               	iorwf	___xxtofl@arg+1,f
  7656  11D9  0822               	movf	??___xxtofl+2,w
  7657  11DA  04A8               	iorwf	___xxtofl@arg+2,f
  7658  11DB  0823               	movf	??___xxtofl+3,w
  7659  11DC  04A9               	iorwf	___xxtofl@arg+3,f
  7660  11DD                     l4156:
  7661  11DD  0824               	movf	___xxtofl@sign,w
  7662  11DE  1903               	btfsc	3,2
  7663  11DF  29E1               	goto	u6711
  7664  11E0  29E2               	goto	u6710
  7665  11E1                     u6711:
  7666  11E1  29E7               	goto	l4162
  7667  11E2                     u6710:
  7668  11E2                     l4158:
  7669  11E2  1FF6               	btfss	___xxtofl@val+3,7
  7670  11E3  29E5               	goto	u6721
  7671  11E4  29E6               	goto	u6720
  7672  11E5                     u6721:
  7673  11E5  29E7               	goto	l4162
  7674  11E6                     u6720:
  7675  11E6                     l4160:
  7676  11E6  17A9               	bsf	___xxtofl@arg+3,7
  7677  11E7                     l4162:
  7678  11E7  0829               	movf	___xxtofl@arg+3,w
  7679  11E8  00F6               	movwf	?___xxtofl+3
  7680  11E9  0828               	movf	___xxtofl@arg+2,w
  7681  11EA  00F5               	movwf	?___xxtofl+2
  7682  11EB  0827               	movf	___xxtofl@arg+1,w
  7683  11EC  00F4               	movwf	?___xxtofl+1
  7684  11ED  0826               	movf	___xxtofl@arg,w
  7685  11EE  00F3               	movwf	?___xxtofl
  7686  11EF                     l860:
  7687  11EF  0008               	return
  7688  11F0                     __end_of___xxtofl:
  7689                           
  7690                           	psect	text14
  7691  1AEA                     __ptext14:	
  7692 ;; *************** function ___wmul *****************
  7693 ;; Defined at:
  7694 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;  multiplier      2    3[COMMON] unsigned int 
  7697 ;;  multiplicand    2    5[COMMON] unsigned int 
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;  product         2    0[BANK0 ] unsigned int 
  7700 ;; Return value:  Size  Location     Type
  7701 ;;                  2    3[COMMON] unsigned int 
  7702 ;; Registers used:
  7703 ;;		wreg, status,2, status,0
  7704 ;; Tracked objects:
  7705 ;;		On entry : 0/0
  7706 ;;		On exit  : 0/0
  7707 ;;		Unchanged: 0/0
  7708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7709 ;;      Params:         4       0       0       0       0
  7710 ;;      Locals:         0       2       0       0       0
  7711 ;;      Temps:          0       0       0       0       0
  7712 ;;      Totals:         4       2       0       0       0
  7713 ;;Total ram usage:        6 bytes
  7714 ;; Hardware stack levels used: 1
  7715 ;; Hardware stack levels required when called: 2
  7716 ;; This function calls:
  7717 ;;		Nothing
  7718 ;; This function is called by:
  7719 ;;		_sprintf
  7720 ;;		_convertion
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724  1AEA                     ___wmul:	
  7725                           ;psect for function ___wmul
  7726                           
  7727  1AEA                     l4032:	
  7728                           ;incstack = 0
  7729                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7730                           
  7731  1AEA  1283               	bcf	3,5	;RP0=0, select bank0
  7732  1AEB  1303               	bcf	3,6	;RP1=0, select bank0
  7733  1AEC  01A0               	clrf	___wmul@product
  7734  1AED  01A1               	clrf	___wmul@product+1
  7735  1AEE                     l4034:
  7736  1AEE  1C73               	btfss	___wmul@multiplier,0
  7737  1AEF  2AF1               	goto	u6321
  7738  1AF0  2AF2               	goto	u6320
  7739  1AF1                     u6321:
  7740  1AF1  2AFA               	goto	l391
  7741  1AF2                     u6320:
  7742  1AF2                     l4036:
  7743  1AF2  0875               	movf	___wmul@multiplicand,w
  7744  1AF3  1283               	bcf	3,5	;RP0=0, select bank0
  7745  1AF4  1303               	bcf	3,6	;RP1=0, select bank0
  7746  1AF5  07A0               	addwf	___wmul@product,f
  7747  1AF6  1803               	skipnc
  7748  1AF7  0AA1               	incf	___wmul@product+1,f
  7749  1AF8  0876               	movf	___wmul@multiplicand+1,w
  7750  1AF9  07A1               	addwf	___wmul@product+1,f
  7751  1AFA                     l391:
  7752  1AFA  3001               	movlw	1
  7753  1AFB                     u6335:
  7754  1AFB  1003               	clrc
  7755  1AFC  0DF5               	rlf	___wmul@multiplicand,f
  7756  1AFD  0DF6               	rlf	___wmul@multiplicand+1,f
  7757  1AFE  3EFF               	addlw	-1
  7758  1AFF  1D03               	skipz
  7759  1B00  2AFB               	goto	u6335
  7760  1B01                     l4038:
  7761  1B01  3001               	movlw	1
  7762  1B02                     u6345:
  7763  1B02  1003               	clrc
  7764  1B03  0CF4               	rrf	___wmul@multiplier+1,f
  7765  1B04  0CF3               	rrf	___wmul@multiplier,f
  7766  1B05  3EFF               	addlw	-1
  7767  1B06  1D03               	skipz
  7768  1B07  2B02               	goto	u6345
  7769  1B08                     l4040:
  7770  1B08  0873               	movf	___wmul@multiplier,w
  7771  1B09  0474               	iorwf	___wmul@multiplier+1,w
  7772  1B0A  1D03               	btfss	3,2
  7773  1B0B  2B0D               	goto	u6351
  7774  1B0C  2B0E               	goto	u6350
  7775  1B0D                     u6351:
  7776  1B0D  2AEE               	goto	l4034
  7777  1B0E                     u6350:
  7778  1B0E                     l4042:
  7779  1B0E  1283               	bcf	3,5	;RP0=0, select bank0
  7780  1B0F  1303               	bcf	3,6	;RP1=0, select bank0
  7781  1B10  0821               	movf	___wmul@product+1,w
  7782  1B11  00F4               	movwf	?___wmul+1
  7783  1B12  0820               	movf	___wmul@product,w
  7784  1B13  00F3               	movwf	?___wmul
  7785  1B14                     l393:
  7786  1B14  0008               	return
  7787  1B15                     __end_of___wmul:
  7788                           
  7789                           	psect	text15
  7790  1DE4                     __ptext15:	
  7791 ;; *************** function ___llmod *****************
  7792 ;; Defined at:
  7793 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\llmod.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  divisor         4    0[BANK0 ] unsigned long 
  7796 ;;  dividend        4    4[BANK0 ] unsigned long 
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;  counter         1    4[COMMON] unsigned char 
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  4    0[BANK0 ] unsigned long 
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7808 ;;      Params:         0       8       0       0       0
  7809 ;;      Locals:         1       0       0       0       0
  7810 ;;      Temps:          1       0       0       0       0
  7811 ;;      Totals:         2       8       0       0       0
  7812 ;;Total ram usage:       10 bytes
  7813 ;; Hardware stack levels used: 1
  7814 ;; Hardware stack levels required when called: 2
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_sprintf
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822  1DE4                     ___llmod:	
  7823                           ;psect for function ___llmod
  7824                           
  7825  1DE4                     l4102:	
  7826                           ;incstack = 0
  7827                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7828                           
  7829  1DE4  1283               	bcf	3,5	;RP0=0, select bank0
  7830  1DE5  1303               	bcf	3,6	;RP1=0, select bank0
  7831  1DE6  0823               	movf	___llmod@divisor+3,w
  7832  1DE7  0422               	iorwf	___llmod@divisor+2,w
  7833  1DE8  0421               	iorwf	___llmod@divisor+1,w
  7834  1DE9  0420               	iorwf	___llmod@divisor,w
  7835  1DEA  1903               	skipnz
  7836  1DEB  2DED               	goto	u6531
  7837  1DEC  2DEE               	goto	u6530
  7838  1DED                     u6531:
  7839  1DED  2E31               	goto	l4118
  7840  1DEE                     u6530:
  7841  1DEE                     l4104:
  7842  1DEE  01F4               	clrf	___llmod@counter
  7843  1DEF  0AF4               	incf	___llmod@counter,f
  7844  1DF0  2DFE               	goto	l4108
  7845  1DF1                     l4106:
  7846  1DF1  3001               	movlw	1
  7847  1DF2  00F3               	movwf	??___llmod
  7848  1DF3                     u6545:
  7849  1DF3  1003               	clrc
  7850  1DF4  0DA0               	rlf	___llmod@divisor,f
  7851  1DF5  0DA1               	rlf	___llmod@divisor+1,f
  7852  1DF6  0DA2               	rlf	___llmod@divisor+2,f
  7853  1DF7  0DA3               	rlf	___llmod@divisor+3,f
  7854  1DF8  0BF3               	decfsz	??___llmod,f
  7855  1DF9  2DF3               	goto	u6545
  7856  1DFA  3001               	movlw	1
  7857  1DFB  00F3               	movwf	??___llmod
  7858  1DFC  0873               	movf	??___llmod,w
  7859  1DFD  07F4               	addwf	___llmod@counter,f
  7860  1DFE                     l4108:
  7861  1DFE  1FA3               	btfss	___llmod@divisor+3,7
  7862  1DFF  2E01               	goto	u6551
  7863  1E00  2E02               	goto	u6550
  7864  1E01                     u6551:
  7865  1E01  2DF1               	goto	l4106
  7866  1E02                     u6550:
  7867  1E02                     l4110:
  7868  1E02  0823               	movf	___llmod@divisor+3,w
  7869  1E03  0227               	subwf	___llmod@dividend+3,w
  7870  1E04  1D03               	skipz
  7871  1E05  2E10               	goto	u6565
  7872  1E06  0822               	movf	___llmod@divisor+2,w
  7873  1E07  0226               	subwf	___llmod@dividend+2,w
  7874  1E08  1D03               	skipz
  7875  1E09  2E10               	goto	u6565
  7876  1E0A  0821               	movf	___llmod@divisor+1,w
  7877  1E0B  0225               	subwf	___llmod@dividend+1,w
  7878  1E0C  1D03               	skipz
  7879  1E0D  2E10               	goto	u6565
  7880  1E0E  0820               	movf	___llmod@divisor,w
  7881  1E0F  0224               	subwf	___llmod@dividend,w
  7882  1E10                     u6565:
  7883  1E10  1C03               	skipc
  7884  1E11  2E13               	goto	u6561
  7885  1E12  2E14               	goto	u6560
  7886  1E13                     u6561:
  7887  1E13  2E22               	goto	l4114
  7888  1E14                     u6560:
  7889  1E14                     l4112:
  7890  1E14  0820               	movf	___llmod@divisor,w
  7891  1E15  02A4               	subwf	___llmod@dividend,f
  7892  1E16  0821               	movf	___llmod@divisor+1,w
  7893  1E17  1C03               	skipc
  7894  1E18  0F21               	incfsz	___llmod@divisor+1,w
  7895  1E19  02A5               	subwf	___llmod@dividend+1,f
  7896  1E1A  0822               	movf	___llmod@divisor+2,w
  7897  1E1B  1C03               	skipc
  7898  1E1C  0F22               	incfsz	___llmod@divisor+2,w
  7899  1E1D  02A6               	subwf	___llmod@dividend+2,f
  7900  1E1E  0823               	movf	___llmod@divisor+3,w
  7901  1E1F  1C03               	skipc
  7902  1E20  0F23               	incfsz	___llmod@divisor+3,w
  7903  1E21  02A7               	subwf	___llmod@dividend+3,f
  7904  1E22                     l4114:
  7905  1E22  3001               	movlw	1
  7906  1E23                     u6575:
  7907  1E23  1003               	clrc
  7908  1E24  0CA3               	rrf	___llmod@divisor+3,f
  7909  1E25  0CA2               	rrf	___llmod@divisor+2,f
  7910  1E26  0CA1               	rrf	___llmod@divisor+1,f
  7911  1E27  0CA0               	rrf	___llmod@divisor,f
  7912  1E28  3EFF               	addlw	-1
  7913  1E29  1D03               	skipz
  7914  1E2A  2E23               	goto	u6575
  7915  1E2B                     l4116:
  7916  1E2B  3001               	movlw	1
  7917  1E2C  02F4               	subwf	___llmod@counter,f
  7918  1E2D  1D03               	btfss	3,2
  7919  1E2E  2E30               	goto	u6581
  7920  1E2F  2E31               	goto	u6580
  7921  1E30                     u6581:
  7922  1E30  2E02               	goto	l4110
  7923  1E31                     u6580:
  7924  1E31                     l4118:
  7925  1E31  0827               	movf	___llmod@dividend+3,w
  7926  1E32  00A3               	movwf	?___llmod+3
  7927  1E33  0826               	movf	___llmod@dividend+2,w
  7928  1E34  00A2               	movwf	?___llmod+2
  7929  1E35  0825               	movf	___llmod@dividend+1,w
  7930  1E36  00A1               	movwf	?___llmod+1
  7931  1E37  0824               	movf	___llmod@dividend,w
  7932  1E38  00A0               	movwf	?___llmod
  7933  1E39                     l647:
  7934  1E39  0008               	return
  7935  1E3A                     __end_of___llmod:
  7936                           
  7937                           	psect	text16
  7938  1EF4                     __ptext16:	
  7939 ;; *************** function ___lldiv *****************
  7940 ;; Defined at:
  7941 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;  divisor         4    0[BANK0 ] unsigned long 
  7944 ;;  dividend        4    4[BANK0 ] unsigned long 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;  quotient        4    8[BANK0 ] unsigned long 
  7947 ;;  counter         1   12[BANK0 ] unsigned char 
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  4    0[BANK0 ] unsigned long 
  7950 ;; Registers used:
  7951 ;;		wreg, status,2, status,0
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7957 ;;      Params:         0       8       0       0       0
  7958 ;;      Locals:         0       5       0       0       0
  7959 ;;      Temps:          1       0       0       0       0
  7960 ;;      Totals:         1      13       0       0       0
  7961 ;;Total ram usage:       14 bytes
  7962 ;; Hardware stack levels used: 1
  7963 ;; Hardware stack levels required when called: 2
  7964 ;; This function calls:
  7965 ;;		Nothing
  7966 ;; This function is called by:
  7967 ;;		_sprintf
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971  1EF4                     ___lldiv:	
  7972                           ;psect for function ___lldiv
  7973                           
  7974  1EF4                     l4046:	
  7975                           ;incstack = 0
  7976                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7977                           
  7978  1EF4  3000               	movlw	0
  7979  1EF5  1283               	bcf	3,5	;RP0=0, select bank0
  7980  1EF6  1303               	bcf	3,6	;RP1=0, select bank0
  7981  1EF7  00AB               	movwf	___lldiv@quotient+3
  7982  1EF8  3000               	movlw	0
  7983  1EF9  00AA               	movwf	___lldiv@quotient+2
  7984  1EFA  3000               	movlw	0
  7985  1EFB  00A9               	movwf	___lldiv@quotient+1
  7986  1EFC  3000               	movlw	0
  7987  1EFD  00A8               	movwf	___lldiv@quotient
  7988  1EFE  0823               	movf	___lldiv@divisor+3,w
  7989  1EFF  0422               	iorwf	___lldiv@divisor+2,w
  7990  1F00  0421               	iorwf	___lldiv@divisor+1,w
  7991  1F01  0420               	iorwf	___lldiv@divisor,w
  7992  1F02  1903               	skipnz
  7993  1F03  2F05               	goto	u6361
  7994  1F04  2F06               	goto	u6360
  7995  1F05                     u6361:
  7996  1F05  2F53               	goto	l4066
  7997  1F06                     u6360:
  7998  1F06                     l4048:
  7999  1F06  01AC               	clrf	___lldiv@counter
  8000  1F07  0AAC               	incf	___lldiv@counter,f
  8001  1F08  2F16               	goto	l4052
  8002  1F09                     l4050:
  8003  1F09  3001               	movlw	1
  8004  1F0A  00F3               	movwf	??___lldiv
  8005  1F0B                     u6375:
  8006  1F0B  1003               	clrc
  8007  1F0C  0DA0               	rlf	___lldiv@divisor,f
  8008  1F0D  0DA1               	rlf	___lldiv@divisor+1,f
  8009  1F0E  0DA2               	rlf	___lldiv@divisor+2,f
  8010  1F0F  0DA3               	rlf	___lldiv@divisor+3,f
  8011  1F10  0BF3               	decfsz	??___lldiv,f
  8012  1F11  2F0B               	goto	u6375
  8013  1F12  3001               	movlw	1
  8014  1F13  00F3               	movwf	??___lldiv
  8015  1F14  0873               	movf	??___lldiv,w
  8016  1F15  07AC               	addwf	___lldiv@counter,f
  8017  1F16                     l4052:
  8018  1F16  1FA3               	btfss	___lldiv@divisor+3,7
  8019  1F17  2F19               	goto	u6381
  8020  1F18  2F1A               	goto	u6380
  8021  1F19                     u6381:
  8022  1F19  2F09               	goto	l4050
  8023  1F1A                     u6380:
  8024  1F1A                     l4054:
  8025  1F1A  3001               	movlw	1
  8026  1F1B  00F3               	movwf	??___lldiv
  8027  1F1C                     u6395:
  8028  1F1C  1003               	clrc
  8029  1F1D  0DA8               	rlf	___lldiv@quotient,f
  8030  1F1E  0DA9               	rlf	___lldiv@quotient+1,f
  8031  1F1F  0DAA               	rlf	___lldiv@quotient+2,f
  8032  1F20  0DAB               	rlf	___lldiv@quotient+3,f
  8033  1F21  0BF3               	decfsz	??___lldiv,f
  8034  1F22  2F1C               	goto	u6395
  8035  1F23                     l4056:
  8036  1F23  0823               	movf	___lldiv@divisor+3,w
  8037  1F24  0227               	subwf	___lldiv@dividend+3,w
  8038  1F25  1D03               	skipz
  8039  1F26  2F31               	goto	u6405
  8040  1F27  0822               	movf	___lldiv@divisor+2,w
  8041  1F28  0226               	subwf	___lldiv@dividend+2,w
  8042  1F29  1D03               	skipz
  8043  1F2A  2F31               	goto	u6405
  8044  1F2B  0821               	movf	___lldiv@divisor+1,w
  8045  1F2C  0225               	subwf	___lldiv@dividend+1,w
  8046  1F2D  1D03               	skipz
  8047  1F2E  2F31               	goto	u6405
  8048  1F2F  0820               	movf	___lldiv@divisor,w
  8049  1F30  0224               	subwf	___lldiv@dividend,w
  8050  1F31                     u6405:
  8051  1F31  1C03               	skipc
  8052  1F32  2F34               	goto	u6401
  8053  1F33  2F35               	goto	u6400
  8054  1F34                     u6401:
  8055  1F34  2F44               	goto	l4062
  8056  1F35                     u6400:
  8057  1F35                     l4058:
  8058  1F35  0820               	movf	___lldiv@divisor,w
  8059  1F36  02A4               	subwf	___lldiv@dividend,f
  8060  1F37  0821               	movf	___lldiv@divisor+1,w
  8061  1F38  1C03               	skipc
  8062  1F39  0F21               	incfsz	___lldiv@divisor+1,w
  8063  1F3A  02A5               	subwf	___lldiv@dividend+1,f
  8064  1F3B  0822               	movf	___lldiv@divisor+2,w
  8065  1F3C  1C03               	skipc
  8066  1F3D  0F22               	incfsz	___lldiv@divisor+2,w
  8067  1F3E  02A6               	subwf	___lldiv@dividend+2,f
  8068  1F3F  0823               	movf	___lldiv@divisor+3,w
  8069  1F40  1C03               	skipc
  8070  1F41  0F23               	incfsz	___lldiv@divisor+3,w
  8071  1F42  02A7               	subwf	___lldiv@dividend+3,f
  8072  1F43                     l4060:
  8073  1F43  1428               	bsf	___lldiv@quotient,0
  8074  1F44                     l4062:
  8075  1F44  3001               	movlw	1
  8076  1F45                     u6415:
  8077  1F45  1003               	clrc
  8078  1F46  0CA3               	rrf	___lldiv@divisor+3,f
  8079  1F47  0CA2               	rrf	___lldiv@divisor+2,f
  8080  1F48  0CA1               	rrf	___lldiv@divisor+1,f
  8081  1F49  0CA0               	rrf	___lldiv@divisor,f
  8082  1F4A  3EFF               	addlw	-1
  8083  1F4B  1D03               	skipz
  8084  1F4C  2F45               	goto	u6415
  8085  1F4D                     l4064:
  8086  1F4D  3001               	movlw	1
  8087  1F4E  02AC               	subwf	___lldiv@counter,f
  8088  1F4F  1D03               	btfss	3,2
  8089  1F50  2F52               	goto	u6421
  8090  1F51  2F53               	goto	u6420
  8091  1F52                     u6421:
  8092  1F52  2F1A               	goto	l4054
  8093  1F53                     u6420:
  8094  1F53                     l4066:
  8095  1F53  082B               	movf	___lldiv@quotient+3,w
  8096  1F54  00A3               	movwf	?___lldiv+3
  8097  1F55  082A               	movf	___lldiv@quotient+2,w
  8098  1F56  00A2               	movwf	?___lldiv+2
  8099  1F57  0829               	movf	___lldiv@quotient+1,w
  8100  1F58  00A1               	movwf	?___lldiv+1
  8101  1F59  0828               	movf	___lldiv@quotient,w
  8102  1F5A  00A0               	movwf	?___lldiv
  8103  1F5B                     l427:
  8104  1F5B  0008               	return
  8105  1F5C                     __end_of___lldiv:
  8106                           
  8107                           	psect	text17
  8108  10B8                     __ptext17:	
  8109 ;; *************** function ___fltol *****************
  8110 ;; Defined at:
  8111 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fltol.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;  f1              4   56[BANK0 ] unsigned long 
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;  exp1            1   66[BANK0 ] unsigned char 
  8116 ;;  sign1           1   65[BANK0 ] unsigned char 
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  4   56[BANK0 ] long 
  8119 ;; Registers used:
  8120 ;;		wreg, status,2, status,0
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8126 ;;      Params:         0       4       0       0       0
  8127 ;;      Locals:         0       2       0       0       0
  8128 ;;      Temps:          0       5       0       0       0
  8129 ;;      Totals:         0      11       0       0       0
  8130 ;;Total ram usage:       11 bytes
  8131 ;; Hardware stack levels used: 1
  8132 ;; Hardware stack levels required when called: 2
  8133 ;; This function calls:
  8134 ;;		Nothing
  8135 ;; This function is called by:
  8136 ;;		_sprintf
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140  10B8                     ___fltol:	
  8141                           ;psect for function ___fltol
  8142                           
  8143  10B8                     l3160:	
  8144                           ;incstack = 0
  8145                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8146                           
  8147  10B8  1003               	clrc
  8148  10B9  1283               	bcf	3,5	;RP0=0, select bank0
  8149  10BA  1303               	bcf	3,6	;RP1=0, select bank0
  8150  10BB  0D5A               	rlf	___fltol@f1+2,w
  8151  10BC  0D5B               	rlf	___fltol@f1+3,w
  8152  10BD  00DC               	movwf	??___fltol
  8153  10BE  085C               	movf	??___fltol,w
  8154  10BF  00E2               	movwf	___fltol@exp1
  8155  10C0  0862               	movf	___fltol@exp1,w
  8156  10C1  1D03               	btfss	3,2
  8157  10C2  28C4               	goto	u4681
  8158  10C3  28C5               	goto	u4680
  8159  10C4                     u4681:
  8160  10C4  28CE               	goto	l3166
  8161  10C5                     u4680:
  8162  10C5                     l3162:
  8163  10C5  3000               	movlw	0
  8164  10C6  00DB               	movwf	?___fltol+3
  8165  10C7  3000               	movlw	0
  8166  10C8  00DA               	movwf	?___fltol+2
  8167  10C9  3000               	movlw	0
  8168  10CA  00D9               	movwf	?___fltol+1
  8169  10CB  3000               	movlw	0
  8170  10CC  00D8               	movwf	?___fltol
  8171  10CD  2933               	goto	l594
  8172  10CE                     l3166:
  8173  10CE  0858               	movf	___fltol@f1,w
  8174  10CF  00DC               	movwf	??___fltol
  8175  10D0  0859               	movf	___fltol@f1+1,w
  8176  10D1  00DD               	movwf	??___fltol+1
  8177  10D2  085A               	movf	___fltol@f1+2,w
  8178  10D3  00DE               	movwf	??___fltol+2
  8179  10D4  085B               	movf	___fltol@f1+3,w
  8180  10D5  00DF               	movwf	??___fltol+3
  8181  10D6  301F               	movlw	31
  8182  10D7                     u4695:
  8183  10D7  1003               	clrc
  8184  10D8  0CDF               	rrf	??___fltol+3,f
  8185  10D9  0CDE               	rrf	??___fltol+2,f
  8186  10DA  0CDD               	rrf	??___fltol+1,f
  8187  10DB  0CDC               	rrf	??___fltol,f
  8188  10DC                     u4690:
  8189  10DC  3EFF               	addlw	-1
  8190  10DD  1D03               	skipz
  8191  10DE  28D7               	goto	u4695
  8192  10DF  085C               	movf	??___fltol,w
  8193  10E0  00E0               	movwf	??___fltol+4
  8194  10E1  0860               	movf	??___fltol+4,w
  8195  10E2  00E1               	movwf	___fltol@sign1
  8196  10E3                     l3168:
  8197  10E3  17DA               	bsf	___fltol@f1+2,7
  8198  10E4                     l3170:
  8199  10E4  30FF               	movlw	255
  8200  10E5  05D8               	andwf	___fltol@f1,f
  8201  10E6  30FF               	movlw	255
  8202  10E7  05D9               	andwf	___fltol@f1+1,f
  8203  10E8  30FF               	movlw	255
  8204  10E9  05DA               	andwf	___fltol@f1+2,f
  8205  10EA  3000               	movlw	0
  8206  10EB  05DB               	andwf	___fltol@f1+3,f
  8207  10EC                     l3172:
  8208  10EC  3096               	movlw	150
  8209  10ED  02E2               	subwf	___fltol@exp1,f
  8210  10EE                     l3174:
  8211  10EE  1FE2               	btfss	___fltol@exp1,7
  8212  10EF  28F1               	goto	u4701
  8213  10F0  28F2               	goto	u4700
  8214  10F1                     u4701:
  8215  10F1  290C               	goto	l3184
  8216  10F2                     u4700:
  8217  10F2                     l3176:
  8218  10F2  0862               	movf	___fltol@exp1,w
  8219  10F3  3A80               	xorlw	128
  8220  10F4  3E97               	addlw	151
  8221  10F5  1803               	skipnc
  8222  10F6  28F8               	goto	u4711
  8223  10F7  28F9               	goto	u4710
  8224  10F8                     u4711:
  8225  10F8  28FA               	goto	l3182
  8226  10F9                     u4710:
  8227  10F9  28C5               	goto	l3162
  8228  10FA                     l3182:
  8229  10FA  3001               	movlw	1
  8230  10FB                     u4725:
  8231  10FB  1003               	clrc
  8232  10FC  0CDB               	rrf	___fltol@f1+3,f
  8233  10FD  0CDA               	rrf	___fltol@f1+2,f
  8234  10FE  0CD9               	rrf	___fltol@f1+1,f
  8235  10FF  0CD8               	rrf	___fltol@f1,f
  8236  1100  3EFF               	addlw	-1
  8237  1101  1D03               	skipz
  8238  1102  28FB               	goto	u4725
  8239  1103  3001               	movlw	1
  8240  1104  00DC               	movwf	??___fltol
  8241  1105  085C               	movf	??___fltol,w
  8242  1106  07E2               	addwf	___fltol@exp1,f
  8243  1107  1D03               	btfss	3,2
  8244  1108  290A               	goto	u4731
  8245  1109  290B               	goto	u4730
  8246  110A                     u4731:
  8247  110A  28FA               	goto	l3182
  8248  110B                     u4730:
  8249  110B  2923               	goto	l3192
  8250  110C                     l3184:
  8251  110C  3020               	movlw	32
  8252  110D  0262               	subwf	___fltol@exp1,w
  8253  110E  1C03               	skipc
  8254  110F  2911               	goto	u4741
  8255  1110  2912               	goto	u4740
  8256  1111                     u4741:
  8257  1111  291E               	goto	l601
  8258  1112                     u4740:
  8259  1112  28C5               	goto	l3162
  8260  1113                     l3190:
  8261  1113  3001               	movlw	1
  8262  1114  00DC               	movwf	??___fltol
  8263  1115                     u4755:
  8264  1115  1003               	clrc
  8265  1116  0DD8               	rlf	___fltol@f1,f
  8266  1117  0DD9               	rlf	___fltol@f1+1,f
  8267  1118  0DDA               	rlf	___fltol@f1+2,f
  8268  1119  0DDB               	rlf	___fltol@f1+3,f
  8269  111A  0BDC               	decfsz	??___fltol,f
  8270  111B  2915               	goto	u4755
  8271  111C  3001               	movlw	1
  8272  111D  02E2               	subwf	___fltol@exp1,f
  8273  111E                     l601:
  8274  111E  0862               	movf	___fltol@exp1,w
  8275  111F  1D03               	btfss	3,2
  8276  1120  2922               	goto	u4761
  8277  1121  2923               	goto	u4760
  8278  1122                     u4761:
  8279  1122  2913               	goto	l3190
  8280  1123                     u4760:
  8281  1123                     l3192:
  8282  1123  0861               	movf	___fltol@sign1,w
  8283  1124  1903               	btfsc	3,2
  8284  1125  2927               	goto	u4771
  8285  1126  2928               	goto	u4770
  8286  1127                     u4771:
  8287  1127  2933               	goto	l604
  8288  1128                     u4770:
  8289  1128                     l3194:
  8290  1128  09D8               	comf	___fltol@f1,f
  8291  1129  09D9               	comf	___fltol@f1+1,f
  8292  112A  09DA               	comf	___fltol@f1+2,f
  8293  112B  09DB               	comf	___fltol@f1+3,f
  8294  112C  0AD8               	incf	___fltol@f1,f
  8295  112D  1903               	skipnz
  8296  112E  0AD9               	incf	___fltol@f1+1,f
  8297  112F  1903               	skipnz
  8298  1130  0ADA               	incf	___fltol@f1+2,f
  8299  1131  1903               	skipnz
  8300  1132  0ADB               	incf	___fltol@f1+3,f
  8301  1133                     l604:
  8302  1133                     l594:
  8303  1133  0008               	return
  8304  1134                     __end_of___fltol:
  8305                           
  8306                           	psect	text18
  8307  1D3E                     __ptext18:	
  8308 ;; *************** function ___flsub *****************
  8309 ;; Defined at:
  8310 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcadd.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;  a               4    0[BANK1 ] long 
  8313 ;;  b               4    4[BANK1 ] long 
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;		None
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  4    0[BANK1 ] long 
  8318 ;; Registers used:
  8319 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8325 ;;      Params:         0       0       8       0       0
  8326 ;;      Locals:         0       0       0       0       0
  8327 ;;      Temps:          0       0       0       0       0
  8328 ;;      Totals:         0       0       8       0       0
  8329 ;;Total ram usage:        8 bytes
  8330 ;; Hardware stack levels used: 1
  8331 ;; Hardware stack levels required when called: 3
  8332 ;; This function calls:
  8333 ;;		___fladd
  8334 ;; This function is called by:
  8335 ;;		_sprintf
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339  1D3E                     ___flsub:	
  8340                           ;psect for function ___flsub
  8341                           
  8342  1D3E                     l3216:	
  8343                           ;incstack = 0
  8344                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8345                           
  8346  1D3E  3080               	movlw	128
  8347  1D3F  1683               	bsf	3,5	;RP0=1, select bank1
  8348  1D40  1303               	bcf	3,6	;RP1=0, select bank1
  8349  1D41  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8350  1D42                     l3218:
  8351  1D42  0827               	movf	(___flsub@b+3)^(0+128),w
  8352  1D43  1283               	bcf	3,5	;RP0=0, select bank0
  8353  1D44  1303               	bcf	3,6	;RP1=0, select bank0
  8354  1D45  00DC               	movwf	___fladd@b+3
  8355  1D46  1683               	bsf	3,5	;RP0=1, select bank1
  8356  1D47  1303               	bcf	3,6	;RP1=0, select bank1
  8357  1D48  0826               	movf	(___flsub@b+2)^(0+128),w
  8358  1D49  1283               	bcf	3,5	;RP0=0, select bank0
  8359  1D4A  1303               	bcf	3,6	;RP1=0, select bank0
  8360  1D4B  00DB               	movwf	___fladd@b+2
  8361  1D4C  1683               	bsf	3,5	;RP0=1, select bank1
  8362  1D4D  1303               	bcf	3,6	;RP1=0, select bank1
  8363  1D4E  0825               	movf	(___flsub@b+1)^(0+128),w
  8364  1D4F  1283               	bcf	3,5	;RP0=0, select bank0
  8365  1D50  1303               	bcf	3,6	;RP1=0, select bank0
  8366  1D51  00DA               	movwf	___fladd@b+1
  8367  1D52  1683               	bsf	3,5	;RP0=1, select bank1
  8368  1D53  1303               	bcf	3,6	;RP1=0, select bank1
  8369  1D54  0824               	movf	___flsub@b^(0+128),w
  8370  1D55  1283               	bcf	3,5	;RP0=0, select bank0
  8371  1D56  1303               	bcf	3,6	;RP1=0, select bank0
  8372  1D57  00D9               	movwf	___fladd@b
  8373  1D58  1683               	bsf	3,5	;RP0=1, select bank1
  8374  1D59  1303               	bcf	3,6	;RP1=0, select bank1
  8375  1D5A  0823               	movf	(___flsub@a+3)^(0+128),w
  8376  1D5B  1283               	bcf	3,5	;RP0=0, select bank0
  8377  1D5C  1303               	bcf	3,6	;RP1=0, select bank0
  8378  1D5D  00E0               	movwf	___fladd@a+3
  8379  1D5E  1683               	bsf	3,5	;RP0=1, select bank1
  8380  1D5F  1303               	bcf	3,6	;RP1=0, select bank1
  8381  1D60  0822               	movf	(___flsub@a+2)^(0+128),w
  8382  1D61  1283               	bcf	3,5	;RP0=0, select bank0
  8383  1D62  1303               	bcf	3,6	;RP1=0, select bank0
  8384  1D63  00DF               	movwf	___fladd@a+2
  8385  1D64  1683               	bsf	3,5	;RP0=1, select bank1
  8386  1D65  1303               	bcf	3,6	;RP1=0, select bank1
  8387  1D66  0821               	movf	(___flsub@a+1)^(0+128),w
  8388  1D67  1283               	bcf	3,5	;RP0=0, select bank0
  8389  1D68  1303               	bcf	3,6	;RP1=0, select bank0
  8390  1D69  00DE               	movwf	___fladd@a+1
  8391  1D6A  1683               	bsf	3,5	;RP0=1, select bank1
  8392  1D6B  1303               	bcf	3,6	;RP1=0, select bank1
  8393  1D6C  0820               	movf	___flsub@a^(0+128),w
  8394  1D6D  1283               	bcf	3,5	;RP0=0, select bank0
  8395  1D6E  1303               	bcf	3,6	;RP1=0, select bank0
  8396  1D6F  00DD               	movwf	___fladd@a
  8397  1D70  160A  118A  2578  160A  158A  	fcall	___fladd
  8398  1D75  1283               	bcf	3,5	;RP0=0, select bank0
  8399  1D76  1303               	bcf	3,6	;RP1=0, select bank0
  8400  1D77  085C               	movf	?___fladd+3,w
  8401  1D78  1683               	bsf	3,5	;RP0=1, select bank1
  8402  1D79  1303               	bcf	3,6	;RP1=0, select bank1
  8403  1D7A  00A3               	movwf	(?___flsub+3)^(0+128)
  8404  1D7B  1283               	bcf	3,5	;RP0=0, select bank0
  8405  1D7C  1303               	bcf	3,6	;RP1=0, select bank0
  8406  1D7D  085B               	movf	?___fladd+2,w
  8407  1D7E  1683               	bsf	3,5	;RP0=1, select bank1
  8408  1D7F  1303               	bcf	3,6	;RP1=0, select bank1
  8409  1D80  00A2               	movwf	(?___flsub+2)^(0+128)
  8410  1D81  1283               	bcf	3,5	;RP0=0, select bank0
  8411  1D82  1303               	bcf	3,6	;RP1=0, select bank0
  8412  1D83  085A               	movf	?___fladd+1,w
  8413  1D84  1683               	bsf	3,5	;RP0=1, select bank1
  8414  1D85  1303               	bcf	3,6	;RP1=0, select bank1
  8415  1D86  00A1               	movwf	(?___flsub+1)^(0+128)
  8416  1D87  1283               	bcf	3,5	;RP0=0, select bank0
  8417  1D88  1303               	bcf	3,6	;RP1=0, select bank0
  8418  1D89  0859               	movf	?___fladd,w
  8419  1D8A  1683               	bsf	3,5	;RP0=1, select bank1
  8420  1D8B  1303               	bcf	3,6	;RP1=0, select bank1
  8421  1D8C  00A0               	movwf	?___flsub^(0+128)
  8422  1D8D                     l764:
  8423  1D8D  0008               	return
  8424  1D8E                     __end_of___flsub:
  8425                           
  8426                           	psect	text19
  8427  1578                     __ptext19:	
  8428 ;; *************** function ___fladd *****************
  8429 ;; Defined at:
  8430 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcadd.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;  b               4   57[BANK0 ] long 
  8433 ;;  a               4   61[BANK0 ] long 
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;  grs             1   76[BANK0 ] unsigned char 
  8436 ;;  bexp            1   75[BANK0 ] unsigned char 
  8437 ;;  aexp            1   74[BANK0 ] unsigned char 
  8438 ;;  signs           1   73[BANK0 ] unsigned char 
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  4   57[BANK0 ] unsigned char 
  8441 ;; Registers used:
  8442 ;;		wreg, status,2, status,0, btemp+1
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8448 ;;      Params:         0       8       0       0       0
  8449 ;;      Locals:         0       4       0       0       0
  8450 ;;      Temps:          0       8       0       0       0
  8451 ;;      Totals:         0      20       0       0       0
  8452 ;;Total ram usage:       20 bytes
  8453 ;; Hardware stack levels used: 1
  8454 ;; Hardware stack levels required when called: 2
  8455 ;; This function calls:
  8456 ;;		Nothing
  8457 ;; This function is called by:
  8458 ;;		_sprintf
  8459 ;;		___flsub
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463  1578                     ___fladd:	
  8464                           ;psect for function ___fladd
  8465                           
  8466  1578                     l2474:	
  8467                           ;incstack = 0
  8468                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8469                           
  8470  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8471  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8472  157A  085C               	movf	___fladd@b+3,w
  8473  157B  3980               	andlw	128
  8474  157C  00E1               	movwf	??___fladd
  8475  157D  0861               	movf	??___fladd,w
  8476  157E  00E9               	movwf	___fladd@signs
  8477  157F                     l2476:
  8478  157F  085C               	movf	___fladd@b+3,w
  8479  1580  00E1               	movwf	??___fladd
  8480  1581  0761               	addwf	??___fladd,w
  8481  1582  00E2               	movwf	??___fladd+1
  8482  1583  0862               	movf	??___fladd+1,w
  8483  1584  00EB               	movwf	___fladd@bexp
  8484  1585                     l2478:
  8485  1585  1FDB               	btfss	___fladd@b+2,7
  8486  1586  2D88               	goto	u3091
  8487  1587  2D89               	goto	u3090
  8488  1588                     u3091:
  8489  1588  2D8A               	goto	l2482
  8490  1589                     u3090:
  8491  1589                     l2480:
  8492  1589  146B               	bsf	___fladd@bexp,0
  8493  158A                     l2482:
  8494  158A  086B               	movf	___fladd@bexp,w
  8495  158B  1903               	btfsc	3,2
  8496  158C  2D8E               	goto	u3101
  8497  158D  2D8F               	goto	u3100
  8498  158E                     u3101:
  8499  158E  2D9F               	goto	l2492
  8500  158F                     u3100:
  8501  158F                     l2484:
  8502  158F  0A6B               	incf	___fladd@bexp,w
  8503  1590  1D03               	btfss	3,2
  8504  1591  2D93               	goto	u3111
  8505  1592  2D94               	goto	u3110
  8506  1593                     u3111:
  8507  1593  2D9C               	goto	l2488
  8508  1594                     u3110:
  8509  1594                     l2486:
  8510  1594  3000               	movlw	0
  8511  1595  00DC               	movwf	___fladd@b+3
  8512  1596  3000               	movlw	0
  8513  1597  00DB               	movwf	___fladd@b+2
  8514  1598  3000               	movlw	0
  8515  1599  00DA               	movwf	___fladd@b+1
  8516  159A  3000               	movlw	0
  8517  159B  00D9               	movwf	___fladd@b
  8518  159C                     l2488:
  8519  159C  17DB               	bsf	___fladd@b+2,7
  8520  159D                     l2490:
  8521  159D  01DC               	clrf	___fladd@b+3
  8522  159E  2DA7               	goto	l2494
  8523  159F                     l2492:
  8524  159F  3000               	movlw	0
  8525  15A0  00DC               	movwf	___fladd@b+3
  8526  15A1  3000               	movlw	0
  8527  15A2  00DB               	movwf	___fladd@b+2
  8528  15A3  3000               	movlw	0
  8529  15A4  00DA               	movwf	___fladd@b+1
  8530  15A5  3000               	movlw	0
  8531  15A6  00D9               	movwf	___fladd@b
  8532  15A7                     l2494:
  8533  15A7  0860               	movf	___fladd@a+3,w
  8534  15A8  3980               	andlw	128
  8535  15A9  00E1               	movwf	??___fladd
  8536  15AA  0861               	movf	??___fladd,w
  8537  15AB  00EA               	movwf	___fladd@aexp
  8538  15AC                     l2496:
  8539  15AC  086A               	movf	___fladd@aexp,w
  8540  15AD  0669               	xorwf	___fladd@signs,w
  8541  15AE  1903               	skipnz
  8542  15AF  2DB1               	goto	u3121
  8543  15B0  2DB2               	goto	u3120
  8544  15B1                     u3121:
  8545  15B1  2DB3               	goto	l2500
  8546  15B2                     u3120:
  8547  15B2                     l2498:
  8548  15B2  1769               	bsf	___fladd@signs,6
  8549  15B3                     l2500:
  8550  15B3  0860               	movf	___fladd@a+3,w
  8551  15B4  00E1               	movwf	??___fladd
  8552  15B5  0761               	addwf	??___fladd,w
  8553  15B6  00E2               	movwf	??___fladd+1
  8554  15B7  0862               	movf	??___fladd+1,w
  8555  15B8  00EA               	movwf	___fladd@aexp
  8556  15B9                     l2502:
  8557  15B9  1FDF               	btfss	___fladd@a+2,7
  8558  15BA  2DBC               	goto	u3131
  8559  15BB  2DBD               	goto	u3130
  8560  15BC                     u3131:
  8561  15BC  2DBE               	goto	l2506
  8562  15BD                     u3130:
  8563  15BD                     l2504:
  8564  15BD  146A               	bsf	___fladd@aexp,0
  8565  15BE                     l2506:
  8566  15BE  086A               	movf	___fladd@aexp,w
  8567  15BF  1903               	btfsc	3,2
  8568  15C0  2DC2               	goto	u3141
  8569  15C1  2DC3               	goto	u3140
  8570  15C2                     u3141:
  8571  15C2  2DD3               	goto	l2516
  8572  15C3                     u3140:
  8573  15C3                     l2508:
  8574  15C3  0A6A               	incf	___fladd@aexp,w
  8575  15C4  1D03               	btfss	3,2
  8576  15C5  2DC7               	goto	u3151
  8577  15C6  2DC8               	goto	u3150
  8578  15C7                     u3151:
  8579  15C7  2DD0               	goto	l2512
  8580  15C8                     u3150:
  8581  15C8                     l2510:
  8582  15C8  3000               	movlw	0
  8583  15C9  00E0               	movwf	___fladd@a+3
  8584  15CA  3000               	movlw	0
  8585  15CB  00DF               	movwf	___fladd@a+2
  8586  15CC  3000               	movlw	0
  8587  15CD  00DE               	movwf	___fladd@a+1
  8588  15CE  3000               	movlw	0
  8589  15CF  00DD               	movwf	___fladd@a
  8590  15D0                     l2512:
  8591  15D0  17DF               	bsf	___fladd@a+2,7
  8592  15D1                     l2514:
  8593  15D1  01E0               	clrf	___fladd@a+3
  8594  15D2  2DDB               	goto	l718
  8595  15D3                     l2516:
  8596  15D3  3000               	movlw	0
  8597  15D4  00E0               	movwf	___fladd@a+3
  8598  15D5  3000               	movlw	0
  8599  15D6  00DF               	movwf	___fladd@a+2
  8600  15D7  3000               	movlw	0
  8601  15D8  00DE               	movwf	___fladd@a+1
  8602  15D9  3000               	movlw	0
  8603  15DA  00DD               	movwf	___fladd@a
  8604  15DB                     l718:
  8605  15DB  086B               	movf	___fladd@bexp,w
  8606  15DC  026A               	subwf	___fladd@aexp,w
  8607  15DD  1803               	skipnc
  8608  15DE  2DE0               	goto	u3161
  8609  15DF  2DE1               	goto	u3160
  8610  15E0                     u3161:
  8611  15E0  2E25               	goto	l2552
  8612  15E1                     u3160:
  8613  15E1                     l2518:
  8614  15E1  1F69               	btfss	___fladd@signs,6
  8615  15E2  2DE4               	goto	u3171
  8616  15E3  2DE5               	goto	u3170
  8617  15E4                     u3171:
  8618  15E4  2DE9               	goto	l2522
  8619  15E5                     u3170:
  8620  15E5                     l2520:
  8621  15E5  3080               	movlw	128
  8622  15E6  00E1               	movwf	??___fladd
  8623  15E7  0861               	movf	??___fladd,w
  8624  15E8  06E9               	xorwf	___fladd@signs,f
  8625  15E9                     l2522:
  8626  15E9  086B               	movf	___fladd@bexp,w
  8627  15EA  00E1               	movwf	??___fladd
  8628  15EB  0861               	movf	??___fladd,w
  8629  15EC  00EC               	movwf	___fladd@grs
  8630  15ED                     l2524:
  8631  15ED  086A               	movf	___fladd@aexp,w
  8632  15EE  00E1               	movwf	??___fladd
  8633  15EF  0861               	movf	??___fladd,w
  8634  15F0  00EB               	movwf	___fladd@bexp
  8635  15F1                     l2526:
  8636  15F1  086C               	movf	___fladd@grs,w
  8637  15F2  00E1               	movwf	??___fladd
  8638  15F3  0861               	movf	??___fladd,w
  8639  15F4  00EA               	movwf	___fladd@aexp
  8640  15F5                     l2528:
  8641  15F5  0859               	movf	___fladd@b,w
  8642  15F6  00E1               	movwf	??___fladd
  8643  15F7  0861               	movf	??___fladd,w
  8644  15F8  00EC               	movwf	___fladd@grs
  8645  15F9                     l2530:
  8646  15F9  085D               	movf	___fladd@a,w
  8647  15FA  00E1               	movwf	??___fladd
  8648  15FB  0861               	movf	??___fladd,w
  8649  15FC  00D9               	movwf	___fladd@b
  8650  15FD                     l2532:
  8651  15FD  086C               	movf	___fladd@grs,w
  8652  15FE  00E1               	movwf	??___fladd
  8653  15FF  0861               	movf	??___fladd,w
  8654  1600  00DD               	movwf	___fladd@a
  8655  1601                     l2534:
  8656  1601  085A               	movf	___fladd@b+1,w
  8657  1602  00E1               	movwf	??___fladd
  8658  1603  0861               	movf	??___fladd,w
  8659  1604  00EC               	movwf	___fladd@grs
  8660  1605                     l2536:
  8661  1605  085E               	movf	___fladd@a+1,w
  8662  1606  00E1               	movwf	??___fladd
  8663  1607  0861               	movf	??___fladd,w
  8664  1608  00DA               	movwf	___fladd@b+1
  8665  1609                     l2538:
  8666  1609  086C               	movf	___fladd@grs,w
  8667  160A  00E1               	movwf	??___fladd
  8668  160B  0861               	movf	??___fladd,w
  8669  160C  00DE               	movwf	___fladd@a+1
  8670  160D                     l2540:
  8671  160D  085B               	movf	___fladd@b+2,w
  8672  160E  00E1               	movwf	??___fladd
  8673  160F  0861               	movf	??___fladd,w
  8674  1610  00EC               	movwf	___fladd@grs
  8675  1611                     l2542:
  8676  1611  085F               	movf	___fladd@a+2,w
  8677  1612  00E1               	movwf	??___fladd
  8678  1613  0861               	movf	??___fladd,w
  8679  1614  00DB               	movwf	___fladd@b+2
  8680  1615                     l2544:
  8681  1615  086C               	movf	___fladd@grs,w
  8682  1616  00E1               	movwf	??___fladd
  8683  1617  0861               	movf	??___fladd,w
  8684  1618  00DF               	movwf	___fladd@a+2
  8685  1619                     l2546:
  8686  1619  085C               	movf	___fladd@b+3,w
  8687  161A  00E1               	movwf	??___fladd
  8688  161B  0861               	movf	??___fladd,w
  8689  161C  00EC               	movwf	___fladd@grs
  8690  161D                     l2548:
  8691  161D  0860               	movf	___fladd@a+3,w
  8692  161E  00E1               	movwf	??___fladd
  8693  161F  0861               	movf	??___fladd,w
  8694  1620  00DC               	movwf	___fladd@b+3
  8695  1621                     l2550:
  8696  1621  086C               	movf	___fladd@grs,w
  8697  1622  00E1               	movwf	??___fladd
  8698  1623  0861               	movf	??___fladd,w
  8699  1624  00E0               	movwf	___fladd@a+3
  8700  1625                     l2552:
  8701  1625  01EC               	clrf	___fladd@grs
  8702  1626                     l2554:
  8703  1626  086A               	movf	___fladd@aexp,w
  8704  1627  00E1               	movwf	??___fladd
  8705  1628  01E2               	clrf	??___fladd+1
  8706  1629  0862               	movf	??___fladd+1,w
  8707  162A  00E4               	movwf	??___fladd+3
  8708  162B  086B               	movf	___fladd@bexp,w
  8709  162C  0261               	subwf	??___fladd,w
  8710  162D  00E3               	movwf	??___fladd+2
  8711  162E  1C03               	skipc
  8712  162F  03E4               	decf	??___fladd+3,f
  8713  1630  0864               	movf	??___fladd+3,w
  8714  1631  3A80               	xorlw	128
  8715  1632  00FF               	movwf	btemp+1
  8716  1633  3080               	movlw	128
  8717  1634  027F               	subwf	btemp+1,w
  8718  1635  1D03               	skipz
  8719  1636  2E39               	goto	u3185
  8720  1637  301A               	movlw	26
  8721  1638  0263               	subwf	??___fladd+2,w
  8722  1639                     u3185:
  8723  1639  1C03               	skipc
  8724  163A  2E3C               	goto	u3181
  8725  163B  2E3D               	goto	u3180
  8726  163C                     u3181:
  8727  163C  2E7A               	goto	l2570
  8728  163D                     u3180:
  8729  163D                     l2556:
  8730  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8731  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8732  163F  085C               	movf	___fladd@b+3,w
  8733  1640  045B               	iorwf	___fladd@b+2,w
  8734  1641  045A               	iorwf	___fladd@b+1,w
  8735  1642  0459               	iorwf	___fladd@b,w
  8736  1643  1D03               	skipz
  8737  1644  2E46               	goto	u3191
  8738  1645  2E48               	goto	u3190
  8739  1646                     u3191:
  8740  1646  3001               	movlw	1
  8741  1647  2E49               	goto	u3200
  8742  1648                     u3190:
  8743  1648  3000               	movlw	0
  8744  1649                     u3200:
  8745  1649  00E1               	movwf	??___fladd
  8746  164A  0861               	movf	??___fladd,w
  8747  164B  00EC               	movwf	___fladd@grs
  8748  164C  3000               	movlw	0
  8749  164D  00DC               	movwf	___fladd@b+3
  8750  164E  3000               	movlw	0
  8751  164F  00DB               	movwf	___fladd@b+2
  8752  1650  3000               	movlw	0
  8753  1651  00DA               	movwf	___fladd@b+1
  8754  1652  3000               	movlw	0
  8755  1653  00D9               	movwf	___fladd@b
  8756  1654  086A               	movf	___fladd@aexp,w
  8757  1655  00E1               	movwf	??___fladd
  8758  1656  0861               	movf	??___fladd,w
  8759  1657  00EB               	movwf	___fladd@bexp
  8760  1658  2E82               	goto	l722
  8761  1659                     l724:
  8762  1659  1C6C               	btfss	___fladd@grs,0
  8763  165A  2E5C               	goto	u3211
  8764  165B  2E5D               	goto	u3210
  8765  165C                     u3211:
  8766  165C  2E66               	goto	l2560
  8767  165D                     u3210:
  8768  165D                     l2558:
  8769  165D  086C               	movf	___fladd@grs,w
  8770  165E  00E1               	movwf	??___fladd
  8771  165F  1003               	clrc
  8772  1660  0C61               	rrf	??___fladd,w
  8773  1661  3801               	iorlw	1
  8774  1662  00E2               	movwf	??___fladd+1
  8775  1663  0862               	movf	??___fladd+1,w
  8776  1664  00EC               	movwf	___fladd@grs
  8777  1665  2E68               	goto	l2562
  8778  1666                     l2560:
  8779  1666  1003               	clrc
  8780  1667  0CEC               	rrf	___fladd@grs,f
  8781  1668                     l2562:
  8782  1668  1C59               	btfss	___fladd@b,0
  8783  1669  2E6B               	goto	u3221
  8784  166A  2E6C               	goto	u3220
  8785  166B                     u3221:
  8786  166B  2E6D               	goto	l2566
  8787  166C                     u3220:
  8788  166C                     l2564:
  8789  166C  17EC               	bsf	___fladd@grs,7
  8790  166D                     l2566:
  8791  166D  3001               	movlw	1
  8792  166E  00E1               	movwf	??___fladd
  8793  166F                     u3235:
  8794  166F  0D5C               	rlf	___fladd@b+3,w
  8795  1670  0CDC               	rrf	___fladd@b+3,f
  8796  1671  0CDB               	rrf	___fladd@b+2,f
  8797  1672  0CDA               	rrf	___fladd@b+1,f
  8798  1673  0CD9               	rrf	___fladd@b,f
  8799  1674  0BE1               	decfsz	??___fladd& (0+127),f
  8800  1675  2E6F               	goto	u3235
  8801  1676                     l2568:
  8802  1676  3001               	movlw	1
  8803  1677  00E1               	movwf	??___fladd
  8804  1678  0861               	movf	??___fladd,w
  8805  1679  07EB               	addwf	___fladd@bexp,f
  8806  167A                     l2570:
  8807  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8808  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8809  167C  086A               	movf	___fladd@aexp,w
  8810  167D  026B               	subwf	___fladd@bexp,w
  8811  167E  1C03               	skipc
  8812  167F  2E81               	goto	u3241
  8813  1680  2E82               	goto	u3240
  8814  1681                     u3241:
  8815  1681  2E59               	goto	l724
  8816  1682                     u3240:
  8817  1682                     l722:
  8818  1682  1B69               	btfsc	___fladd@signs,6
  8819  1683  2E85               	goto	u3251
  8820  1684  2E86               	goto	u3250
  8821  1685                     u3251:
  8822  1685  2ED1               	goto	l2596
  8823  1686                     u3250:
  8824  1686                     l2572:
  8825  1686  086B               	movf	___fladd@bexp,w
  8826  1687  1D03               	btfss	3,2
  8827  1688  2E8A               	goto	u3261
  8828  1689  2E8B               	goto	u3260
  8829  168A                     u3261:
  8830  168A  2E94               	goto	l2578
  8831  168B                     u3260:
  8832  168B                     l2574:
  8833  168B  3000               	movlw	0
  8834  168C  00DC               	movwf	?___fladd+3
  8835  168D  3000               	movlw	0
  8836  168E  00DB               	movwf	?___fladd+2
  8837  168F  3000               	movlw	0
  8838  1690  00DA               	movwf	?___fladd+1
  8839  1691  3000               	movlw	0
  8840  1692  00D9               	movwf	?___fladd
  8841  1693  2FFF               	goto	l731
  8842  1694                     l2578:
  8843  1694  085D               	movf	___fladd@a,w
  8844  1695  07D9               	addwf	___fladd@b,f
  8845  1696  085E               	movf	___fladd@a+1,w
  8846  1697  1103               	clrz
  8847  1698  1803               	skipnc
  8848  1699  3E01               	addlw	1
  8849  169A  1903               	skipnz
  8850  169B  2E9D               	goto	u3271
  8851  169C  07DA               	addwf	___fladd@b+1,f
  8852  169D                     u3271:
  8853  169D  085F               	movf	___fladd@a+2,w
  8854  169E  1103               	clrz
  8855  169F  1803               	skipnc
  8856  16A0  3E01               	addlw	1
  8857  16A1  1903               	skipnz
  8858  16A2  2EA4               	goto	u3272
  8859  16A3  07DB               	addwf	___fladd@b+2,f
  8860  16A4                     u3272:
  8861  16A4  0860               	movf	___fladd@a+3,w
  8862  16A5  1103               	clrz
  8863  16A6  1803               	skipnc
  8864  16A7  3E01               	addlw	1
  8865  16A8  1903               	skipnz
  8866  16A9  2EAB               	goto	u3273
  8867  16AA  07DC               	addwf	___fladd@b+3,f
  8868  16AB                     u3273:
  8869  16AB                     l2580:
  8870  16AB  1C5C               	btfss	___fladd@b+3,0
  8871  16AC  2EAE               	goto	u3281
  8872  16AD  2EAF               	goto	u3280
  8873  16AE                     u3281:
  8874  16AE  2F85               	goto	l2630
  8875  16AF                     u3280:
  8876  16AF                     l2582:
  8877  16AF  1C6C               	btfss	___fladd@grs,0
  8878  16B0  2EB2               	goto	u3291
  8879  16B1  2EB3               	goto	u3290
  8880  16B2                     u3291:
  8881  16B2  2EBC               	goto	l2586
  8882  16B3                     u3290:
  8883  16B3                     l2584:
  8884  16B3  086C               	movf	___fladd@grs,w
  8885  16B4  00E1               	movwf	??___fladd
  8886  16B5  1003               	clrc
  8887  16B6  0C61               	rrf	??___fladd,w
  8888  16B7  3801               	iorlw	1
  8889  16B8  00E2               	movwf	??___fladd+1
  8890  16B9  0862               	movf	??___fladd+1,w
  8891  16BA  00EC               	movwf	___fladd@grs
  8892  16BB  2EBE               	goto	l2588
  8893  16BC                     l2586:
  8894  16BC  1003               	clrc
  8895  16BD  0CEC               	rrf	___fladd@grs,f
  8896  16BE                     l2588:
  8897  16BE  1C59               	btfss	___fladd@b,0
  8898  16BF  2EC1               	goto	u3301
  8899  16C0  2EC2               	goto	u3300
  8900  16C1                     u3301:
  8901  16C1  2EC3               	goto	l2592
  8902  16C2                     u3300:
  8903  16C2                     l2590:
  8904  16C2  17EC               	bsf	___fladd@grs,7
  8905  16C3                     l2592:
  8906  16C3  3001               	movlw	1
  8907  16C4  00E1               	movwf	??___fladd
  8908  16C5                     u3315:
  8909  16C5  0D5C               	rlf	___fladd@b+3,w
  8910  16C6  0CDC               	rrf	___fladd@b+3,f
  8911  16C7  0CDB               	rrf	___fladd@b+2,f
  8912  16C8  0CDA               	rrf	___fladd@b+1,f
  8913  16C9  0CD9               	rrf	___fladd@b,f
  8914  16CA  0BE1               	decfsz	??___fladd& (0+127),f
  8915  16CB  2EC5               	goto	u3315
  8916  16CC                     l2594:
  8917  16CC  3001               	movlw	1
  8918  16CD  00E1               	movwf	??___fladd
  8919  16CE  0861               	movf	??___fladd,w
  8920  16CF  07EB               	addwf	___fladd@bexp,f
  8921  16D0  2F85               	goto	l2630
  8922  16D1                     l2596:
  8923  16D1  085C               	movf	___fladd@b+3,w
  8924  16D2  3A80               	xorlw	128
  8925  16D3  00FF               	movwf	btemp+1
  8926  16D4  0860               	movf	___fladd@a+3,w
  8927  16D5  3A80               	xorlw	128
  8928  16D6  027F               	subwf	btemp+1,w
  8929  16D7  1D03               	skipz
  8930  16D8  2EE3               	goto	u3323
  8931  16D9  085F               	movf	___fladd@a+2,w
  8932  16DA  025B               	subwf	___fladd@b+2,w
  8933  16DB  1D03               	skipz
  8934  16DC  2EE3               	goto	u3323
  8935  16DD  085E               	movf	___fladd@a+1,w
  8936  16DE  025A               	subwf	___fladd@b+1,w
  8937  16DF  1D03               	skipz
  8938  16E0  2EE3               	goto	u3323
  8939  16E1  085D               	movf	___fladd@a,w
  8940  16E2  0259               	subwf	___fladd@b,w
  8941  16E3                     u3323:
  8942  16E3  1803               	skipnc
  8943  16E4  2EE6               	goto	u3321
  8944  16E5  2EE7               	goto	u3320
  8945  16E6                     u3321:
  8946  16E6  2F3F               	goto	l2606
  8947  16E7                     u3320:
  8948  16E7                     l2598:
  8949  16E7  30FF               	movlw	255
  8950  16E8  00E1               	movwf	??___fladd
  8951  16E9  30FF               	movlw	255
  8952  16EA  00E2               	movwf	??___fladd+1
  8953  16EB  30FF               	movlw	255
  8954  16EC  00E3               	movwf	??___fladd+2
  8955  16ED  30FF               	movlw	255
  8956  16EE  00E4               	movwf	??___fladd+3
  8957  16EF  085D               	movf	___fladd@a,w
  8958  16F0  00E5               	movwf	??___fladd+4
  8959  16F1  085E               	movf	___fladd@a+1,w
  8960  16F2  00E6               	movwf	??___fladd+5
  8961  16F3  085F               	movf	___fladd@a+2,w
  8962  16F4  00E7               	movwf	??___fladd+6
  8963  16F5  0860               	movf	___fladd@a+3,w
  8964  16F6  00E8               	movwf	??___fladd+7
  8965  16F7  0859               	movf	___fladd@b,w
  8966  16F8  02E5               	subwf	??___fladd+4,f
  8967  16F9  085A               	movf	___fladd@b+1,w
  8968  16FA  1C03               	skipc
  8969  16FB  0F5A               	incfsz	___fladd@b+1,w
  8970  16FC  2EFE               	goto	u3331
  8971  16FD  2EFF               	goto	u3332
  8972  16FE                     u3331:
  8973  16FE  02E6               	subwf	??___fladd+5,f
  8974  16FF                     u3332:
  8975  16FF  085B               	movf	___fladd@b+2,w
  8976  1700  1C03               	skipc
  8977  1701  0F5B               	incfsz	___fladd@b+2,w
  8978  1702  2F04               	goto	u3333
  8979  1703  2F05               	goto	u3334
  8980  1704                     u3333:
  8981  1704  02E7               	subwf	??___fladd+6,f
  8982  1705                     u3334:
  8983  1705  085C               	movf	___fladd@b+3,w
  8984  1706  1C03               	skipc
  8985  1707  0F5C               	incfsz	___fladd@b+3,w
  8986  1708  2F0A               	goto	u3335
  8987  1709  2F0B               	goto	u3336
  8988  170A                     u3335:
  8989  170A  02E8               	subwf	??___fladd+7,f
  8990  170B                     u3336:
  8991  170B  0865               	movf	??___fladd+4,w
  8992  170C  07E1               	addwf	??___fladd,f
  8993  170D  0866               	movf	??___fladd+5,w
  8994  170E  1803               	skipnc
  8995  170F  0F66               	incfsz	??___fladd+5,w
  8996  1710  2F12               	goto	u3340
  8997  1711  2F13               	goto	u3341
  8998  1712                     u3340:
  8999  1712  07E2               	addwf	??___fladd+1,f
  9000  1713                     u3341:
  9001  1713  0867               	movf	??___fladd+6,w
  9002  1714  1803               	skipnc
  9003  1715  0F67               	incfsz	??___fladd+6,w
  9004  1716  2F18               	goto	u3342
  9005  1717  2F19               	goto	u3343
  9006  1718                     u3342:
  9007  1718  07E3               	addwf	??___fladd+2,f
  9008  1719                     u3343:
  9009  1719  0868               	movf	??___fladd+7,w
  9010  171A  1803               	skipnc
  9011  171B  0A68               	incf	??___fladd+7,w
  9012  171C  07E4               	addwf	??___fladd+3,f
  9013  171D  0864               	movf	??___fladd+3,w
  9014  171E  00DC               	movwf	___fladd@b+3
  9015  171F  0863               	movf	??___fladd+2,w
  9016  1720  00DB               	movwf	___fladd@b+2
  9017  1721  0862               	movf	??___fladd+1,w
  9018  1722  00DA               	movwf	___fladd@b+1
  9019  1723  0861               	movf	??___fladd,w
  9020  1724  00D9               	movwf	___fladd@b
  9021  1725                     l2600:
  9022  1725  3080               	movlw	128
  9023  1726  00E1               	movwf	??___fladd
  9024  1727  0861               	movf	??___fladd,w
  9025  1728  06E9               	xorwf	___fladd@signs,f
  9026  1729  09EC               	comf	___fladd@grs,f
  9027  172A  0AEC               	incf	___fladd@grs,f
  9028  172B                     l2602:
  9029  172B  086C               	movf	___fladd@grs,w
  9030  172C  1D03               	btfss	3,2
  9031  172D  2F2F               	goto	u3351
  9032  172E  2F30               	goto	u3350
  9033  172F                     u3351:
  9034  172F  2F4D               	goto	l739
  9035  1730                     u3350:
  9036  1730                     l2604:
  9037  1730  3001               	movlw	1
  9038  1731  07D9               	addwf	___fladd@b,f
  9039  1732  3000               	movlw	0
  9040  1733  1803               	skipnc
  9041  1734  3001               	movlw	1
  9042  1735  07DA               	addwf	___fladd@b+1,f
  9043  1736  3000               	movlw	0
  9044  1737  1803               	skipnc
  9045  1738  3001               	movlw	1
  9046  1739  07DB               	addwf	___fladd@b+2,f
  9047  173A  3000               	movlw	0
  9048  173B  1803               	skipnc
  9049  173C  3001               	movlw	1
  9050  173D  07DC               	addwf	___fladd@b+3,f
  9051  173E  2F4D               	goto	l739
  9052  173F                     l2606:
  9053  173F  085D               	movf	___fladd@a,w
  9054  1740  02D9               	subwf	___fladd@b,f
  9055  1741  085E               	movf	___fladd@a+1,w
  9056  1742  1C03               	skipc
  9057  1743  0F5E               	incfsz	___fladd@a+1,w
  9058  1744  02DA               	subwf	___fladd@b+1,f
  9059  1745  085F               	movf	___fladd@a+2,w
  9060  1746  1C03               	skipc
  9061  1747  0F5F               	incfsz	___fladd@a+2,w
  9062  1748  02DB               	subwf	___fladd@b+2,f
  9063  1749  0860               	movf	___fladd@a+3,w
  9064  174A  1C03               	skipc
  9065  174B  0F60               	incfsz	___fladd@a+3,w
  9066  174C  02DC               	subwf	___fladd@b+3,f
  9067  174D                     l739:
  9068  174D  085C               	movf	___fladd@b+3,w
  9069  174E  045B               	iorwf	___fladd@b+2,w
  9070  174F  045A               	iorwf	___fladd@b+1,w
  9071  1750  0459               	iorwf	___fladd@b,w
  9072  1751  1D03               	skipz
  9073  1752  2F54               	goto	u3361
  9074  1753  2F55               	goto	u3360
  9075  1754                     u3361:
  9076  1754  2F81               	goto	l2628
  9077  1755                     u3360:
  9078  1755                     l2608:
  9079  1755  086C               	movf	___fladd@grs,w
  9080  1756  1D03               	btfss	3,2
  9081  1757  2F59               	goto	u3371
  9082  1758  2F5A               	goto	u3370
  9083  1759                     u3371:
  9084  1759  2F81               	goto	l2628
  9085  175A                     u3370:
  9086  175A                     l2610:
  9087  175A  3000               	movlw	0
  9088  175B  00DC               	movwf	?___fladd+3
  9089  175C  3000               	movlw	0
  9090  175D  00DB               	movwf	?___fladd+2
  9091  175E  3000               	movlw	0
  9092  175F  00DA               	movwf	?___fladd+1
  9093  1760  3000               	movlw	0
  9094  1761  00D9               	movwf	?___fladd
  9095  1762  2FFF               	goto	l731
  9096  1763                     l2614:
  9097  1763  3001               	movlw	1
  9098  1764  00E1               	movwf	??___fladd
  9099  1765                     u3385:
  9100  1765  1003               	clrc
  9101  1766  0DD9               	rlf	___fladd@b,f
  9102  1767  0DDA               	rlf	___fladd@b+1,f
  9103  1768  0DDB               	rlf	___fladd@b+2,f
  9104  1769  0DDC               	rlf	___fladd@b+3,f
  9105  176A  0BE1               	decfsz	??___fladd,f
  9106  176B  2F65               	goto	u3385
  9107  176C                     l2616:
  9108  176C  1FEC               	btfss	___fladd@grs,7
  9109  176D  2F6F               	goto	u3391
  9110  176E  2F70               	goto	u3390
  9111  176F                     u3391:
  9112  176F  2F71               	goto	l743
  9113  1770                     u3390:
  9114  1770                     l2618:
  9115  1770  1459               	bsf	___fladd@b,0
  9116  1771                     l743:
  9117  1771  1C6C               	btfss	___fladd@grs,0
  9118  1772  2F74               	goto	u3401
  9119  1773  2F75               	goto	u3400
  9120  1774                     u3401:
  9121  1774  2F78               	goto	l2622
  9122  1775                     u3400:
  9123  1775                     l2620:
  9124  1775  1403               	setc
  9125  1776  0DEC               	rlf	___fladd@grs,f
  9126  1777  2F7A               	goto	l2624
  9127  1778                     l2622:
  9128  1778  1003               	clrc
  9129  1779  0DEC               	rlf	___fladd@grs,f
  9130  177A                     l2624:
  9131  177A  086B               	movf	___fladd@bexp,w
  9132  177B  1903               	btfsc	3,2
  9133  177C  2F7E               	goto	u3411
  9134  177D  2F7F               	goto	u3410
  9135  177E                     u3411:
  9136  177E  2F81               	goto	l2628
  9137  177F                     u3410:
  9138  177F                     l2626:
  9139  177F  3001               	movlw	1
  9140  1780  02EB               	subwf	___fladd@bexp,f
  9141  1781                     l2628:
  9142  1781  1FDB               	btfss	___fladd@b+2,7
  9143  1782  2F84               	goto	u3421
  9144  1783  2F85               	goto	u3420
  9145  1784                     u3421:
  9146  1784  2F63               	goto	l2614
  9147  1785                     u3420:
  9148  1785                     l2630:
  9149  1785  01EA               	clrf	___fladd@aexp
  9150  1786                     l2632:
  9151  1786  1FEC               	btfss	___fladd@grs,7
  9152  1787  2F89               	goto	u3431
  9153  1788  2F8A               	goto	u3430
  9154  1789                     u3431:
  9155  1789  2F98               	goto	l2640
  9156  178A                     u3430:
  9157  178A                     l2634:
  9158  178A  086C               	movf	___fladd@grs,w
  9159  178B  397F               	andlw	127
  9160  178C  1903               	btfsc	3,2
  9161  178D  2F8F               	goto	u3441
  9162  178E  2F90               	goto	u3440
  9163  178F                     u3441:
  9164  178F  2F93               	goto	l749
  9165  1790                     u3440:
  9166  1790                     l2636:
  9167  1790  01EA               	clrf	___fladd@aexp
  9168  1791  0AEA               	incf	___fladd@aexp,f
  9169  1792  2F98               	goto	l2640
  9170  1793                     l749:
  9171  1793  1C59               	btfss	___fladd@b,0
  9172  1794  2F96               	goto	u3451
  9173  1795  2F97               	goto	u3450
  9174  1796                     u3451:
  9175  1796  2F98               	goto	l2640
  9176  1797                     u3450:
  9177  1797  2F90               	goto	l2636
  9178  1798                     l2640:
  9179  1798  086A               	movf	___fladd@aexp,w
  9180  1799  1903               	btfsc	3,2
  9181  179A  2F9C               	goto	u3461
  9182  179B  2F9D               	goto	u3460
  9183  179C                     u3461:
  9184  179C  2FD1               	goto	l752
  9185  179D                     u3460:
  9186  179D                     l2642:
  9187  179D  3001               	movlw	1
  9188  179E  07D9               	addwf	___fladd@b,f
  9189  179F  3000               	movlw	0
  9190  17A0  1803               	skipnc
  9191  17A1  3001               	movlw	1
  9192  17A2  07DA               	addwf	___fladd@b+1,f
  9193  17A3  3000               	movlw	0
  9194  17A4  1803               	skipnc
  9195  17A5  3001               	movlw	1
  9196  17A6  07DB               	addwf	___fladd@b+2,f
  9197  17A7  3000               	movlw	0
  9198  17A8  1803               	skipnc
  9199  17A9  3001               	movlw	1
  9200  17AA  07DC               	addwf	___fladd@b+3,f
  9201  17AB                     l2644:
  9202  17AB  1C5C               	btfss	___fladd@b+3,0
  9203  17AC  2FAE               	goto	u3471
  9204  17AD  2FAF               	goto	u3470
  9205  17AE                     u3471:
  9206  17AE  2FD1               	goto	l752
  9207  17AF                     u3470:
  9208  17AF                     l2646:
  9209  17AF  0859               	movf	___fladd@b,w
  9210  17B0  00E1               	movwf	??___fladd
  9211  17B1  085A               	movf	___fladd@b+1,w
  9212  17B2  00E2               	movwf	??___fladd+1
  9213  17B3  085B               	movf	___fladd@b+2,w
  9214  17B4  00E3               	movwf	??___fladd+2
  9215  17B5  085C               	movf	___fladd@b+3,w
  9216  17B6  00E4               	movwf	??___fladd+3
  9217  17B7  3001               	movlw	1
  9218  17B8  00E5               	movwf	??___fladd+4
  9219  17B9                     u3485:
  9220  17B9  0D64               	rlf	??___fladd+3,w
  9221  17BA  0CE4               	rrf	??___fladd+3,f
  9222  17BB  0CE3               	rrf	??___fladd+2,f
  9223  17BC  0CE2               	rrf	??___fladd+1,f
  9224  17BD  0CE1               	rrf	??___fladd,f
  9225  17BE                     u3480:
  9226  17BE  0BE5               	decfsz	??___fladd+4,f
  9227  17BF  2FB9               	goto	u3485
  9228  17C0  0864               	movf	??___fladd+3,w
  9229  17C1  00DC               	movwf	___fladd@b+3
  9230  17C2  0863               	movf	??___fladd+2,w
  9231  17C3  00DB               	movwf	___fladd@b+2
  9232  17C4  0862               	movf	??___fladd+1,w
  9233  17C5  00DA               	movwf	___fladd@b+1
  9234  17C6  0861               	movf	??___fladd,w
  9235  17C7  00D9               	movwf	___fladd@b
  9236  17C8  0A6B               	incf	___fladd@bexp,w
  9237  17C9  1903               	btfsc	3,2
  9238  17CA  2FCC               	goto	u3491
  9239  17CB  2FCD               	goto	u3490
  9240  17CC                     u3491:
  9241  17CC  2FD1               	goto	l752
  9242  17CD                     u3490:
  9243  17CD                     l2648:
  9244  17CD  3001               	movlw	1
  9245  17CE  00E1               	movwf	??___fladd
  9246  17CF  0861               	movf	??___fladd,w
  9247  17D0  07EB               	addwf	___fladd@bexp,f
  9248  17D1                     l752:
  9249  17D1  0A6B               	incf	___fladd@bexp,w
  9250  17D2  1903               	btfsc	3,2
  9251  17D3  2FD5               	goto	u3501
  9252  17D4  2FD6               	goto	u3500
  9253  17D5                     u3501:
  9254  17D5  2FDB               	goto	l2652
  9255  17D6                     u3500:
  9256  17D6                     l2650:
  9257  17D6  086B               	movf	___fladd@bexp,w
  9258  17D7  1D03               	btfss	3,2
  9259  17D8  2FDA               	goto	u3511
  9260  17D9  2FDB               	goto	u3510
  9261  17DA                     u3511:
  9262  17DA  2FE9               	goto	l2658
  9263  17DB                     u3510:
  9264  17DB                     l2652:
  9265  17DB  3000               	movlw	0
  9266  17DC  00DC               	movwf	___fladd@b+3
  9267  17DD  3000               	movlw	0
  9268  17DE  00DB               	movwf	___fladd@b+2
  9269  17DF  3000               	movlw	0
  9270  17E0  00DA               	movwf	___fladd@b+1
  9271  17E1  3000               	movlw	0
  9272  17E2  00D9               	movwf	___fladd@b
  9273  17E3                     l2654:
  9274  17E3  086B               	movf	___fladd@bexp,w
  9275  17E4  1D03               	btfss	3,2
  9276  17E5  2FE7               	goto	u3521
  9277  17E6  2FE8               	goto	u3520
  9278  17E7                     u3521:
  9279  17E7  2FE9               	goto	l2658
  9280  17E8                     u3520:
  9281  17E8                     l2656:
  9282  17E8  01E9               	clrf	___fladd@signs
  9283  17E9                     l2658:
  9284  17E9  1C6B               	btfss	___fladd@bexp,0
  9285  17EA  2FEC               	goto	u3531
  9286  17EB  2FED               	goto	u3530
  9287  17EC                     u3531:
  9288  17EC  2FEF               	goto	l2662
  9289  17ED                     u3530:
  9290  17ED                     l2660:
  9291  17ED  17DB               	bsf	___fladd@b+2,7
  9292  17EE  2FF3               	goto	l760
  9293  17EF                     l2662:
  9294  17EF  307F               	movlw	127
  9295  17F0  00E1               	movwf	??___fladd
  9296  17F1  0861               	movf	??___fladd,w
  9297  17F2  05DB               	andwf	___fladd@b+2,f
  9298  17F3                     l760:
  9299  17F3  086B               	movf	___fladd@bexp,w
  9300  17F4  00E1               	movwf	??___fladd
  9301  17F5  1003               	clrc
  9302  17F6  0C61               	rrf	??___fladd,w
  9303  17F7  00E2               	movwf	??___fladd+1
  9304  17F8  0862               	movf	??___fladd+1,w
  9305  17F9  00DC               	movwf	___fladd@b+3
  9306  17FA                     l2664:
  9307  17FA  1FE9               	btfss	___fladd@signs,7
  9308  17FB  2FFD               	goto	u3541
  9309  17FC  2FFE               	goto	u3540
  9310  17FD                     u3541:
  9311  17FD  2FFF               	goto	l761
  9312  17FE                     u3540:
  9313  17FE                     l2666:
  9314  17FE  17DC               	bsf	___fladd@b+3,7
  9315  17FF                     l761:
  9316  17FF                     l731:
  9317  17FF  0008               	return
  9318  1800                     __end_of___fladd:
  9319                           
  9320                           	psect	text20
  9321  07F5                     __ptext20:	
  9322 ;; *************** function ___flneg *****************
  9323 ;; Defined at:
  9324 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\flneg.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  f1              4    3[COMMON] unsigned char 
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;		None
  9329 ;; Return value:  Size  Location     Type
  9330 ;;                  4    3[COMMON] unsigned char 
  9331 ;; Registers used:
  9332 ;;		wreg
  9333 ;; Tracked objects:
  9334 ;;		On entry : 0/0
  9335 ;;		On exit  : 0/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9338 ;;      Params:         4       0       0       0       0
  9339 ;;      Locals:         0       0       0       0       0
  9340 ;;      Temps:          0       0       0       0       0
  9341 ;;      Totals:         4       0       0       0       0
  9342 ;;Total ram usage:        4 bytes
  9343 ;; Hardware stack levels used: 1
  9344 ;; Hardware stack levels required when called: 2
  9345 ;; This function calls:
  9346 ;;		Nothing
  9347 ;; This function is called by:
  9348 ;;		_sprintf
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352  07F5                     ___flneg:	
  9353                           ;psect for function ___flneg
  9354                           
  9355  07F5                     l3152:	
  9356                           ;incstack = 0
  9357                           ; Regs used in ___flneg: [wreg]
  9358                           
  9359  07F5  0876               	movf	___flneg@f1+3,w
  9360  07F6  0475               	iorwf	___flneg@f1+2,w
  9361  07F7  0474               	iorwf	___flneg@f1+1,w
  9362  07F8  0473               	iorwf	___flneg@f1,w
  9363  07F9  1903               	skipnz
  9364  07FA  2FFC               	goto	u4671
  9365  07FB  2FFD               	goto	u4670
  9366  07FC                     u4671:
  9367  07FC  2FFF               	goto	l3156
  9368  07FD                     u4670:
  9369  07FD                     l3154:
  9370  07FD  3080               	movlw	128
  9371  07FE  06F6               	xorwf	___flneg@f1+3,f
  9372  07FF                     l3156:
  9373  07FF                     l590:
  9374  07FF  0008               	return
  9375  0800                     __end_of___flneg:
  9376                           
  9377                           	psect	text21
  9378  1F5C                     __ptext21:	
  9379 ;; *************** function ___flge *****************
  9380 ;; Defined at:
  9381 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\flge.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;  ff1             4    0[BANK0 ] unsigned char 
  9384 ;;  ff2             4    4[BANK0 ] unsigned char 
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;		None
  9387 ;; Return value:  Size  Location     Type
  9388 ;;		None               void
  9389 ;; Registers used:
  9390 ;;		wreg, status,2, status,0
  9391 ;; Tracked objects:
  9392 ;;		On entry : 0/0
  9393 ;;		On exit  : 0/0
  9394 ;;		Unchanged: 0/0
  9395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9396 ;;      Params:         0       8       0       0       0
  9397 ;;      Locals:         0       0       0       0       0
  9398 ;;      Temps:          4       0       0       0       0
  9399 ;;      Totals:         4       8       0       0       0
  9400 ;;Total ram usage:       12 bytes
  9401 ;; Hardware stack levels used: 1
  9402 ;; Hardware stack levels required when called: 2
  9403 ;; This function calls:
  9404 ;;		Nothing
  9405 ;; This function is called by:
  9406 ;;		_sprintf
  9407 ;; This function uses a non-reentrant model
  9408 ;;
  9409                           
  9410  1F5C                     ___flge:	
  9411                           ;psect for function ___flge
  9412                           
  9413  1F5C                     l4082:	
  9414                           ;incstack = 0
  9415                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9416                           
  9417  1F5C  3000               	movlw	0
  9418  1F5D  1283               	bcf	3,5	;RP0=0, select bank0
  9419  1F5E  1303               	bcf	3,6	;RP1=0, select bank0
  9420  1F5F  0520               	andwf	___flge@ff1,w
  9421  1F60  00F3               	movwf	??___flge
  9422  1F61  3000               	movlw	0
  9423  1F62  0521               	andwf	___flge@ff1+1,w
  9424  1F63  00F4               	movwf	??___flge+1
  9425  1F64  3080               	movlw	128
  9426  1F65  0522               	andwf	___flge@ff1+2,w
  9427  1F66  00F5               	movwf	??___flge+2
  9428  1F67  307F               	movlw	127
  9429  1F68  0523               	andwf	___flge@ff1+3,w
  9430  1F69  00F6               	movwf	??___flge+3
  9431  1F6A  0876               	movf	??___flge+3,w
  9432  1F6B  0475               	iorwf	??___flge+2,w
  9433  1F6C  0474               	iorwf	??___flge+1,w
  9434  1F6D  0473               	iorwf	??___flge,w
  9435  1F6E  1D03               	skipz
  9436  1F6F  2F71               	goto	u6461
  9437  1F70  2F72               	goto	u6460
  9438  1F71                     u6461:
  9439  1F71  2F7A               	goto	l582
  9440  1F72                     u6460:
  9441  1F72                     l4084:
  9442  1F72  3000               	movlw	0
  9443  1F73  00A3               	movwf	___flge@ff1+3
  9444  1F74  3000               	movlw	0
  9445  1F75  00A2               	movwf	___flge@ff1+2
  9446  1F76  3000               	movlw	0
  9447  1F77  00A1               	movwf	___flge@ff1+1
  9448  1F78  3000               	movlw	0
  9449  1F79  00A0               	movwf	___flge@ff1
  9450  1F7A                     l582:
  9451  1F7A  3000               	movlw	0
  9452  1F7B  0524               	andwf	___flge@ff2,w
  9453  1F7C  00F3               	movwf	??___flge
  9454  1F7D  3000               	movlw	0
  9455  1F7E  0525               	andwf	___flge@ff2+1,w
  9456  1F7F  00F4               	movwf	??___flge+1
  9457  1F80  3080               	movlw	128
  9458  1F81  0526               	andwf	___flge@ff2+2,w
  9459  1F82  00F5               	movwf	??___flge+2
  9460  1F83  307F               	movlw	127
  9461  1F84  0527               	andwf	___flge@ff2+3,w
  9462  1F85  00F6               	movwf	??___flge+3
  9463  1F86  0876               	movf	??___flge+3,w
  9464  1F87  0475               	iorwf	??___flge+2,w
  9465  1F88  0474               	iorwf	??___flge+1,w
  9466  1F89  0473               	iorwf	??___flge,w
  9467  1F8A  1D03               	skipz
  9468  1F8B  2F8D               	goto	u6471
  9469  1F8C  2F8E               	goto	u6470
  9470  1F8D                     u6471:
  9471  1F8D  2F96               	goto	l4088
  9472  1F8E                     u6470:
  9473  1F8E                     l4086:
  9474  1F8E  3000               	movlw	0
  9475  1F8F  00A7               	movwf	___flge@ff2+3
  9476  1F90  3000               	movlw	0
  9477  1F91  00A6               	movwf	___flge@ff2+2
  9478  1F92  3000               	movlw	0
  9479  1F93  00A5               	movwf	___flge@ff2+1
  9480  1F94  3000               	movlw	0
  9481  1F95  00A4               	movwf	___flge@ff2
  9482  1F96                     l4088:
  9483  1F96  1FA3               	btfss	___flge@ff1+3,7
  9484  1F97  2F99               	goto	u6481
  9485  1F98  2F9A               	goto	u6480
  9486  1F99                     u6481:
  9487  1F99  2FBE               	goto	l4092
  9488  1F9A                     u6480:
  9489  1F9A                     l4090:
  9490  1F9A  3000               	movlw	0
  9491  1F9B  00F3               	movwf	??___flge
  9492  1F9C  3000               	movlw	0
  9493  1F9D  00F4               	movwf	??___flge+1
  9494  1F9E  3000               	movlw	0
  9495  1F9F  00F5               	movwf	??___flge+2
  9496  1FA0  3080               	movlw	128
  9497  1FA1  00F6               	movwf	??___flge+3
  9498  1FA2  0820               	movf	___flge@ff1,w
  9499  1FA3  02F3               	subwf	??___flge,f
  9500  1FA4  0821               	movf	___flge@ff1+1,w
  9501  1FA5  1C03               	skipc
  9502  1FA6  0F21               	incfsz	___flge@ff1+1,w
  9503  1FA7  2FA9               	goto	u6491
  9504  1FA8  2FAA               	goto	u6492
  9505  1FA9                     u6491:
  9506  1FA9  02F4               	subwf	??___flge+1,f
  9507  1FAA                     u6492:
  9508  1FAA  0822               	movf	___flge@ff1+2,w
  9509  1FAB  1C03               	skipc
  9510  1FAC  0F22               	incfsz	___flge@ff1+2,w
  9511  1FAD  2FAF               	goto	u6493
  9512  1FAE  2FB0               	goto	u6494
  9513  1FAF                     u6493:
  9514  1FAF  02F5               	subwf	??___flge+2,f
  9515  1FB0                     u6494:
  9516  1FB0  0823               	movf	___flge@ff1+3,w
  9517  1FB1  1C03               	skipc
  9518  1FB2  0F23               	incfsz	___flge@ff1+3,w
  9519  1FB3  2FB5               	goto	u6495
  9520  1FB4  2FB6               	goto	u6496
  9521  1FB5                     u6495:
  9522  1FB5  02F6               	subwf	??___flge+3,f
  9523  1FB6                     u6496:
  9524  1FB6  0876               	movf	??___flge+3,w
  9525  1FB7  00A3               	movwf	___flge@ff1+3
  9526  1FB8  0875               	movf	??___flge+2,w
  9527  1FB9  00A2               	movwf	___flge@ff1+2
  9528  1FBA  0874               	movf	??___flge+1,w
  9529  1FBB  00A1               	movwf	___flge@ff1+1
  9530  1FBC  0873               	movf	??___flge,w
  9531  1FBD  00A0               	movwf	___flge@ff1
  9532  1FBE                     l4092:
  9533  1FBE  1FA7               	btfss	___flge@ff2+3,7
  9534  1FBF  2FC1               	goto	u6501
  9535  1FC0  2FC2               	goto	u6500
  9536  1FC1                     u6501:
  9537  1FC1  2FE6               	goto	l585
  9538  1FC2                     u6500:
  9539  1FC2                     l4094:
  9540  1FC2  3000               	movlw	0
  9541  1FC3  00F3               	movwf	??___flge
  9542  1FC4  3000               	movlw	0
  9543  1FC5  00F4               	movwf	??___flge+1
  9544  1FC6  3000               	movlw	0
  9545  1FC7  00F5               	movwf	??___flge+2
  9546  1FC8  3080               	movlw	128
  9547  1FC9  00F6               	movwf	??___flge+3
  9548  1FCA  0824               	movf	___flge@ff2,w
  9549  1FCB  02F3               	subwf	??___flge,f
  9550  1FCC  0825               	movf	___flge@ff2+1,w
  9551  1FCD  1C03               	skipc
  9552  1FCE  0F25               	incfsz	___flge@ff2+1,w
  9553  1FCF  2FD1               	goto	u6511
  9554  1FD0  2FD2               	goto	u6512
  9555  1FD1                     u6511:
  9556  1FD1  02F4               	subwf	??___flge+1,f
  9557  1FD2                     u6512:
  9558  1FD2  0826               	movf	___flge@ff2+2,w
  9559  1FD3  1C03               	skipc
  9560  1FD4  0F26               	incfsz	___flge@ff2+2,w
  9561  1FD5  2FD7               	goto	u6513
  9562  1FD6  2FD8               	goto	u6514
  9563  1FD7                     u6513:
  9564  1FD7  02F5               	subwf	??___flge+2,f
  9565  1FD8                     u6514:
  9566  1FD8  0827               	movf	___flge@ff2+3,w
  9567  1FD9  1C03               	skipc
  9568  1FDA  0F27               	incfsz	___flge@ff2+3,w
  9569  1FDB  2FDD               	goto	u6515
  9570  1FDC  2FDE               	goto	u6516
  9571  1FDD                     u6515:
  9572  1FDD  02F6               	subwf	??___flge+3,f
  9573  1FDE                     u6516:
  9574  1FDE  0876               	movf	??___flge+3,w
  9575  1FDF  00A7               	movwf	___flge@ff2+3
  9576  1FE0  0875               	movf	??___flge+2,w
  9577  1FE1  00A6               	movwf	___flge@ff2+2
  9578  1FE2  0874               	movf	??___flge+1,w
  9579  1FE3  00A5               	movwf	___flge@ff2+1
  9580  1FE4  0873               	movf	??___flge,w
  9581  1FE5  00A4               	movwf	___flge@ff2
  9582  1FE6                     l585:
  9583  1FE6  3080               	movlw	128
  9584  1FE7  06A3               	xorwf	___flge@ff1+3,f
  9585  1FE8  3080               	movlw	128
  9586  1FE9  06A7               	xorwf	___flge@ff2+3,f
  9587  1FEA  0827               	movf	___flge@ff2+3,w
  9588  1FEB  0223               	subwf	___flge@ff1+3,w
  9589  1FEC  1D03               	skipz
  9590  1FED  2FF8               	goto	u6525
  9591  1FEE  0826               	movf	___flge@ff2+2,w
  9592  1FEF  0222               	subwf	___flge@ff1+2,w
  9593  1FF0  1D03               	skipz
  9594  1FF1  2FF8               	goto	u6525
  9595  1FF2  0825               	movf	___flge@ff2+1,w
  9596  1FF3  0221               	subwf	___flge@ff1+1,w
  9597  1FF4  1D03               	skipz
  9598  1FF5  2FF8               	goto	u6525
  9599  1FF6  0824               	movf	___flge@ff2,w
  9600  1FF7  0220               	subwf	___flge@ff1,w
  9601  1FF8                     u6525:
  9602  1FF8  1803               	skipnc
  9603  1FF9  2FFB               	goto	u6521
  9604  1FFA  2FFC               	goto	u6520
  9605  1FFB                     u6521:
  9606  1FFB  2FFE               	goto	l4098
  9607  1FFC                     u6520:
  9608  1FFC                     l4096:
  9609  1FFC  1003               	clrc
  9610  1FFD  2FFF               	goto	l586
  9611  1FFE                     l4098:
  9612  1FFE  1403               	setc
  9613  1FFF                     l586:
  9614  1FFF  0008               	return
  9615  2000                     __end_of___flge:
  9616                           
  9617                           	psect	text22
  9618  1CEE                     __ptext22:	
  9619 ;; *************** function ___fleq *****************
  9620 ;; Defined at:
  9621 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fleq.c"
  9622 ;; Parameters:    Size  Location     Type
  9623 ;;  ff1             4    0[BANK0 ] unsigned char 
  9624 ;;  ff2             4    4[BANK0 ] unsigned char 
  9625 ;; Auto vars:     Size  Location     Type
  9626 ;;		None
  9627 ;; Return value:  Size  Location     Type
  9628 ;;		None               void
  9629 ;; Registers used:
  9630 ;;		wreg, status,2, status,0
  9631 ;; Tracked objects:
  9632 ;;		On entry : 0/0
  9633 ;;		On exit  : 0/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9636 ;;      Params:         0       8       0       0       0
  9637 ;;      Locals:         0       0       0       0       0
  9638 ;;      Temps:          4       0       0       0       0
  9639 ;;      Totals:         4       8       0       0       0
  9640 ;;Total ram usage:       12 bytes
  9641 ;; Hardware stack levels used: 1
  9642 ;; Hardware stack levels required when called: 2
  9643 ;; This function calls:
  9644 ;;		Nothing
  9645 ;; This function is called by:
  9646 ;;		_sprintf
  9647 ;; This function uses a non-reentrant model
  9648 ;;
  9649                           
  9650  1CEE                     ___fleq:	
  9651                           ;psect for function ___fleq
  9652                           
  9653  1CEE                     l4070:	
  9654                           ;incstack = 0
  9655                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9656                           
  9657  1CEE  3000               	movlw	0
  9658  1CEF  1283               	bcf	3,5	;RP0=0, select bank0
  9659  1CF0  1303               	bcf	3,6	;RP1=0, select bank0
  9660  1CF1  0520               	andwf	___fleq@ff1,w
  9661  1CF2  00F3               	movwf	??___fleq
  9662  1CF3  3000               	movlw	0
  9663  1CF4  0521               	andwf	___fleq@ff1+1,w
  9664  1CF5  00F4               	movwf	??___fleq+1
  9665  1CF6  3080               	movlw	128
  9666  1CF7  0522               	andwf	___fleq@ff1+2,w
  9667  1CF8  00F5               	movwf	??___fleq+2
  9668  1CF9  307F               	movlw	127
  9669  1CFA  0523               	andwf	___fleq@ff1+3,w
  9670  1CFB  00F6               	movwf	??___fleq+3
  9671  1CFC  0876               	movf	??___fleq+3,w
  9672  1CFD  0475               	iorwf	??___fleq+2,w
  9673  1CFE  0474               	iorwf	??___fleq+1,w
  9674  1CFF  0473               	iorwf	??___fleq,w
  9675  1D00  1D03               	skipz
  9676  1D01  2D03               	goto	u6431
  9677  1D02  2D04               	goto	u6430
  9678  1D03                     u6431:
  9679  1D03  2D0C               	goto	l577
  9680  1D04                     u6430:
  9681  1D04                     l4072:
  9682  1D04  3000               	movlw	0
  9683  1D05  00A3               	movwf	___fleq@ff1+3
  9684  1D06  3000               	movlw	0
  9685  1D07  00A2               	movwf	___fleq@ff1+2
  9686  1D08  3000               	movlw	0
  9687  1D09  00A1               	movwf	___fleq@ff1+1
  9688  1D0A  3000               	movlw	0
  9689  1D0B  00A0               	movwf	___fleq@ff1
  9690  1D0C                     l577:
  9691  1D0C  3000               	movlw	0
  9692  1D0D  0524               	andwf	___fleq@ff2,w
  9693  1D0E  00F3               	movwf	??___fleq
  9694  1D0F  3000               	movlw	0
  9695  1D10  0525               	andwf	___fleq@ff2+1,w
  9696  1D11  00F4               	movwf	??___fleq+1
  9697  1D12  3080               	movlw	128
  9698  1D13  0526               	andwf	___fleq@ff2+2,w
  9699  1D14  00F5               	movwf	??___fleq+2
  9700  1D15  307F               	movlw	127
  9701  1D16  0527               	andwf	___fleq@ff2+3,w
  9702  1D17  00F6               	movwf	??___fleq+3
  9703  1D18  0876               	movf	??___fleq+3,w
  9704  1D19  0475               	iorwf	??___fleq+2,w
  9705  1D1A  0474               	iorwf	??___fleq+1,w
  9706  1D1B  0473               	iorwf	??___fleq,w
  9707  1D1C  1D03               	skipz
  9708  1D1D  2D1F               	goto	u6441
  9709  1D1E  2D20               	goto	u6440
  9710  1D1F                     u6441:
  9711  1D1F  2D28               	goto	l578
  9712  1D20                     u6440:
  9713  1D20                     l4074:
  9714  1D20  3000               	movlw	0
  9715  1D21  00A7               	movwf	___fleq@ff2+3
  9716  1D22  3000               	movlw	0
  9717  1D23  00A6               	movwf	___fleq@ff2+2
  9718  1D24  3000               	movlw	0
  9719  1D25  00A5               	movwf	___fleq@ff2+1
  9720  1D26  3000               	movlw	0
  9721  1D27  00A4               	movwf	___fleq@ff2
  9722  1D28                     l578:
  9723  1D28  0827               	movf	___fleq@ff2+3,w
  9724  1D29  0623               	xorwf	___fleq@ff1+3,w
  9725  1D2A  1D03               	skipz
  9726  1D2B  2D36               	goto	u6455
  9727  1D2C  0826               	movf	___fleq@ff2+2,w
  9728  1D2D  0622               	xorwf	___fleq@ff1+2,w
  9729  1D2E  1D03               	skipz
  9730  1D2F  2D36               	goto	u6455
  9731  1D30  0825               	movf	___fleq@ff2+1,w
  9732  1D31  0621               	xorwf	___fleq@ff1+1,w
  9733  1D32  1D03               	skipz
  9734  1D33  2D36               	goto	u6455
  9735  1D34  0824               	movf	___fleq@ff2,w
  9736  1D35  0620               	xorwf	___fleq@ff1,w
  9737  1D36                     u6455:
  9738  1D36  1903               	skipnz
  9739  1D37  2D39               	goto	u6451
  9740  1D38  2D3A               	goto	u6450
  9741  1D39                     u6451:
  9742  1D39  2D3C               	goto	l4078
  9743  1D3A                     u6450:
  9744  1D3A                     l4076:
  9745  1D3A  1003               	clrc
  9746  1D3B  2D3D               	goto	l579
  9747  1D3C                     l4078:
  9748  1D3C  1403               	setc
  9749  1D3D                     l579:
  9750  1D3D  0008               	return
  9751  1D3E                     __end_of___fleq:
  9752                           
  9753                           	psect	text23
  9754  1AC0                     __ptext23:	
  9755 ;; *************** function _setup *****************
  9756 ;; Defined at:
  9757 ;;		line 110 in file "Lab02.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;		None
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;		None
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  1    wreg      void 
  9764 ;; Registers used:
  9765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9766 ;; Tracked objects:
  9767 ;;		On entry : 0/0
  9768 ;;		On exit  : 0/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9771 ;;      Params:         0       0       0       0       0
  9772 ;;      Locals:         0       0       0       0       0
  9773 ;;      Temps:          0       0       0       0       0
  9774 ;;      Totals:         0       0       0       0       0
  9775 ;;Total ram usage:        0 bytes
  9776 ;; Hardware stack levels used: 1
  9777 ;; Hardware stack levels required when called: 3
  9778 ;; This function calls:
  9779 ;;		_TMR0_init
  9780 ;;		_initADC
  9781 ;;		_initOsc
  9782 ;; This function is called by:
  9783 ;;		_main
  9784 ;; This function uses a non-reentrant model
  9785 ;;
  9786                           
  9787  1AC0                     _setup:	
  9788                           ;psect for function _setup
  9789                           
  9790  1AC0                     l3272:	
  9791                           ;incstack = 0
  9792                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9793                           
  9794                           
  9795                           ;Lab02.c: 112:     return;
  9796  1AC0  1683               	bsf	3,5	;RP0=1, select bank3
  9797  1AC1  1703               	bsf	3,6	;RP1=1, select bank3
  9798  1AC2  0189               	clrf	9	;volatile
  9799  1AC3                     l3274:
  9800                           
  9801                           ;Lab02.c: 113: }
  9802  1AC3  3003               	movlw	3
  9803  1AC4  0088               	movwf	8	;volatile
  9804  1AC5                     l3276:
  9805                           
  9806                           ;Lab02.c: 116: 
  9807  1AC5  3003               	movlw	3
  9808  1AC6  1683               	bsf	3,5	;RP0=1, select bank1
  9809  1AC7  1303               	bcf	3,6	;RP1=0, select bank1
  9810  1AC8  0085               	movwf	5	;volatile
  9811                           
  9812                           ;Lab02.c: 117: int main(void)
  9813  1AC9  0186               	clrf	6	;volatile
  9814                           
  9815                           ;Lab02.c: 118: {
  9816  1ACA  0187               	clrf	7	;volatile
  9817                           
  9818                           ;Lab02.c: 119: 
  9819  1ACB  0188               	clrf	8	;volatile
  9820                           
  9821                           ;Lab02.c: 120:     setup();
  9822  1ACC  0189               	clrf	9	;volatile
  9823                           
  9824                           ;Lab02.c: 124:     Lcd_Init();
  9825  1ACD  1283               	bcf	3,5	;RP0=0, select bank0
  9826  1ACE  1303               	bcf	3,6	;RP1=0, select bank0
  9827  1ACF  0185               	clrf	5	;volatile
  9828                           
  9829                           ;Lab02.c: 125:     while(1)
  9830  1AD0  0186               	clrf	6	;volatile
  9831                           
  9832                           ;Lab02.c: 126:     {
  9833  1AD1  0187               	clrf	7	;volatile
  9834                           
  9835                           ;Lab02.c: 127: 
  9836  1AD2  0188               	clrf	8	;volatile
  9837                           
  9838                           ;Lab02.c: 128:         adc_start(0,1);
  9839  1AD3  0189               	clrf	9	;volatile
  9840  1AD4                     l3278:
  9841                           
  9842                           ;Lab02.c: 132: 
  9843  1AD4  178B               	bsf	11,7	;volatile
  9844  1AD5                     l3280:
  9845                           
  9846                           ;Lab02.c: 134:         {
  9847  1AD5  3000               	movlw	0
  9848  1AD6  160A  158A  2351  160A  158A  	fcall	_initOsc
  9849  1ADB                     l3282:
  9850                           
  9851                           ;Lab02.c: 138: 
  9852  1ADB  30FF               	movlw	255
  9853  1ADC  160A  158A  258E  160A  158A  	fcall	_TMR0_init
  9854  1AE1                     l3284:
  9855                           
  9856                           ;Lab02.c: 140: 
  9857  1AE1  01F3               	clrf	initADC@vref_plus
  9858  1AE2  01F4               	clrf	initADC@vref_min
  9859  1AE3  3000               	movlw	0
  9860  1AE4  160A  158A  24A2  160A  158A  	fcall	_initADC
  9861  1AE9                     l93:
  9862  1AE9  0008               	return
  9863  1AEA                     __end_of_setup:
  9864                           
  9865                           	psect	text24
  9866  1B51                     __ptext24:	
  9867 ;; *************** function _initOsc *****************
  9868 ;; Defined at:
  9869 ;;		line 16 in file "Oscilador.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;  freq            1    wreg     unsigned char 
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;  freq            1    5[COMMON] unsigned char 
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  1    wreg      void 
  9876 ;; Registers used:
  9877 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9883 ;;      Params:         0       0       0       0       0
  9884 ;;      Locals:         1       0       0       0       0
  9885 ;;      Temps:          2       0       0       0       0
  9886 ;;      Totals:         3       0       0       0       0
  9887 ;;Total ram usage:        3 bytes
  9888 ;; Hardware stack levels used: 1
  9889 ;; Hardware stack levels required when called: 2
  9890 ;; This function calls:
  9891 ;;		Nothing
  9892 ;; This function is called by:
  9893 ;;		_setup
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897  1B51                     _initOsc:	
  9898                           ;psect for function _initOsc
  9899                           
  9900                           
  9901                           ;incstack = 0
  9902                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  9903                           ;initOsc@freq stored from wreg
  9904  1B51  00F5               	movwf	initOsc@freq
  9905  1B52                     l2808:
  9906                           
  9907                           ;Oscilador.c: 17:     OSCCONbits.IRCF = freq;
  9908  1B52  0875               	movf	initOsc@freq,w
  9909  1B53  00F3               	movwf	??_initOsc
  9910  1B54  0EF3               	swapf	??_initOsc,f
  9911  1B55  1683               	bsf	3,5	;RP0=1, select bank1
  9912  1B56  1303               	bcf	3,6	;RP1=0, select bank1
  9913  1B57  080F               	movf	15,w	;volatile
  9914  1B58  0673               	xorwf	??_initOsc,w
  9915  1B59  398F               	andlw	-113
  9916  1B5A  0673               	xorwf	??_initOsc,w
  9917  1B5B  008F               	movwf	15	;volatile
  9918                           
  9919                           ;Oscilador.c: 18:     switch(freq){
  9920  1B5C  2B77               	goto	l2832
  9921  1B5D                     l2810:
  9922                           
  9923                           ;Oscilador.c: 21:             OSCCONbits.IRCF = 0b100;
  9924  1B5D  080F               	movf	15,w	;volatile
  9925  1B5E  398F               	andlw	-113
  9926  1B5F  3840               	iorlw	64
  9927  1B60  008F               	movwf	15	;volatile
  9928  1B61                     l2812:
  9929                           
  9930                           ;Oscilador.c: 22:             OSCCONbits.SCS = 1;
  9931  1B61  140F               	bsf	15,0	;volatile
  9932                           
  9933                           ;Oscilador.c: 23:             break;
  9934  1B62  2B8D               	goto	l157
  9935  1B63                     l2814:
  9936                           
  9937                           ;Oscilador.c: 26:             OSCCONbits.IRCF = 0b101;
  9938  1B63  080F               	movf	15,w	;volatile
  9939  1B64  398F               	andlw	-113
  9940  1B65  3850               	iorlw	80
  9941  1B66  008F               	movwf	15	;volatile
  9942  1B67                     l2816:
  9943                           
  9944                           ;Oscilador.c: 27:             OSCCONbits.SCS = 1;
  9945  1B67  140F               	bsf	15,0	;volatile
  9946                           
  9947                           ;Oscilador.c: 28:             break;
  9948  1B68  2B8D               	goto	l157
  9949  1B69                     l2818:
  9950                           
  9951                           ;Oscilador.c: 31:             OSCCONbits.IRCF = 0b110;
  9952  1B69  080F               	movf	15,w	;volatile
  9953  1B6A  398F               	andlw	-113
  9954  1B6B  3860               	iorlw	96
  9955  1B6C  008F               	movwf	15	;volatile
  9956  1B6D                     l2820:
  9957                           
  9958                           ;Oscilador.c: 32:             OSCCONbits.SCS = 1;
  9959  1B6D  140F               	bsf	15,0	;volatile
  9960                           
  9961                           ;Oscilador.c: 33:             break;
  9962  1B6E  2B8D               	goto	l157
  9963  1B6F                     l2822:
  9964                           
  9965                           ;Oscilador.c: 35:             OSCCONbits.IRCF = 0b111;
  9966  1B6F  3070               	movlw	112
  9967  1B70  048F               	iorwf	15,f	;volatile
  9968  1B71                     l2824:
  9969                           
  9970                           ;Oscilador.c: 36:             OSCCONbits.SCS = 1;
  9971  1B71  140F               	bsf	15,0	;volatile
  9972                           
  9973                           ;Oscilador.c: 37:             break;
  9974  1B72  2B8D               	goto	l157
  9975  1B73                     l2826:
  9976                           
  9977                           ;Oscilador.c: 40:             OSCCONbits.IRCF = 0b111;
  9978  1B73  3070               	movlw	112
  9979  1B74  048F               	iorwf	15,f	;volatile
  9980  1B75                     l2828:
  9981                           
  9982                           ;Oscilador.c: 41:             OSCCONbits.SCS = 1;
  9983  1B75  140F               	bsf	15,0	;volatile
  9984                           
  9985                           ;Oscilador.c: 42:             break;
  9986  1B76  2B8D               	goto	l157
  9987  1B77                     l2832:
  9988  1B77  0875               	movf	initOsc@freq,w
  9989  1B78  00F3               	movwf	??_initOsc
  9990  1B79  01F4               	clrf	??_initOsc+1
  9991                           
  9992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9993                           ; Switch size 1, requested type "simple"
  9994                           ; Number of cases is 1, Range of values is 0 to 0
  9995                           ; switch strategies available:
  9996                           ; Name         Instructions Cycles
  9997                           ; simple_byte            4     3 (average)
  9998                           ; direct_byte           11     8 (fixed)
  9999                           ; jumptable            260     6 (fixed)
 10000                           ;	Chosen strategy is simple_byte
 10001  1B7A  0874               	movf	??_initOsc+1,w
 10002  1B7B  3A00               	xorlw	0	; case 0
 10003  1B7C  1903               	skipnz
 10004  1B7D  2B7F               	goto	l4532
 10005  1B7E  2B73               	goto	l2826
 10006  1B7F                     l4532:
 10007                           
 10008                           ; Switch size 1, requested type "simple"
 10009                           ; Number of cases is 4, Range of values is 0 to 3
 10010                           ; switch strategies available:
 10011                           ; Name         Instructions Cycles
 10012                           ; simple_byte           13     7 (average)
 10013                           ; direct_byte           20     8 (fixed)
 10014                           ; jumptable            260     6 (fixed)
 10015                           ;	Chosen strategy is simple_byte
 10016  1B7F  0873               	movf	??_initOsc,w
 10017  1B80  3A00               	xorlw	0	; case 0
 10018  1B81  1903               	skipnz
 10019  1B82  2B5D               	goto	l2810
 10020  1B83  3A01               	xorlw	1	; case 1
 10021  1B84  1903               	skipnz
 10022  1B85  2B63               	goto	l2814
 10023  1B86  3A03               	xorlw	3	; case 2
 10024  1B87  1903               	skipnz
 10025  1B88  2B69               	goto	l2818
 10026  1B89  3A01               	xorlw	1	; case 3
 10027  1B8A  1903               	skipnz
 10028  1B8B  2B6F               	goto	l2822
 10029  1B8C  2B73               	goto	l2826
 10030  1B8D                     l157:
 10031  1B8D  0008               	return
 10032  1B8E                     __end_of_initOsc:
 10033                           
 10034                           	psect	text25
 10035  1CA2                     __ptext25:	
 10036 ;; *************** function _initADC *****************
 10037 ;; Defined at:
 10038 ;;		line 18 in file "ADC.c"
 10039 ;; Parameters:    Size  Location     Type
 10040 ;;  adc_cs          1    wreg     unsigned char 
 10041 ;;  vref_plus       1    3[COMMON] unsigned char 
 10042 ;;  vref_min        1    4[COMMON] unsigned char 
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;  adc_cs          1    7[COMMON] unsigned char 
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  1    wreg      void 
 10047 ;; Registers used:
 10048 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10049 ;; Tracked objects:
 10050 ;;		On entry : 0/0
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10054 ;;      Params:         2       0       0       0       0
 10055 ;;      Locals:         1       0       0       0       0
 10056 ;;      Temps:          2       0       0       0       0
 10057 ;;      Totals:         5       0       0       0       0
 10058 ;;Total ram usage:        5 bytes
 10059 ;; Hardware stack levels used: 1
 10060 ;; Hardware stack levels required when called: 2
 10061 ;; This function calls:
 10062 ;;		Nothing
 10063 ;; This function is called by:
 10064 ;;		_setup
 10065 ;; This function uses a non-reentrant model
 10066 ;;
 10067                           
 10068  1CA2                     _initADC:	
 10069                           ;psect for function _initADC
 10070                           
 10071                           
 10072                           ;incstack = 0
 10073                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
 10074                           ;initADC@adc_cs stored from wreg
 10075  1CA2  00F7               	movwf	initADC@adc_cs
 10076  1CA3                     l2858:
 10077                           
 10078                           ;ADC.c: 20:     switch(adc_cs){
 10079  1CA3  2CBC               	goto	l2870
 10080  1CA4                     l2860:
 10081                           
 10082                           ;ADC.c: 22:             ADCON0bits.ADCS = 0b00;
 10083  1CA4  303F               	movlw	-193
 10084  1CA5  1283               	bcf	3,5	;RP0=0, select bank0
 10085  1CA6  1303               	bcf	3,6	;RP1=0, select bank0
 10086  1CA7  059F               	andwf	31,f	;volatile
 10087                           
 10088                           ;ADC.c: 23:             break;
 10089  1CA8  2CCF               	goto	l174
 10090  1CA9                     l2862:
 10091                           
 10092                           ;ADC.c: 25:             ADCON0bits.ADCS = 0b01;
 10093  1CA9  1283               	bcf	3,5	;RP0=0, select bank0
 10094  1CAA  1303               	bcf	3,6	;RP1=0, select bank0
 10095  1CAB  081F               	movf	31,w	;volatile
 10096  1CAC  393F               	andlw	-193
 10097  1CAD  3840               	iorlw	64
 10098  1CAE  009F               	movwf	31	;volatile
 10099                           
 10100                           ;ADC.c: 26:             break;
 10101  1CAF  2CCF               	goto	l174
 10102  1CB0                     l2864:
 10103                           
 10104                           ;ADC.c: 28:             ADCON0bits.ADCS = 0b10;
 10105  1CB0  1283               	bcf	3,5	;RP0=0, select bank0
 10106  1CB1  1303               	bcf	3,6	;RP1=0, select bank0
 10107  1CB2  081F               	movf	31,w	;volatile
 10108  1CB3  393F               	andlw	-193
 10109  1CB4  3880               	iorlw	128
 10110  1CB5  009F               	movwf	31	;volatile
 10111                           
 10112                           ;ADC.c: 29:             break;
 10113  1CB6  2CCF               	goto	l174
 10114  1CB7                     l2866:
 10115                           
 10116                           ;ADC.c: 31:             ADCON0bits.ADCS = 0b11;
 10117  1CB7  30C0               	movlw	192
 10118  1CB8  1283               	bcf	3,5	;RP0=0, select bank0
 10119  1CB9  1303               	bcf	3,6	;RP1=0, select bank0
 10120  1CBA  049F               	iorwf	31,f	;volatile
 10121                           
 10122                           ;ADC.c: 32:             break;
 10123  1CBB  2CCF               	goto	l174
 10124  1CBC                     l2870:
 10125  1CBC  0877               	movf	initADC@adc_cs,w
 10126  1CBD  00F5               	movwf	??_initADC
 10127  1CBE  01F6               	clrf	??_initADC+1
 10128                           
 10129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10130                           ; Switch size 1, requested type "simple"
 10131                           ; Number of cases is 1, Range of values is 0 to 0
 10132                           ; switch strategies available:
 10133                           ; Name         Instructions Cycles
 10134                           ; simple_byte            4     3 (average)
 10135                           ; direct_byte           11     8 (fixed)
 10136                           ; jumptable            260     6 (fixed)
 10137                           ;	Chosen strategy is simple_byte
 10138  1CBF  0876               	movf	??_initADC+1,w
 10139  1CC0  3A00               	xorlw	0	; case 0
 10140  1CC1  1903               	skipnz
 10141  1CC2  2CC4               	goto	l4534
 10142  1CC3  2CB7               	goto	l2866
 10143  1CC4                     l4534:
 10144                           
 10145                           ; Switch size 1, requested type "simple"
 10146                           ; Number of cases is 3, Range of values is 0 to 2
 10147                           ; switch strategies available:
 10148                           ; Name         Instructions Cycles
 10149                           ; simple_byte           10     6 (average)
 10150                           ; direct_byte           17     8 (fixed)
 10151                           ; jumptable            260     6 (fixed)
 10152                           ;	Chosen strategy is simple_byte
 10153  1CC4  0875               	movf	??_initADC,w
 10154  1CC5  3A00               	xorlw	0	; case 0
 10155  1CC6  1903               	skipnz
 10156  1CC7  2CA4               	goto	l2860
 10157  1CC8  3A01               	xorlw	1	; case 1
 10158  1CC9  1903               	skipnz
 10159  1CCA  2CA9               	goto	l2862
 10160  1CCB  3A03               	xorlw	3	; case 2
 10161  1CCC  1903               	skipnz
 10162  1CCD  2CB0               	goto	l2864
 10163  1CCE  2CB7               	goto	l2866
 10164  1CCF                     l174:
 10165                           
 10166                           ;ADC.c: 43:     ADCON1bits.ADFM = 0;
 10167  1CCF  1683               	bsf	3,5	;RP0=1, select bank1
 10168  1CD0  1303               	bcf	3,6	;RP1=0, select bank1
 10169  1CD1  139F               	bcf	31,7	;volatile
 10170  1CD2                     l2872:
 10171                           
 10172                           ;ADC.c: 44:     ADCON1bits.VCFG0 = vref_plus;
 10173  1CD2  0C73               	rrf	initADC@vref_plus,w
 10174  1CD3  1C03               	skipc
 10175  1CD4  121F               	bcf	31,4	;volatile
 10176  1CD5  1803               	skipnc
 10177  1CD6  161F               	bsf	31,4	;volatile
 10178                           
 10179                           ;ADC.c: 45:     ADCON1bits.VCFG1 = vref_min;
 10180  1CD7  0C74               	rrf	initADC@vref_min,w
 10181  1CD8  1C03               	skipc
 10182  1CD9  129F               	bcf	31,5	;volatile
 10183  1CDA  1803               	skipnc
 10184  1CDB  169F               	bsf	31,5	;volatile
 10185  1CDC                     l2874:
 10186                           
 10187                           ;ADC.c: 46:     ADCON0bits.ADON = 1;
 10188  1CDC  1283               	bcf	3,5	;RP0=0, select bank0
 10189  1CDD  1303               	bcf	3,6	;RP1=0, select bank0
 10190  1CDE  141F               	bsf	31,0	;volatile
 10191  1CDF                     l2876:
 10192                           
 10193                           ;ADC.c: 47:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10194  1CDF  30C7               	movlw	199
 10195  1CE0  00F5               	movwf	??_initADC
 10196  1CE1                     u7147:
 10197  1CE1  2CE2               	nop2
 10198  1CE2  0BF5               	decfsz	??_initADC,f
 10199  1CE3  2CE1               	goto	u7147
 10200  1CE4  2CE5               	nop2
 10201  1CE5  2CE6               	nop2
 10202  1CE6                     l2878:
 10203                           
 10204                           ;ADC.c: 49:     INTCONbits.PEIE = 1;
 10205  1CE6  170B               	bsf	11,6	;volatile
 10206  1CE7                     l2880:
 10207                           
 10208                           ;ADC.c: 50:     PIE1bits.ADIE = 1;
 10209  1CE7  1683               	bsf	3,5	;RP0=1, select bank1
 10210  1CE8  1303               	bcf	3,6	;RP1=0, select bank1
 10211  1CE9  170C               	bsf	12,6	;volatile
 10212  1CEA                     l2882:
 10213                           
 10214                           ;ADC.c: 51:     PIR1bits.ADIF = 0;
 10215  1CEA  1283               	bcf	3,5	;RP0=0, select bank0
 10216  1CEB  1303               	bcf	3,6	;RP1=0, select bank0
 10217  1CEC  130C               	bcf	12,6	;volatile
 10218  1CED                     l178:
 10219  1CED  0008               	return
 10220  1CEE                     __end_of_initADC:
 10221                           
 10222                           	psect	text26
 10223  1D8E                     __ptext26:	
 10224 ;; *************** function _TMR0_init *****************
 10225 ;; Defined at:
 10226 ;;		line 14 in file "TMR0.c"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;  prescaler_VA    1    wreg     unsigned char 
 10229 ;; Auto vars:     Size  Location     Type
 10230 ;;  prescaler_VA    1    5[COMMON] unsigned char 
 10231 ;; Return value:  Size  Location     Type
 10232 ;;                  1    wreg      void 
 10233 ;; Registers used:
 10234 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10235 ;; Tracked objects:
 10236 ;;		On entry : 0/0
 10237 ;;		On exit  : 0/0
 10238 ;;		Unchanged: 0/0
 10239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10240 ;;      Params:         0       0       0       0       0
 10241 ;;      Locals:         1       0       0       0       0
 10242 ;;      Temps:          2       0       0       0       0
 10243 ;;      Totals:         3       0       0       0       0
 10244 ;;Total ram usage:        3 bytes
 10245 ;; Hardware stack levels used: 1
 10246 ;; Hardware stack levels required when called: 2
 10247 ;; This function calls:
 10248 ;;		Nothing
 10249 ;; This function is called by:
 10250 ;;		_setup
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254  1D8E                     _TMR0_init:	
 10255                           ;psect for function _TMR0_init
 10256                           
 10257                           
 10258                           ;incstack = 0
 10259                           ; Regs used in _TMR0_init: [wreg-fsr0h+status,2+status,0]
 10260                           ;TMR0_init@prescaler_VALUE stored from wreg
 10261  1D8E  00F5               	movwf	TMR0_init@prescaler_VALUE
 10262  1D8F                     l2838:
 10263                           
 10264                           ;TMR0.c: 15:     OPTION_REGbits.T0CS = 0;
 10265  1D8F  1683               	bsf	3,5	;RP0=1, select bank1
 10266  1D90  1303               	bcf	3,6	;RP1=0, select bank1
 10267  1D91  1281               	bcf	1,5	;volatile
 10268  1D92                     l2840:
 10269                           
 10270                           ;TMR0.c: 16:     if (prescaler_VALUE == 0)
 10271  1D92  0875               	movf	TMR0_init@prescaler_VALUE,w
 10272  1D93  1D03               	btfss	3,2
 10273  1D94  2D96               	goto	u3921
 10274  1D95  2D97               	goto	u3920
 10275  1D96                     u3921:
 10276  1D96  2D99               	goto	l197
 10277  1D97                     u3920:
 10278  1D97                     l2842:
 10279                           
 10280                           ;TMR0.c: 17:         OPTION_REGbits.PSA = 1;
 10281  1D97  1581               	bsf	1,3	;volatile
 10282  1D98  2DBB               	goto	l2846
 10283  1D99                     l197:	
 10284                           ;TMR0.c: 18:     else
 10285                           
 10286                           
 10287                           ;TMR0.c: 19:         OPTION_REGbits.PSA = 0;
 10288  1D99  1181               	bcf	1,3	;volatile
 10289  1D9A  2DBB               	goto	l2846
 10290  1D9B                     l200:	
 10291                           ;TMR0.c: 21:     {;TMR0.c: 22:         case 2:
 10292                           
 10293                           
 10294                           ;TMR0.c: 23:             OPTION_REGbits.PS0 = 0;
 10295  1D9B  1001               	bcf	1,0	;volatile
 10296                           
 10297                           ;TMR0.c: 24:             OPTION_REGbits.PS1 = 0;
 10298  1D9C  1081               	bcf	1,1	;volatile
 10299                           
 10300                           ;TMR0.c: 25:             OPTION_REGbits.PS2 = 0;
 10301  1D9D  1101               	bcf	1,2	;volatile
 10302                           
 10303                           ;TMR0.c: 26:             break;
 10304  1D9E  2DDD               	goto	l2848
 10305  1D9F                     l202:	
 10306                           ;TMR0.c: 28:         case 4:
 10307                           
 10308                           
 10309                           ;TMR0.c: 29:             OPTION_REGbits.PS0 = 1;
 10310  1D9F  1401               	bsf	1,0	;volatile
 10311                           
 10312                           ;TMR0.c: 30:             OPTION_REGbits.PS1 = 0;
 10313  1DA0  1081               	bcf	1,1	;volatile
 10314                           
 10315                           ;TMR0.c: 31:             OPTION_REGbits.PS2 = 0;
 10316  1DA1  1101               	bcf	1,2	;volatile
 10317                           
 10318                           ;TMR0.c: 32:             break;
 10319  1DA2  2DDD               	goto	l2848
 10320  1DA3                     l203:	
 10321                           ;TMR0.c: 34:         case 8:
 10322                           
 10323                           
 10324                           ;TMR0.c: 35:             OPTION_REGbits.PS0 = 0;
 10325  1DA3  1001               	bcf	1,0	;volatile
 10326                           
 10327                           ;TMR0.c: 36:             OPTION_REGbits.PS1 = 1;
 10328  1DA4  1481               	bsf	1,1	;volatile
 10329                           
 10330                           ;TMR0.c: 37:             OPTION_REGbits.PS2 = 0;
 10331  1DA5  1101               	bcf	1,2	;volatile
 10332                           
 10333                           ;TMR0.c: 38:             break;
 10334  1DA6  2DDD               	goto	l2848
 10335  1DA7                     l204:	
 10336                           ;TMR0.c: 40:         case 16:
 10337                           
 10338                           
 10339                           ;TMR0.c: 41:             OPTION_REGbits.PS0 = 1;
 10340  1DA7  1401               	bsf	1,0	;volatile
 10341                           
 10342                           ;TMR0.c: 42:             OPTION_REGbits.PS1 = 1;
 10343  1DA8  1481               	bsf	1,1	;volatile
 10344                           
 10345                           ;TMR0.c: 43:             OPTION_REGbits.PS2 = 0;
 10346  1DA9  1101               	bcf	1,2	;volatile
 10347                           
 10348                           ;TMR0.c: 44:             break;
 10349  1DAA  2DDD               	goto	l2848
 10350  1DAB                     l205:	
 10351                           ;TMR0.c: 46:         case 32:
 10352                           
 10353                           
 10354                           ;TMR0.c: 47:             OPTION_REGbits.PS0 = 0;
 10355  1DAB  1001               	bcf	1,0	;volatile
 10356                           
 10357                           ;TMR0.c: 48:             OPTION_REGbits.PS1 = 0;
 10358  1DAC  1081               	bcf	1,1	;volatile
 10359                           
 10360                           ;TMR0.c: 49:             OPTION_REGbits.PS2 = 1;
 10361  1DAD  1501               	bsf	1,2	;volatile
 10362                           
 10363                           ;TMR0.c: 50:             break;
 10364  1DAE  2DDD               	goto	l2848
 10365  1DAF                     l206:	
 10366                           ;TMR0.c: 52:         case 64:
 10367                           
 10368                           
 10369                           ;TMR0.c: 53:             OPTION_REGbits.PS0 = 1;
 10370  1DAF  1401               	bsf	1,0	;volatile
 10371                           
 10372                           ;TMR0.c: 54:             OPTION_REGbits.PS1 = 0;
 10373  1DB0  1081               	bcf	1,1	;volatile
 10374                           
 10375                           ;TMR0.c: 55:             OPTION_REGbits.PS2 = 1;
 10376  1DB1  1501               	bsf	1,2	;volatile
 10377                           
 10378                           ;TMR0.c: 56:             break;
 10379  1DB2  2DDD               	goto	l2848
 10380  1DB3                     l207:	
 10381                           ;TMR0.c: 58:         case 128:
 10382                           
 10383                           
 10384                           ;TMR0.c: 59:             OPTION_REGbits.PS0 = 0;
 10385  1DB3  1001               	bcf	1,0	;volatile
 10386                           
 10387                           ;TMR0.c: 60:             OPTION_REGbits.PS1 = 1;
 10388  1DB4  1481               	bsf	1,1	;volatile
 10389                           
 10390                           ;TMR0.c: 61:             OPTION_REGbits.PS2 = 1;
 10391  1DB5  1501               	bsf	1,2	;volatile
 10392                           
 10393                           ;TMR0.c: 62:             break;
 10394  1DB6  2DDD               	goto	l2848
 10395  1DB7                     l208:	
 10396                           ;TMR0.c: 64:         case 255:
 10397                           
 10398                           
 10399                           ;TMR0.c: 65:             OPTION_REGbits.PS0 = 1;
 10400  1DB7  1401               	bsf	1,0	;volatile
 10401                           
 10402                           ;TMR0.c: 66:             OPTION_REGbits.PS1 = 1;
 10403  1DB8  1481               	bsf	1,1	;volatile
 10404                           
 10405                           ;TMR0.c: 67:             OPTION_REGbits.PS2 = 1;
 10406  1DB9  1501               	bsf	1,2	;volatile
 10407                           
 10408                           ;TMR0.c: 68:             break;
 10409  1DBA  2DDD               	goto	l2848
 10410  1DBB                     l2846:
 10411  1DBB  0875               	movf	TMR0_init@prescaler_VALUE,w
 10412  1DBC  00F3               	movwf	??_TMR0_init
 10413  1DBD  01F4               	clrf	??_TMR0_init+1
 10414                           
 10415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10416                           ; Switch size 1, requested type "simple"
 10417                           ; Number of cases is 1, Range of values is 0 to 0
 10418                           ; switch strategies available:
 10419                           ; Name         Instructions Cycles
 10420                           ; simple_byte            4     3 (average)
 10421                           ; direct_byte           11     8 (fixed)
 10422                           ; jumptable            260     6 (fixed)
 10423                           ;	Chosen strategy is simple_byte
 10424  1DBE  0874               	movf	??_TMR0_init+1,w
 10425  1DBF  3A00               	xorlw	0	; case 0
 10426  1DC0  1903               	skipnz
 10427  1DC1  2DC3               	goto	l4536
 10428  1DC2  2DDD               	goto	l2848
 10429  1DC3                     l4536:
 10430                           
 10431                           ; Switch size 1, requested type "simple"
 10432                           ; Number of cases is 8, Range of values is 2 to 255
 10433                           ; switch strategies available:
 10434                           ; Name         Instructions Cycles
 10435                           ; simple_byte           25    13 (average)
 10436                           ; jumptable            263     9 (fixed)
 10437                           ;	Chosen strategy is simple_byte
 10438  1DC3  0873               	movf	??_TMR0_init,w
 10439  1DC4  3A02               	xorlw	2	; case 2
 10440  1DC5  1903               	skipnz
 10441  1DC6  2D9B               	goto	l200
 10442  1DC7  3A06               	xorlw	6	; case 4
 10443  1DC8  1903               	skipnz
 10444  1DC9  2D9F               	goto	l202
 10445  1DCA  3A0C               	xorlw	12	; case 8
 10446  1DCB  1903               	skipnz
 10447  1DCC  2DA3               	goto	l203
 10448  1DCD  3A18               	xorlw	24	; case 16
 10449  1DCE  1903               	skipnz
 10450  1DCF  2DA7               	goto	l204
 10451  1DD0  3A30               	xorlw	48	; case 32
 10452  1DD1  1903               	skipnz
 10453  1DD2  2DAB               	goto	l205
 10454  1DD3  3A60               	xorlw	96	; case 64
 10455  1DD4  1903               	skipnz
 10456  1DD5  2DAF               	goto	l206
 10457  1DD6  3AC0               	xorlw	192	; case 128
 10458  1DD7  1903               	skipnz
 10459  1DD8  2DB3               	goto	l207
 10460  1DD9  3A7F               	xorlw	127	; case 255
 10461  1DDA  1903               	skipnz
 10462  1DDB  2DB7               	goto	l208
 10463  1DDC  2DDD               	goto	l2848
 10464  1DDD                     l2848:
 10465                           
 10466                           ;TMR0.c: 70:     TMR0 = 61;
 10467  1DDD  303D               	movlw	61
 10468  1DDE  1283               	bcf	3,5	;RP0=0, select bank0
 10469  1DDF  1303               	bcf	3,6	;RP1=0, select bank0
 10470  1DE0  0081               	movwf	1	;volatile
 10471  1DE1                     l2850:
 10472                           
 10473                           ;TMR0.c: 71:     INTCONbits.T0IE = 1;
 10474  1DE1  168B               	bsf	11,5	;volatile
 10475  1DE2                     l2852:
 10476                           
 10477                           ;TMR0.c: 72:     INTCONbits.T0IF = 0;
 10478  1DE2  110B               	bcf	11,2	;volatile
 10479  1DE3                     l209:
 10480  1DE3  0008               	return
 10481  1DE4                     __end_of_TMR0_init:
 10482                           
 10483                           	psect	text27
 10484  1B8E                     __ptext27:	
 10485 ;; *************** function _adc_start *****************
 10486 ;; Defined at:
 10487 ;;		line 54 in file "ADC.c"
 10488 ;; Parameters:    Size  Location     Type
 10489 ;;  channel_1       1    wreg     unsigned char 
 10490 ;;  channel_2       1    3[COMMON] unsigned char 
 10491 ;; Auto vars:     Size  Location     Type
 10492 ;;  channel_1       1    5[COMMON] unsigned char 
 10493 ;; Return value:  Size  Location     Type
 10494 ;;                  1    wreg      void 
 10495 ;; Registers used:
 10496 ;;		wreg, status,2, status,0
 10497 ;; Tracked objects:
 10498 ;;		On entry : 0/0
 10499 ;;		On exit  : 0/0
 10500 ;;		Unchanged: 0/0
 10501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10502 ;;      Params:         1       0       0       0       0
 10503 ;;      Locals:         1       0       0       0       0
 10504 ;;      Temps:          1       0       0       0       0
 10505 ;;      Totals:         3       0       0       0       0
 10506 ;;Total ram usage:        3 bytes
 10507 ;; Hardware stack levels used: 1
 10508 ;; Hardware stack levels required when called: 2
 10509 ;; This function calls:
 10510 ;;		Nothing
 10511 ;; This function is called by:
 10512 ;;		_main
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516  1B8E                     _adc_start:	
 10517                           ;psect for function _adc_start
 10518                           
 10519                           
 10520                           ;incstack = 0
 10521                           ; Regs used in _adc_start: [wreg+status,2+status,0]
 10522                           ;adc_start@channel_1 stored from wreg
 10523  1B8E  00F5               	movwf	adc_start@channel_1
 10524  1B8F                     l3300:
 10525                           
 10526                           ;ADC.c: 55:         if (ADCON0bits.GO == 0)
 10527  1B8F  1283               	bcf	3,5	;RP0=0, select bank0
 10528  1B90  1303               	bcf	3,6	;RP1=0, select bank0
 10529  1B91  189F               	btfsc	31,1	;volatile
 10530  1B92  2B94               	goto	u4981
 10531  1B93  2B95               	goto	u4980
 10532  1B94                     u4981:
 10533  1B94  2BCE               	goto	l185
 10534  1B95                     u4980:
 10535  1B95                     l3302:
 10536                           
 10537                           ;ADC.c: 56:         {;ADC.c: 57:             if (ADCON0bits.CHS == channel_1)
 10538  1B95  0C1F               	rrf	31,w	;volatile
 10539  1B96  00F4               	movwf	??_adc_start
 10540  1B97  0C74               	rrf	??_adc_start,w
 10541  1B98  390F               	andlw	15
 10542  1B99  0675               	xorwf	adc_start@channel_1,w
 10543  1B9A  1D03               	skipz
 10544  1B9B  2B9D               	goto	u4991
 10545  1B9C  2B9E               	goto	u4990
 10546  1B9D                     u4991:
 10547  1B9D  2BAF               	goto	l3308
 10548  1B9E                     u4990:
 10549  1B9E                     l3304:
 10550                           
 10551                           ;ADC.c: 58:             {;ADC.c: 59:                 _delay((unsigned long)((50)*(400000
      +                          0/4000000.0)));
 10552  1B9E  3010               	movlw	16
 10553  1B9F  00F4               	movwf	??_adc_start
 10554  1BA0                     u7157:
 10555  1BA0  0BF4               	decfsz	??_adc_start,f
 10556  1BA1  2BA0               	goto	u7157
 10557  1BA2  0000               	nop
 10558  1BA3                     l3306:
 10559                           
 10560                           ;ADC.c: 60:                 ADCON0bits.CHS = channel_2;
 10561  1BA3  0873               	movf	adc_start@channel_2,w
 10562  1BA4  00F4               	movwf	??_adc_start
 10563  1BA5  0DF4               	rlf	??_adc_start,f
 10564  1BA6  0DF4               	rlf	??_adc_start,f
 10565  1BA7  1283               	bcf	3,5	;RP0=0, select bank0
 10566  1BA8  1303               	bcf	3,6	;RP1=0, select bank0
 10567  1BA9  081F               	movf	31,w	;volatile
 10568  1BAA  0674               	xorwf	??_adc_start,w
 10569  1BAB  39C3               	andlw	-61
 10570  1BAC  0674               	xorwf	??_adc_start,w
 10571  1BAD  009F               	movwf	31	;volatile
 10572                           
 10573                           ;ADC.c: 61:             }
 10574  1BAE  2BC7               	goto	l3314
 10575  1BAF                     l3308:
 10576  1BAF  0C1F               	rrf	31,w	;volatile
 10577  1BB0  00F4               	movwf	??_adc_start
 10578  1BB1  0C74               	rrf	??_adc_start,w
 10579  1BB2  390F               	andlw	15
 10580  1BB3  0673               	xorwf	adc_start@channel_2,w
 10581  1BB4  1D03               	skipz
 10582  1BB5  2BB7               	goto	u5001
 10583  1BB6  2BB8               	goto	u5000
 10584  1BB7                     u5001:
 10585  1BB7  2BC7               	goto	l3314
 10586  1BB8                     u5000:
 10587  1BB8                     l3310:
 10588                           
 10589                           ;ADC.c: 63:             {;ADC.c: 64:                 _delay((unsigned long)((70)*(400000
      +                          0/4000000.0)));
 10590  1BB8  3017               	movlw	23
 10591  1BB9  00F4               	movwf	??_adc_start
 10592  1BBA                     u7167:
 10593  1BBA  0BF4               	decfsz	??_adc_start,f
 10594  1BBB  2BBA               	goto	u7167
 10595  1BBC                     l3312:
 10596                           
 10597                           ;ADC.c: 65:                 ADCON0bits.CHS = channel_1;
 10598  1BBC  0875               	movf	adc_start@channel_1,w
 10599  1BBD  00F4               	movwf	??_adc_start
 10600  1BBE  0DF4               	rlf	??_adc_start,f
 10601  1BBF  0DF4               	rlf	??_adc_start,f
 10602  1BC0  1283               	bcf	3,5	;RP0=0, select bank0
 10603  1BC1  1303               	bcf	3,6	;RP1=0, select bank0
 10604  1BC2  081F               	movf	31,w	;volatile
 10605  1BC3  0674               	xorwf	??_adc_start,w
 10606  1BC4  39C3               	andlw	-61
 10607  1BC5  0674               	xorwf	??_adc_start,w
 10608  1BC6  009F               	movwf	31	;volatile
 10609  1BC7                     l3314:
 10610                           
 10611                           ;ADC.c: 67:             _delay((unsigned long)((100)*(4000000/4000000.0)));
 10612  1BC7  3021               	movlw	33
 10613  1BC8  00F4               	movwf	??_adc_start
 10614  1BC9                     u7177:
 10615  1BC9  0BF4               	decfsz	??_adc_start,f
 10616  1BCA  2BC9               	goto	u7177
 10617  1BCB                     l3316:
 10618                           
 10619                           ;ADC.c: 68:             ADCON0bits.GO = 1;
 10620  1BCB  1283               	bcf	3,5	;RP0=0, select bank0
 10621  1BCC  1303               	bcf	3,6	;RP1=0, select bank0
 10622  1BCD  149F               	bsf	31,1	;volatile
 10623  1BCE                     l185:
 10624  1BCE  0008               	return
 10625  1BCF                     __end_of_adc_start:
 10626                           
 10627                           	psect	text28
 10628  1BCF                     __ptext28:	
 10629 ;; *************** function _Lcd_Write_String *****************
 10630 ;; Defined at:
 10631 ;;		line 80 in file "LCD.c"
 10632 ;; Parameters:    Size  Location     Type
 10633 ;;  a               2    0[BANK0 ] PTR unsigned char 
 10634 ;;		 -> STR_3(4), VOTAJE_L01(5), STR_1(4), 
 10635 ;; Auto vars:     Size  Location     Type
 10636 ;;  i               2    5[BANK0 ] int 
 10637 ;; Return value:  Size  Location     Type
 10638 ;;                  1    wreg      void 
 10639 ;; Registers used:
 10640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10641 ;; Tracked objects:
 10642 ;;		On entry : 0/0
 10643 ;;		On exit  : 0/0
 10644 ;;		Unchanged: 0/0
 10645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10646 ;;      Params:         0       2       0       0       0
 10647 ;;      Locals:         0       2       0       0       0
 10648 ;;      Temps:          0       3       0       0       0
 10649 ;;      Totals:         0       7       0       0       0
 10650 ;;Total ram usage:        7 bytes
 10651 ;; Hardware stack levels used: 1
 10652 ;; Hardware stack levels required when called: 4
 10653 ;; This function calls:
 10654 ;;		_Lcd_Write_Char
 10655 ;; This function is called by:
 10656 ;;		_main
 10657 ;; This function uses a non-reentrant model
 10658 ;;
 10659                           
 10660  1BCF                     _Lcd_Write_String:	
 10661                           ;psect for function _Lcd_Write_String
 10662                           
 10663  1BCF                     l4192:	
 10664                           ;incstack = 0
 10665                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10666                           
 10667                           
 10668                           ;LCD.c: 80: void Lcd_Write_String(char *a);LCD.c: 81: {;LCD.c: 82:  int i;;LCD.c: 83:  f
      +                          or(i=0;a[i]!='\0';i++)
 10669  1BCF  1283               	bcf	3,5	;RP0=0, select bank0
 10670  1BD0  1303               	bcf	3,6	;RP1=0, select bank0
 10671  1BD1  01A5               	clrf	Lcd_Write_String@i
 10672  1BD2  01A6               	clrf	Lcd_Write_String@i+1
 10673  1BD3  2BF8               	goto	l4198
 10674  1BD4                     l4194:
 10675                           
 10676                           ;LCD.c: 84:     Lcd_Write_Char(a[i]);
 10677  1BD4  0825               	movf	Lcd_Write_String@i,w
 10678  1BD5  0720               	addwf	Lcd_Write_String@a,w
 10679  1BD6  00A3               	movwf	??_Lcd_Write_String+1
 10680  1BD7  0821               	movf	Lcd_Write_String@a+1,w
 10681  1BD8  00A2               	movwf	??_Lcd_Write_String
 10682  1BD9  1803               	skipnc
 10683  1BDA  0AA2               	incf	??_Lcd_Write_String,f
 10684  1BDB  1FA5               	btfss	Lcd_Write_String@i,7
 10685  1BDC  2BDE               	goto	u6750
 10686  1BDD  03A2               	decf	??_Lcd_Write_String,f
 10687  1BDE                     u6750:
 10688  1BDE  1283               	bcf	3,5	;RP0=0, select bank0
 10689  1BDF  1303               	bcf	3,6	;RP1=0, select bank0
 10690  1BE0  0822               	movf	??_Lcd_Write_String,w
 10691  1BE1  00A4               	movwf	??_Lcd_Write_String+2
 10692  1BE2  0824               	movf	??_Lcd_Write_String+2,w
 10693  1BE3  00FF               	movwf	btemp+1
 10694  1BE4  0823               	movf	??_Lcd_Write_String+1,w
 10695  1BE5  0084               	movwf	4
 10696  1BE6  160A  118A  2000  160A  158A  	fcall	stringtab
 10697  1BEB  160A  158A  2257  160A  158A  	fcall	_Lcd_Write_Char
 10698  1BF0                     l4196:
 10699  1BF0  3001               	movlw	1
 10700  1BF1  1283               	bcf	3,5	;RP0=0, select bank0
 10701  1BF2  1303               	bcf	3,6	;RP1=0, select bank0
 10702  1BF3  07A5               	addwf	Lcd_Write_String@i,f
 10703  1BF4  1803               	skipnc
 10704  1BF5  0AA6               	incf	Lcd_Write_String@i+1,f
 10705  1BF6  3000               	movlw	0
 10706  1BF7  07A6               	addwf	Lcd_Write_String@i+1,f
 10707  1BF8                     l4198:
 10708  1BF8  0825               	movf	Lcd_Write_String@i,w
 10709  1BF9  0720               	addwf	Lcd_Write_String@a,w
 10710  1BFA  00A3               	movwf	??_Lcd_Write_String+1
 10711  1BFB  0821               	movf	Lcd_Write_String@a+1,w
 10712  1BFC  00A2               	movwf	??_Lcd_Write_String
 10713  1BFD  1803               	skipnc
 10714  1BFE  0AA2               	incf	??_Lcd_Write_String,f
 10715  1BFF  1FA5               	btfss	Lcd_Write_String@i,7
 10716  1C00  2C02               	goto	u6760
 10717  1C01  03A2               	decf	??_Lcd_Write_String,f
 10718  1C02                     u6760:
 10719  1C02  1283               	bcf	3,5	;RP0=0, select bank0
 10720  1C03  1303               	bcf	3,6	;RP1=0, select bank0
 10721  1C04  0822               	movf	??_Lcd_Write_String,w
 10722  1C05  00A4               	movwf	??_Lcd_Write_String+2
 10723  1C06  0824               	movf	??_Lcd_Write_String+2,w
 10724  1C07  00FF               	movwf	btemp+1
 10725  1C08  0823               	movf	??_Lcd_Write_String+1,w
 10726  1C09  0084               	movwf	4
 10727  1C0A  160A  118A  2000  160A  158A  	fcall	stringtab
 10728  1C0F  3A00               	xorlw	0
 10729  1C10  1D03               	skipz
 10730  1C11  2C13               	goto	u6771
 10731  1C12  2C14               	goto	u6770
 10732  1C13                     u6771:
 10733  1C13  2BD4               	goto	l4194
 10734  1C14                     u6770:
 10735  1C14                     l139:
 10736  1C14  0008               	return
 10737  1C15                     __end_of_Lcd_Write_String:
 10738                           
 10739                           	psect	text29
 10740  1A57                     __ptext29:	
 10741 ;; *************** function _Lcd_Write_Char *****************
 10742 ;; Defined at:
 10743 ;;		line 71 in file "LCD.c"
 10744 ;; Parameters:    Size  Location     Type
 10745 ;;  a               1    wreg     unsigned char 
 10746 ;; Auto vars:     Size  Location     Type
 10747 ;;  a               1    6[COMMON] unsigned char 
 10748 ;; Return value:  Size  Location     Type
 10749 ;;                  1    wreg      void 
 10750 ;; Registers used:
 10751 ;;		wreg, status,2, status,0, pclath, cstack
 10752 ;; Tracked objects:
 10753 ;;		On entry : 0/0
 10754 ;;		On exit  : 0/0
 10755 ;;		Unchanged: 0/0
 10756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10757 ;;      Params:         0       0       0       0       0
 10758 ;;      Locals:         1       0       0       0       0
 10759 ;;      Temps:          2       0       0       0       0
 10760 ;;      Totals:         3       0       0       0       0
 10761 ;;Total ram usage:        3 bytes
 10762 ;; Hardware stack levels used: 1
 10763 ;; Hardware stack levels required when called: 3
 10764 ;; This function calls:
 10765 ;;		_Lcd_Port
 10766 ;; This function is called by:
 10767 ;;		_Lcd_Write_String
 10768 ;; This function uses a non-reentrant model
 10769 ;;
 10770                           
 10771  1A57                     _Lcd_Write_Char:	
 10772                           ;psect for function _Lcd_Write_Char
 10773                           
 10774                           
 10775                           ;incstack = 0
 10776                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10777                           ;Lcd_Write_Char@a stored from wreg
 10778  1A57  00F6               	movwf	Lcd_Write_Char@a
 10779  1A58                     l3860:
 10780                           
 10781                           ;LCD.c: 71: void Lcd_Write_Char(char a);LCD.c: 72: {;LCD.c: 73:    PORTBbits.RB0 = 1;
 10782  1A58  1283               	bcf	3,5	;RP0=0, select bank0
 10783  1A59  1303               	bcf	3,6	;RP1=0, select bank0
 10784  1A5A  1406               	bsf	6,0	;volatile
 10785  1A5B                     l3862:
 10786                           
 10787                           ;LCD.c: 74:    Lcd_Port(a);
 10788  1A5B  0876               	movf	Lcd_Write_Char@a,w
 10789  1A5C  120A  158A  2001  160A  158A  	fcall	_Lcd_Port
 10790  1A61                     l3864:
 10791                           
 10792                           ;LCD.c: 75:    PORTBbits.RB1 = 1;
 10793  1A61  1283               	bcf	3,5	;RP0=0, select bank0
 10794  1A62  1303               	bcf	3,6	;RP1=0, select bank0
 10795  1A63  1486               	bsf	6,1	;volatile
 10796  1A64                     l3866:
 10797                           
 10798                           ;LCD.c: 76:    _delay((unsigned long)((4)*(8000000/4000.0)));
 10799  1A64  300B               	movlw	11
 10800  1A65  00F5               	movwf	??_Lcd_Write_Char+1
 10801  1A66  3062               	movlw	98
 10802  1A67  00F4               	movwf	??_Lcd_Write_Char
 10803  1A68                     u7187:
 10804  1A68  0BF4               	decfsz	??_Lcd_Write_Char,f
 10805  1A69  2A68               	goto	u7187
 10806  1A6A  0BF5               	decfsz	??_Lcd_Write_Char+1,f
 10807  1A6B  2A68               	goto	u7187
 10808  1A6C  0000               	nop
 10809  1A6D                     l3868:
 10810                           
 10811                           ;LCD.c: 77:    PORTBbits.RB1 = 0;
 10812  1A6D  1283               	bcf	3,5	;RP0=0, select bank0
 10813  1A6E  1303               	bcf	3,6	;RP1=0, select bank0
 10814  1A6F  1086               	bcf	6,1	;volatile
 10815  1A70                     l133:
 10816  1A70  0008               	return
 10817  1A71                     __end_of_Lcd_Write_Char:
 10818                           
 10819                           	psect	text30
 10820  1A71                     __ptext30:	
 10821 ;; *************** function _Lcd_Set_Cursor *****************
 10822 ;; Defined at:
 10823 ;;		line 38 in file "LCD.c"
 10824 ;; Parameters:    Size  Location     Type
 10825 ;;  a               1    wreg     unsigned char 
 10826 ;;  b               1    7[COMMON] unsigned char 
 10827 ;; Auto vars:     Size  Location     Type
 10828 ;;  a               1    1[BANK0 ] unsigned char 
 10829 ;;  c               1    2[BANK0 ] unsigned char 
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  1    wreg      void 
 10832 ;; Registers used:
 10833 ;;		wreg, status,2, status,0, pclath, cstack
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 0/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10839 ;;      Params:         1       0       0       0       0
 10840 ;;      Locals:         0       2       0       0       0
 10841 ;;      Temps:          0       1       0       0       0
 10842 ;;      Totals:         1       3       0       0       0
 10843 ;;Total ram usage:        4 bytes
 10844 ;; Hardware stack levels used: 1
 10845 ;; Hardware stack levels required when called: 4
 10846 ;; This function calls:
 10847 ;;		_Lcd_Cmd
 10848 ;; This function is called by:
 10849 ;;		_main
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853  1A71                     _Lcd_Set_Cursor:	
 10854                           ;psect for function _Lcd_Set_Cursor
 10855                           
 10856                           
 10857                           ;incstack = 0
 10858                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10859                           ;Lcd_Set_Cursor@a stored from wreg
 10860  1A71  1283               	bcf	3,5	;RP0=0, select bank0
 10861  1A72  1303               	bcf	3,6	;RP1=0, select bank0
 10862  1A73  00A1               	movwf	Lcd_Set_Cursor@a
 10863  1A74                     l4180:
 10864                           
 10865                           ;LCD.c: 38: void Lcd_Set_Cursor(char a, char b);LCD.c: 39: {;LCD.c: 40:  char c;;LCD.c: 
      +                          41:  if(a == 1)
 10866  1A74  0321               	decf	Lcd_Set_Cursor@a,w
 10867  1A75  1D03               	btfss	3,2
 10868  1A76  2A78               	goto	u6731
 10869  1A77  2A79               	goto	u6730
 10870  1A78                     u6731:
 10871  1A78  2A85               	goto	l4186
 10872  1A79                     u6730:
 10873  1A79                     l4182:
 10874                           
 10875                           ;LCD.c: 42:  {;LCD.c: 43:   c = 0x80 + b -1;
 10876  1A79  0877               	movf	Lcd_Set_Cursor@b,w
 10877  1A7A  3E7F               	addlw	127
 10878  1A7B  00A0               	movwf	??_Lcd_Set_Cursor
 10879  1A7C  0820               	movf	??_Lcd_Set_Cursor,w
 10880  1A7D  00A2               	movwf	Lcd_Set_Cursor@c
 10881  1A7E                     l4184:
 10882                           
 10883                           ;LCD.c: 44:   Lcd_Cmd(c);
 10884  1A7E  0822               	movf	Lcd_Set_Cursor@c,w
 10885  1A7F  160A  158A  223D  160A  158A  	fcall	_Lcd_Cmd
 10886                           
 10887                           ;LCD.c: 45:  }
 10888  1A84  2A96               	goto	l127
 10889  1A85                     l4186:
 10890  1A85  3002               	movlw	2
 10891  1A86  0621               	xorwf	Lcd_Set_Cursor@a,w
 10892  1A87  1D03               	btfss	3,2
 10893  1A88  2A8A               	goto	u6741
 10894  1A89  2A8B               	goto	u6740
 10895  1A8A                     u6741:
 10896  1A8A  2A96               	goto	l127
 10897  1A8B                     u6740:
 10898  1A8B                     l4188:
 10899                           
 10900                           ;LCD.c: 47:  {;LCD.c: 48:   c = 0xC0 + b - 1;
 10901  1A8B  0877               	movf	Lcd_Set_Cursor@b,w
 10902  1A8C  3EBF               	addlw	191
 10903  1A8D  00A0               	movwf	??_Lcd_Set_Cursor
 10904  1A8E  0820               	movf	??_Lcd_Set_Cursor,w
 10905  1A8F  00A2               	movwf	Lcd_Set_Cursor@c
 10906  1A90                     l4190:
 10907                           
 10908                           ;LCD.c: 49:   Lcd_Cmd(c);
 10909  1A90  0822               	movf	Lcd_Set_Cursor@c,w
 10910  1A91  160A  158A  223D  160A  158A  	fcall	_Lcd_Cmd
 10911  1A96                     l127:
 10912  1A96  0008               	return
 10913  1A97                     __end_of_Lcd_Set_Cursor:
 10914                           
 10915                           	psect	text31
 10916  1E95                     __ptext31:	
 10917 ;; *************** function _Lcd_Init *****************
 10918 ;; Defined at:
 10919 ;;		line 53 in file "LCD.c"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;		None
 10922 ;; Auto vars:     Size  Location     Type
 10923 ;;		None
 10924 ;; Return value:  Size  Location     Type
 10925 ;;                  1    wreg      void 
 10926 ;; Registers used:
 10927 ;;		wreg, status,2, status,0, pclath, cstack
 10928 ;; Tracked objects:
 10929 ;;		On entry : 0/0
 10930 ;;		On exit  : 0/0
 10931 ;;		Unchanged: 0/0
 10932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10933 ;;      Params:         0       0       0       0       0
 10934 ;;      Locals:         0       0       0       0       0
 10935 ;;      Temps:          0       3       0       0       0
 10936 ;;      Totals:         0       3       0       0       0
 10937 ;;Total ram usage:        3 bytes
 10938 ;; Hardware stack levels used: 1
 10939 ;; Hardware stack levels required when called: 4
 10940 ;; This function calls:
 10941 ;;		_Lcd_Cmd
 10942 ;;		_Lcd_Port
 10943 ;; This function is called by:
 10944 ;;		_main
 10945 ;; This function uses a non-reentrant model
 10946 ;;
 10947                           
 10948  1E95                     _Lcd_Init:	
 10949                           ;psect for function _Lcd_Init
 10950                           
 10951  1E95                     l4168:	
 10952                           ;incstack = 0
 10953                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10954                           
 10955                           
 10956                           ;LCD.c: 55:   Lcd_Port(0x00);
 10957  1E95  3000               	movlw	0
 10958  1E96  120A  158A  2001  160A  158A  	fcall	_Lcd_Port
 10959  1E9B                     l4170:
 10960                           
 10961                           ;LCD.c: 56:   _delay((unsigned long)((20)*(8000000/4000.0)));
 10962  1E9B  3034               	movlw	52
 10963  1E9C  1283               	bcf	3,5	;RP0=0, select bank0
 10964  1E9D  1303               	bcf	3,6	;RP1=0, select bank0
 10965  1E9E  00A1               	movwf	??_Lcd_Init+1
 10966  1E9F  30F1               	movlw	241
 10967  1EA0  00A0               	movwf	??_Lcd_Init
 10968  1EA1                     u7197:
 10969  1EA1  0BA0               	decfsz	??_Lcd_Init,f
 10970  1EA2  2EA1               	goto	u7197
 10971  1EA3  0BA1               	decfsz	??_Lcd_Init+1,f
 10972  1EA4  2EA1               	goto	u7197
 10973  1EA5                     l4172:
 10974                           
 10975                           ;LCD.c: 57:   Lcd_Cmd(0x30);
 10976  1EA5  3030               	movlw	48
 10977  1EA6  160A  158A  223D  160A  158A  	fcall	_Lcd_Cmd
 10978                           
 10979                           ;LCD.c: 58:   _delay((unsigned long)((5)*(8000000/4000.0)));
 10980  1EAB  300D               	movlw	13
 10981  1EAC  1283               	bcf	3,5	;RP0=0, select bank0
 10982  1EAD  1303               	bcf	3,6	;RP1=0, select bank0
 10983  1EAE  00A1               	movwf	??_Lcd_Init+1
 10984  1EAF  30FB               	movlw	251
 10985  1EB0  00A0               	movwf	??_Lcd_Init
 10986  1EB1                     u7207:
 10987  1EB1  0BA0               	decfsz	??_Lcd_Init,f
 10988  1EB2  2EB1               	goto	u7207
 10989  1EB3  0BA1               	decfsz	??_Lcd_Init+1,f
 10990  1EB4  2EB1               	goto	u7207
 10991  1EB5                     l4174:
 10992                           
 10993                           ;LCD.c: 59:   Lcd_Cmd(0x30);
 10994  1EB5  3030               	movlw	48
 10995  1EB6  160A  158A  223D  160A  158A  	fcall	_Lcd_Cmd
 10996  1EBB                     l4176:
 10997                           
 10998                           ;LCD.c: 60:   _delay((unsigned long)((11)*(8000000/4000.0)));
 10999  1EBB  301D               	movlw	29
 11000  1EBC  1283               	bcf	3,5	;RP0=0, select bank0
 11001  1EBD  1303               	bcf	3,6	;RP1=0, select bank0
 11002  1EBE  00A1               	movwf	??_Lcd_Init+1
 11003  1EBF  3090               	movlw	144
 11004  1EC0  00A0               	movwf	??_Lcd_Init
 11005  1EC1                     u7217:
 11006  1EC1  0BA0               	decfsz	??_Lcd_Init,f
 11007  1EC2  2EC1               	goto	u7217
 11008  1EC3  0BA1               	decfsz	??_Lcd_Init+1,f
 11009  1EC4  2EC1               	goto	u7217
 11010  1EC5  0000               	nop
 11011                           
 11012                           ;LCD.c: 61:   Lcd_Cmd(0x30);
 11013  1EC6  3030               	movlw	48
 11014  1EC7  160A  158A  223D  160A  158A  	fcall	_Lcd_Cmd
 11015                           
 11016                           ;LCD.c: 63:   Lcd_Cmd(0x38);
 11017  1ECC  3038               	movlw	56
 11018  1ECD  160A  158A  223D  160A  158A  	fcall	_Lcd_Cmd
 11019                           
 11020                           ;LCD.c: 64:   Lcd_Cmd(0x0C);
 11021  1ED2  300C               	movlw	12
 11022  1ED3  160A  158A  223D  160A  158A  	fcall	_Lcd_Cmd
 11023                           
 11024                           ;LCD.c: 65:   Lcd_Cmd(0x01);
 11025  1ED8  3001               	movlw	1
 11026  1ED9  160A  158A  223D  160A  158A  	fcall	_Lcd_Cmd
 11027                           
 11028                           ;LCD.c: 66:   Lcd_Cmd(0x06);
 11029  1EDE  3006               	movlw	6
 11030  1EDF  160A  158A  223D  160A  158A  	fcall	_Lcd_Cmd
 11031  1EE4                     l4178:
 11032                           
 11033                           ;LCD.c: 67:   _delay((unsigned long)((100)*(8000000/4000.0)));
 11034  1EE4  3002               	movlw	2
 11035  1EE5  1283               	bcf	3,5	;RP0=0, select bank0
 11036  1EE6  1303               	bcf	3,6	;RP1=0, select bank0
 11037  1EE7  00A2               	movwf	??_Lcd_Init+2
 11038  1EE8  3004               	movlw	4
 11039  1EE9  00A1               	movwf	??_Lcd_Init+1
 11040  1EEA  30B9               	movlw	185
 11041  1EEB  00A0               	movwf	??_Lcd_Init
 11042  1EEC                     u7227:
 11043  1EEC  0BA0               	decfsz	??_Lcd_Init,f
 11044  1EED  2EEC               	goto	u7227
 11045  1EEE  0BA1               	decfsz	??_Lcd_Init+1,f
 11046  1EEF  2EEC               	goto	u7227
 11047  1EF0  0BA2               	decfsz	??_Lcd_Init+2,f
 11048  1EF1  2EEC               	goto	u7227
 11049  1EF2  2EF3               	nop2
 11050  1EF3                     l130:
 11051  1EF3  0008               	return
 11052  1EF4                     __end_of_Lcd_Init:
 11053                           
 11054                           	psect	text32
 11055  1A30                     __ptext32:	
 11056 ;; *************** function _Lcd_Clear *****************
 11057 ;; Defined at:
 11058 ;;		line 32 in file "LCD.c"
 11059 ;; Parameters:    Size  Location     Type
 11060 ;;		None
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;		None
 11063 ;; Return value:  Size  Location     Type
 11064 ;;                  1    wreg      void 
 11065 ;; Registers used:
 11066 ;;		wreg, status,2, status,0, pclath, cstack
 11067 ;; Tracked objects:
 11068 ;;		On entry : 0/0
 11069 ;;		On exit  : 0/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11072 ;;      Params:         0       0       0       0       0
 11073 ;;      Locals:         0       0       0       0       0
 11074 ;;      Temps:          0       0       0       0       0
 11075 ;;      Totals:         0       0       0       0       0
 11076 ;;Total ram usage:        0 bytes
 11077 ;; Hardware stack levels used: 1
 11078 ;; Hardware stack levels required when called: 4
 11079 ;; This function calls:
 11080 ;;		_Lcd_Cmd
 11081 ;; This function is called by:
 11082 ;;		_main
 11083 ;; This function uses a non-reentrant model
 11084 ;;
 11085                           
 11086  1A30                     _Lcd_Clear:	
 11087                           ;psect for function _Lcd_Clear
 11088                           
 11089  1A30                     l4166:	
 11090                           ;incstack = 0
 11091                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 11092                           
 11093                           
 11094                           ;LCD.c: 34:  Lcd_Cmd(0);
 11095  1A30  3000               	movlw	0
 11096  1A31  160A  158A  223D  160A  158A  	fcall	_Lcd_Cmd
 11097                           
 11098                           ;LCD.c: 35:  Lcd_Cmd(1);
 11099  1A36  3001               	movlw	1
 11100  1A37  160A  158A  223D  160A  158A  	fcall	_Lcd_Cmd
 11101  1A3C                     l121:
 11102  1A3C  0008               	return
 11103  1A3D                     __end_of_Lcd_Clear:
 11104                           
 11105                           	psect	text33
 11106  1A3D                     __ptext33:	
 11107 ;; *************** function _Lcd_Cmd *****************
 11108 ;; Defined at:
 11109 ;;		line 23 in file "LCD.c"
 11110 ;; Parameters:    Size  Location     Type
 11111 ;;  a               1    wreg     unsigned char 
 11112 ;; Auto vars:     Size  Location     Type
 11113 ;;  a               1    6[COMMON] unsigned char 
 11114 ;; Return value:  Size  Location     Type
 11115 ;;                  1    wreg      void 
 11116 ;; Registers used:
 11117 ;;		wreg, status,2, status,0, pclath, cstack
 11118 ;; Tracked objects:
 11119 ;;		On entry : 0/0
 11120 ;;		On exit  : 0/0
 11121 ;;		Unchanged: 0/0
 11122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11123 ;;      Params:         0       0       0       0       0
 11124 ;;      Locals:         1       0       0       0       0
 11125 ;;      Temps:          2       0       0       0       0
 11126 ;;      Totals:         3       0       0       0       0
 11127 ;;Total ram usage:        3 bytes
 11128 ;; Hardware stack levels used: 1
 11129 ;; Hardware stack levels required when called: 3
 11130 ;; This function calls:
 11131 ;;		_Lcd_Port
 11132 ;; This function is called by:
 11133 ;;		_Lcd_Clear
 11134 ;;		_Lcd_Set_Cursor
 11135 ;;		_Lcd_Init
 11136 ;;		_Lcd_Shift_Right
 11137 ;;		_Lcd_Shift_Left
 11138 ;; This function uses a non-reentrant model
 11139 ;;
 11140                           
 11141  1A3D                     _Lcd_Cmd:	
 11142                           ;psect for function _Lcd_Cmd
 11143                           
 11144                           
 11145                           ;incstack = 0
 11146                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11147                           ;Lcd_Cmd@a stored from wreg
 11148  1A3D  00F6               	movwf	Lcd_Cmd@a
 11149  1A3E                     l3850:
 11150                           
 11151                           ;LCD.c: 23: void Lcd_Cmd(char a);LCD.c: 24: {;LCD.c: 25:  PORTBbits.RB0 = 0;
 11152  1A3E  1283               	bcf	3,5	;RP0=0, select bank0
 11153  1A3F  1303               	bcf	3,6	;RP1=0, select bank0
 11154  1A40  1006               	bcf	6,0	;volatile
 11155  1A41                     l3852:
 11156                           
 11157                           ;LCD.c: 26:  Lcd_Port(a);
 11158  1A41  0876               	movf	Lcd_Cmd@a,w
 11159  1A42  120A  158A  2001  160A  158A  	fcall	_Lcd_Port
 11160  1A47                     l3854:
 11161                           
 11162                           ;LCD.c: 27:  PORTBbits.RB1 = 1;
 11163  1A47  1283               	bcf	3,5	;RP0=0, select bank0
 11164  1A48  1303               	bcf	3,6	;RP1=0, select bank0
 11165  1A49  1486               	bsf	6,1	;volatile
 11166  1A4A                     l3856:
 11167                           
 11168                           ;LCD.c: 28:     _delay((unsigned long)((4)*(8000000/4000.0)));
 11169  1A4A  300B               	movlw	11
 11170  1A4B  00F5               	movwf	??_Lcd_Cmd+1
 11171  1A4C  3062               	movlw	98
 11172  1A4D  00F4               	movwf	??_Lcd_Cmd
 11173  1A4E                     u7237:
 11174  1A4E  0BF4               	decfsz	??_Lcd_Cmd,f
 11175  1A4F  2A4E               	goto	u7237
 11176  1A50  0BF5               	decfsz	??_Lcd_Cmd+1,f
 11177  1A51  2A4E               	goto	u7237
 11178  1A52  0000               	nop
 11179  1A53                     l3858:
 11180                           
 11181                           ;LCD.c: 29:     PORTBbits.RB1 = 0;
 11182  1A53  1283               	bcf	3,5	;RP0=0, select bank0
 11183  1A54  1303               	bcf	3,6	;RP1=0, select bank0
 11184  1A55  1086               	bcf	6,1	;volatile
 11185  1A56                     l118:
 11186  1A56  0008               	return
 11187  1A57                     __end_of_Lcd_Cmd:
 11188                           
 11189                           	psect	text34
 11190  0801                     __ptext34:	
 11191 ;; *************** function _Lcd_Port *****************
 11192 ;; Defined at:
 11193 ;;		line 19 in file "LCD.c"
 11194 ;; Parameters:    Size  Location     Type
 11195 ;;  a               1    wreg     unsigned char 
 11196 ;; Auto vars:     Size  Location     Type
 11197 ;;  a               1    3[COMMON] unsigned char 
 11198 ;; Return value:  Size  Location     Type
 11199 ;;                  1    wreg      void 
 11200 ;; Registers used:
 11201 ;;		wreg
 11202 ;; Tracked objects:
 11203 ;;		On entry : 0/0
 11204 ;;		On exit  : 0/0
 11205 ;;		Unchanged: 0/0
 11206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11207 ;;      Params:         0       0       0       0       0
 11208 ;;      Locals:         1       0       0       0       0
 11209 ;;      Temps:          0       0       0       0       0
 11210 ;;      Totals:         1       0       0       0       0
 11211 ;;Total ram usage:        1 bytes
 11212 ;; Hardware stack levels used: 1
 11213 ;; Hardware stack levels required when called: 2
 11214 ;; This function calls:
 11215 ;;		Nothing
 11216 ;; This function is called by:
 11217 ;;		_Lcd_Cmd
 11218 ;;		_Lcd_Init
 11219 ;;		_Lcd_Write_Char
 11220 ;; This function uses a non-reentrant model
 11221 ;;
 11222                           
 11223  0801                     _Lcd_Port:	
 11224                           ;psect for function _Lcd_Port
 11225                           
 11226                           
 11227                           ;incstack = 0
 11228                           ; Regs used in _Lcd_Port: [wreg]
 11229                           ;Lcd_Port@a stored from wreg
 11230  0801  00F3               	movwf	Lcd_Port@a
 11231  0802                     l3718:
 11232                           
 11233                           ;LCD.c: 19: void Lcd_Port(char a);LCD.c: 20: {;LCD.c: 21:  PORTD = a;
 11234  0802  0873               	movf	Lcd_Port@a,w
 11235  0803  1283               	bcf	3,5	;RP0=0, select bank0
 11236  0804  1303               	bcf	3,6	;RP1=0, select bank0
 11237  0805  0088               	movwf	8	;volatile
 11238  0806                     l115:
 11239  0806  0008               	return
 11240  0807                     __end_of_Lcd_Port:
 11241                           
 11242                           	psect	text35
 11243  1C5B                     __ptext35:	
 11244 ;; *************** function _isr *****************
 11245 ;; Defined at:
 11246 ;;		line 76 in file "Lab02.c"
 11247 ;; Parameters:    Size  Location     Type
 11248 ;;		None
 11249 ;; Auto vars:     Size  Location     Type
 11250 ;;		None
 11251 ;; Return value:  Size  Location     Type
 11252 ;;                  1    wreg      void 
 11253 ;; Registers used:
 11254 ;;		wreg, status,2, status,0, pclath, cstack
 11255 ;; Tracked objects:
 11256 ;;		On entry : 0/0
 11257 ;;		On exit  : 0/0
 11258 ;;		Unchanged: 0/0
 11259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11260 ;;      Params:         0       0       0       0       0
 11261 ;;      Locals:         0       0       0       0       0
 11262 ;;      Temps:          3       0       0       0       0
 11263 ;;      Totals:         3       0       0       0       0
 11264 ;;Total ram usage:        3 bytes
 11265 ;; Hardware stack levels used: 1
 11266 ;; Hardware stack levels required when called: 1
 11267 ;; This function calls:
 11268 ;;		_TMR0_CARGA
 11269 ;;		_read_ADC
 11270 ;; This function is called by:
 11271 ;;		Interrupt level 1
 11272 ;; This function uses a non-reentrant model
 11273 ;;
 11274                           
 11275  1C5B                     _isr:	
 11276                           ;psect for function _isr
 11277                           
 11278  1C5B                     i1l3544:
 11279                           
 11280                           ;Lab02.c: 77:     TRISB = 0;
 11281  1C5B  1283               	bcf	3,5	;RP0=0, select bank0
 11282  1C5C  1303               	bcf	3,6	;RP1=0, select bank0
 11283  1C5D  1F0C               	btfss	12,6	;volatile
 11284  1C5E  2C60               	goto	u541_21
 11285  1C5F  2C61               	goto	u541_20
 11286  1C60                     u541_21:
 11287  1C60  2C7C               	goto	i1l3554
 11288  1C61                     u541_20:
 11289  1C61                     i1l3546:
 11290                           
 11291                           ;Lab02.c: 78:     TRISC = 0;
 11292  1C61  0C1F               	rrf	31,w	;volatile
 11293  1C62  00F0               	movwf	??_isr
 11294  1C63  0C70               	rrf	??_isr,w
 11295  1C64  390F               	andlw	15
 11296  1C65  3A00               	xorlw	0
 11297  1C66  1D03               	skipz
 11298  1C67  2C69               	goto	u542_21
 11299  1C68  2C6A               	goto	u542_20
 11300  1C69                     u542_21:
 11301  1C69  2C71               	goto	i1l3550
 11302  1C6A                     u542_20:
 11303  1C6A                     i1l3548:
 11304                           
 11305                           ;Lab02.c: 79:     TRISD = 0;
 11306  1C6A  081E               	movf	30,w	;volatile
 11307  1C6B  00F0               	movwf	??_isr
 11308  1C6C  0870               	movf	??_isr,w
 11309  1C6D  1683               	bsf	3,5	;RP0=1, select bank1
 11310  1C6E  1303               	bcf	3,6	;RP1=0, select bank1
 11311  1C6F  00DF               	movwf	_POT_01^(0+128)
 11312  1C70  2C77               	goto	i1l3552
 11313  1C71                     i1l3550:
 11314                           
 11315                           ;Lab02.c: 81: 
 11316  1C71  081E               	movf	30,w	;volatile
 11317  1C72  00F0               	movwf	??_isr
 11318  1C73  0870               	movf	??_isr,w
 11319  1C74  1683               	bsf	3,5	;RP0=1, select bank1
 11320  1C75  1303               	bcf	3,6	;RP1=0, select bank1
 11321  1C76  00DE               	movwf	_POT_02^(0+128)
 11322  1C77                     i1l3552:
 11323                           
 11324                           ;Lab02.c: 82: 
 11325  1C77  160A  158A  2226  160A  158A  	fcall	_read_ADC
 11326  1C7C                     i1l3554:
 11327                           
 11328                           ;Lab02.c: 87:     PORTD = 0;
 11329  1C7C  1D0B               	btfss	11,2	;volatile
 11330  1C7D  2C7F               	goto	u543_21
 11331  1C7E  2C80               	goto	u543_20
 11332  1C7F                     u543_21:
 11333  1C7F  2C9B               	goto	i1l90
 11334  1C80                     u543_20:
 11335  1C80                     i1l3556:
 11336                           
 11337                           ;Lab02.c: 88:     PORTE = 0;
 11338  1C80  3001               	movlw	1
 11339  1C81  00F0               	movwf	??_isr
 11340  1C82  0870               	movf	??_isr,w
 11341  1C83  07F8               	addwf	_counter_tmr0,f
 11342                           
 11343                           ;Lab02.c: 89: 
 11344  1C84  3019               	movlw	25
 11345  1C85  0678               	xorwf	_counter_tmr0,w
 11346  1C86  1D03               	btfss	3,2
 11347  1C87  2C89               	goto	u544_21
 11348  1C88  2C8A               	goto	u544_20
 11349  1C89                     u544_21:
 11350  1C89  2C96               	goto	i1l3566
 11351  1C8A                     u544_20:
 11352  1C8A                     i1l3558:
 11353                           
 11354                           ;Lab02.c: 90: ;Lab02.c: 91: 
 11355  1C8A  01F8               	clrf	_counter_tmr0
 11356  1C8B                     i1l3560:
 11357                           
 11358                           ;Lab02.c: 92:     INTCONbits.GIE = 1;
 11359  1C8B  1283               	bcf	3,5	;RP0=0, select bank0
 11360  1C8C  1303               	bcf	3,6	;RP1=0, select bank0
 11361  1C8D  086D               	movf	_change_POT,w
 11362  1C8E  1D03               	btfss	3,2
 11363  1C8F  2C91               	goto	u545_21
 11364  1C90  2C92               	goto	u545_20
 11365  1C91                     u545_21:
 11366  1C91  2C95               	goto	i1l3564
 11367  1C92                     u545_20:
 11368  1C92                     i1l3562:
 11369                           
 11370                           ;Lab02.c: 93: ;Lab02.c: 94:     initOsc(0);
 11371  1C92  01ED               	clrf	_change_POT
 11372  1C93  0AED               	incf	_change_POT,f
 11373                           
 11374                           ;Lab02.c: 95: 
 11375  1C94  2C96               	goto	i1l3566
 11376  1C95                     i1l3564:
 11377                           
 11378                           ;Lab02.c: 97: ;Lab02.c: 98:     TMR0_init(255);
 11379  1C95  01ED               	clrf	_change_POT
 11380  1C96                     i1l3566:
 11381                           
 11382                           ;Lab02.c: 102: 
 11383  1C96  160A  158A  222A  160A  158A  	fcall	_TMR0_CARGA
 11384  1C9B                     i1l90:
 11385  1C9B  0872               	movf	??_isr+2,w
 11386  1C9C  008A               	movwf	10
 11387  1C9D  0E71               	swapf	??_isr+1,w
 11388  1C9E  0083               	movwf	3
 11389  1C9F  0EFE               	swapf	btemp,f
 11390  1CA0  0E7E               	swapf	btemp,w
 11391  1CA1  0009               	retfie
 11392  1CA2                     __end_of_isr:
 11393                           
 11394                           	psect	intentry
 11395  0004                     __pintentry:	
 11396                           ;incstack = 0
 11397                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
 11398                           
 11399  0004                     interrupt_function:
 11400  007E                     saved_w	set	btemp
 11401  0004  00FE               	movwf	btemp
 11402  0005  0E03               	swapf	3,w
 11403  0006  00F1               	movwf	??_isr+1
 11404  0007  080A               	movf	10,w
 11405  0008  00F2               	movwf	??_isr+2
 11406  0009  160A  158A  2C5B   	ljmp	_isr
 11407                           
 11408                           	psect	text36
 11409  1A26                     __ptext36:	
 11410 ;; *************** function _read_ADC *****************
 11411 ;; Defined at:
 11412 ;;		line 71 in file "ADC.c"
 11413 ;; Parameters:    Size  Location     Type
 11414 ;;		None
 11415 ;; Auto vars:     Size  Location     Type
 11416 ;;		None
 11417 ;; Return value:  Size  Location     Type
 11418 ;;                  2    8[None  ] unsigned int 
 11419 ;; Registers used:
 11420 ;;		None
 11421 ;; Tracked objects:
 11422 ;;		On entry : 0/0
 11423 ;;		On exit  : 0/0
 11424 ;;		Unchanged: 0/0
 11425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11426 ;;      Params:         0       0       0       0       0
 11427 ;;      Locals:         0       0       0       0       0
 11428 ;;      Temps:          0       0       0       0       0
 11429 ;;      Totals:         0       0       0       0       0
 11430 ;;Total ram usage:        0 bytes
 11431 ;; Hardware stack levels used: 1
 11432 ;; This function calls:
 11433 ;;		Nothing
 11434 ;; This function is called by:
 11435 ;;		_isr
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439  1A26                     _read_ADC:	
 11440                           ;psect for function _read_ADC
 11441                           
 11442  1A26                     i1l3266:	
 11443                           ;incstack = 0
 11444                           ; Regs used in _read_ADC: []
 11445                           
 11446                           
 11447                           ;ADC.c: 73:     PIR1bits.ADIF = 0;
 11448  1A26  1283               	bcf	3,5	;RP0=0, select bank0
 11449  1A27  1303               	bcf	3,6	;RP1=0, select bank0
 11450  1A28  130C               	bcf	12,6	;volatile
 11451  1A29                     i1l188:
 11452  1A29  0008               	return
 11453  1A2A                     __end_of_read_ADC:
 11454                           
 11455                           	psect	text37
 11456  1A2A                     __ptext37:	
 11457 ;; *************** function _TMR0_CARGA *****************
 11458 ;; Defined at:
 11459 ;;		line 75 in file "TMR0.c"
 11460 ;; Parameters:    Size  Location     Type
 11461 ;;		None
 11462 ;; Auto vars:     Size  Location     Type
 11463 ;;		None
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  1    wreg      void 
 11466 ;; Registers used:
 11467 ;;		wreg
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11473 ;;      Params:         0       0       0       0       0
 11474 ;;      Locals:         0       0       0       0       0
 11475 ;;      Temps:          0       0       0       0       0
 11476 ;;      Totals:         0       0       0       0       0
 11477 ;;Total ram usage:        0 bytes
 11478 ;; Hardware stack levels used: 1
 11479 ;; This function calls:
 11480 ;;		Nothing
 11481 ;; This function is called by:
 11482 ;;		_isr
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486  1A2A                     _TMR0_CARGA:	
 11487                           ;psect for function _TMR0_CARGA
 11488                           
 11489  1A2A                     i1l3268:	
 11490                           ;incstack = 0
 11491                           ; Regs used in _TMR0_CARGA: [wreg]
 11492                           
 11493                           
 11494                           ;TMR0.c: 77:     TMR0 = 61;
 11495  1A2A  303D               	movlw	61
 11496  1A2B  1283               	bcf	3,5	;RP0=0, select bank0
 11497  1A2C  1303               	bcf	3,6	;RP1=0, select bank0
 11498  1A2D  0081               	movwf	1	;volatile
 11499  1A2E                     i1l3270:
 11500                           
 11501                           ;TMR0.c: 78:     INTCONbits.T0IF = 0;
 11502  1A2E  110B               	bcf	11,2	;volatile
 11503  1A2F                     i1l212:
 11504  1A2F  0008               	return
 11505  1A30                     __end_of_TMR0_CARGA:
 11506  007E                     btemp	set	126	;btemp
 11507  007E                     wtemp0	set	126
 11508                           
 11509                           	psect	idloc
 11510                           
 11511                           ;Config register IDLOC0 @ 0x2000
 11512                           ;	unspecified, using default values
 11513  2000                     	org	8192
 11514  2000  3FFF               	dw	16383
 11515                           
 11516                           ;Config register IDLOC1 @ 0x2001
 11517                           ;	unspecified, using default values
 11518  2001                     	org	8193
 11519  2001  3FFF               	dw	16383
 11520                           
 11521                           ;Config register IDLOC2 @ 0x2002
 11522                           ;	unspecified, using default values
 11523  2002                     	org	8194
 11524  2002  3FFF               	dw	16383
 11525                           
 11526                           ;Config register IDLOC3 @ 0x2003
 11527                           ;	unspecified, using default values
 11528  2003                     	org	8195
 11529  2003  3FFF               	dw	16383
 11530                           
 11531                           	psect	config
 11532                           
 11533                           ;Config register CONFIG1 @ 0x2007
 11534                           ;	Oscillator Selection bits
 11535                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11536                           ;	Watchdog Timer Enable bit
 11537                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11538                           ;	Power-up Timer Enable bit
 11539                           ;	PWRTE = OFF, PWRT disabled
 11540                           ;	RE3/MCLR pin function select bit
 11541                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11542                           ;	Code Protection bit
 11543                           ;	CP = OFF, Program memory code protection is disabled
 11544                           ;	Data Code Protection bit
 11545                           ;	CPD = OFF, Data memory code protection is disabled
 11546                           ;	Brown Out Reset Selection bits
 11547                           ;	BOREN = OFF, BOR disabled
 11548                           ;	Internal External Switchover bit
 11549                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11550                           ;	Fail-Safe Clock Monitor Enabled bit
 11551                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11552                           ;	Low Voltage Programming Enable bit
 11553                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11554                           ;	In-Circuit Debugger Mode bit
 11555                           ;	DEBUG = 0x1, unprogrammed default
 11556  2007                     	org	8199
 11557  2007  20D4               	dw	8404
 11558                           
 11559                           ;Config register CONFIG2 @ 0x2008
 11560                           ;	Brown-out Reset Selection bit
 11561                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11562                           ;	Flash Program Memory Self Write Enable bits
 11563                           ;	WRT = OFF, Write protection off
 11564  2008                     	org	8200
 11565  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    144
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     77      78
    BANK1            80     47      69
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> VOTAJE_L01(BANK1[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[4]), VOTAJE_L01(BANK1[5]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___flmul->___awmod
    ___flmul->___lwmod
    _setup->_initADC
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   43472
                                             43 BANK1      4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                           ___xxtofl
                          _adc_start
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   36238
                                              8 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8904
                                             37 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2065
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6600
                                             37 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                             11 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             56 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             57 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     306
                          _TMR0_init
                            _initADC
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      44
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              5     3      2     218
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_init                                            3     3      0      44
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adc_start                                            3     2      1     164
                                              3 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     552
                                              0 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     614
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0      93
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _TMR0_CARGA
                           _read_ADC
 ---------------------------------------------------------------------------------
 (6) _read_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_CARGA                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _adc_start
   _setup
     _TMR0_init
     _initADC
     _initOsc
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _isr (ROOT)
   _TMR0_CARGA
   _read_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2F      45       7       86.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9E      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Aug 02 22:30:27 2022

                       pc 0002                        l93 1AE9              ___awdiv@sign 0028  
                      fsr 0004       ___wmul@multiplicand 0075       __Umul8_16@word_mpld 0022  
                     l200 1D9B                       l121 1A3C                       l130 1EF3  
                     l202 1D9F                       l115 0806                       l203 1DA3  
                     l204 1DA7                       l133 1A70                       l205 1DAB  
                     l118 1A56                       l206 1DAF                       l127 1A96  
                     l207 1DB3                       l208 1DB7                       l209 1DE3  
                     l321 0FFF                       l314 1577                       l139 1C14  
                     l340 0093                       l157 1B8D                       l174 1CCF  
                     l185 1BCE                       l601 111E                       l178 1CED  
                     l427 1F5B                       l604 1133                       l612 126F  
                     l197 1D99                       l381 0744                       l373 057D  
                     l366 0539                       l391 1AFA                       l608 12AC  
                     l544 07F4                       l393 1B14                       l561 136A  
                     l609 121E                       l722 1682                       l562 12CF  
                     l731 17FF                       l619 129F                       l707 1B50  
                     l387 078B                       l724 1659                       l572 135D  
                     l820 0C08                       l565 132D                       l557 1E94  
                     l582 1F7A                       l590 07FF                       l718 15DB  
                     l814 0C9C                       l743 1771                       l647 1E39  
                     l760 17F3                       l752 17D1                       l577 1D0C  
                     l585 1FE6                       l761 17FF                       l833 1AAD  
                     l578 1D28                       l586 1FFF                       l594 1133  
                     l826 0C90                       l579 1D3D                       l739 174D  
                     l835 1ABF                       l764 1D8D                       l860 11EF  
                     l749 1793                       l871 11B9                       l872 11C5  
                     l864 119D                       l697 1C5A                       l858 1158  
                     l878 0818  TMR0_init@prescaler_VALUE 0075                       _isr 1C5B  
                     fsr0 0004                       indf 0000              ___awmod@sign 0021  
            ___flmul@aexp 003D              ___flmul@bexp 003E              ___flmul@sign 0038  
            ___flmul@temp 0043              ___flmul@prod 003F              ___fltol@exp1 0062  
                    l4000 12F4                      l4010 1327                      l4002 12FD  
                    l2330 1A9C                      l3300 1B8F                      l2500 15B3  
                    l4012 1331                      l4020 134B                      l4004 130F  
                    l2332 1AA3                      l3310 1BB8                      l3302 1B95  
                    l2510 15C8                      l2502 15B9                      l4110 1E02  
                    l4102 1DE4                      l4006 131D                      l2334 1AA7  
                    l3312 1BBC                      l3304 1B9E                      l3152 07F5  
                    l2600 1725                      l2520 15E5                      l2512 15D0  
                    l2504 15BD                      l3216 1D3E                      l3160 10B8  
                    l4112 1E14                      l4104 1DEE                      l4040 1B08  
                    l4032 1AEA                      l4008 131E                      l2336 1AB6  
                    l2328 1A9A                      l4200 0025                      l3314 1BC7  
                    l3306 1BA3                      l3154 07FD                      l2610 175A  
                    l2602 172B                      l2530 15F9                      l2522 15E9  
                    l2514 15D1                      l2506 15BE                      l3218 1D42  
                    l3170 10E4                      l3162 10C5                      l4050 1F09  
                    l4114 1E22                      l4106 1DF1                      l4042 1B0E  
                    l4034 1AEE                      l4130 1160                      l4122 1137  
                    l4026 1352                      l4018 1339                      l2338 1ABB  
                    l4210 003E                      l4202 002A                      l3316 1BCB  
                    l3308 1BAF                      l3156 07FF                      l2620 1775  
                    l2604 1730                      l2540 160D                      l2532 15FD  
                    l2524 15ED                      l2508 15C3                      l2516 15D3  
                    l3172 10EC                      l4060 1F43                      l4052 1F16  
                    l4116 1E2B                      l4108 1DFE                      l4036 1AF2  
                    l4140 1182                      l4124 113C                      l4028 1362  
                    l2700 098C                      l4220 0067                      l4212 004A  
                    l4204 0030                      l4070 1CEE                      l2622 1778  
                    l2614 1763                      l2606 173F                      l2630 1785  
                    l2550 1621                      l2542 1611                      l2534 1601  
                    l2526 15F1                      l2518 15E1                      l3190 1113  
                    l3182 10FA                      l3174 10EE                      l3166 10CE  
                    l4062 1F44                      l4054 1F1A                      l4046 1EF4  
                    l4118 1E31                      l4038 1B01                      l4150 11B3  
                    l4142 1186                      l4134 1169                      l4126 1140  
                    l2702 098E                      l4310 0438                      l4302 03C9  
                    l4222 007A                      l4214 004B                      l4206 0037  
                    l3280 1AD5                      l3272 1AC0                      l4072 1D04  
                    l2640 1798                      l2632 1786                      l2624 177A  
                    l2616 176C                      l2608 1755                      l2560 1666  
                    l2544 1615                      l2536 1605                      l2528 15F5  
                    l2552 1625                      l2480 1589                      l3192 1123  
                    l3176 10F2                      l3184 110C                      l3168 10E3  
                    l4064 1F4D                      l4056 1F23                      l4048 1F06  
                    l4160 11E6                      l4152 11BD                      l4144 1194  
                    l4136 116E                      l4128 1150                      l2800 0C88  
                    l2720 09FF                      l2712 09A9                      l2704 0996  
                    l4320 0471                      l4304 03D2                      l4240 00C5  
                    l4232 0095                      l4224 007E                      l4216 004F  
                    l4208 003C                      l4170 1E9B                      l2810 1B5D  
                    l3282 1ADB                      l3274 1AC3                      l4074 1D20  
                    l4090 1F9A                      l4082 1F5C                      l2650 17D6  
                    l2642 179D                      l2634 178A                      l2626 177F  
                    l2618 1770                      l2562 1668                      l2570 167A  
                    l2554 1626                      l2546 1619                      l2538 1609  
                    l2490 159D                      l2482 158A                      l2474 1578  
                    l3194 1128                      l4058 1F35                      l4066 1F53  
                    l4162 11E7                      l4154 11C7                      l4146 11A4  
                    l4138 117B                      l2802 0C89                      l2730 0A7C  
                    l2722 0A2B                      l2714 09B9                      l2706 099B  
                    l4330 04EE                      l4322 047B                      l4306 0407  
                    l4250 011B                      l4242 00D3                      l4234 00B1  
                    l4218 0052                      l4226 008F                      l4410 0819  
                    l4172 1EA5                      l4180 1A74                      l2820 1B6D  
                    l2812 1B61                      l3284 1AE1                      l3276 1AC5  
                    l4076 1D3A                      l4092 1FBE                      l4084 1F72  
                    l2660 17ED                      l2652 17DB                      l2644 17AB  
                    l2636 1790                      l2628 1781                      l2580 16AB  
                    l2572 1686                      l2564 166C                      l2556 163D  
                    l2548 161D                      l2484 158F                      l2492 159F  
                    l2476 157F                      l4156 11DD                      l4148 11AF  
                    l2804 0C94                      l2740 0AFC                      l2732 0A99  
                    l2724 0A47                      l2716 09C6                      l2708 09A0  
                    l4340 0554                      l4332 052D                      l4324 0487  
                    l4316 043A                      l4308 0436                      l4260 016A  
                    l4252 011F                      l4244 00D7                      l4236 00BD  
                    l4228 0091                      l4420 0876                      l4412 081E  
                    l4166 1A30                      l4174 1EB5                      l4190 1A90  
                    l4182 1A79                      l2822 1B6F                      l2814 1B63  
                    l3278 1AD4                      l4078 1D3C                      l4094 1FC2  
                    l4086 1F8E                      l2662 17EF                      l2654 17E3  
                    l2646 17AF                      l2590 16C2                      l2582 16AF  
                    l2574 168B                      l2566 166D                      l2558 165D  
                    l2494 15A7                      l2486 1594                      l2478 1585  
                    l4158 11E2                      l2750 0BB4                      l2742 0B29  
                    l2734 0AA9                      l2726 0A63                      l2718 09E3  
                    l2670 0943                      l4350 058B                      l4342 0561  
                    l4334 0541                      l4326 048E                      l4270 0201  
                    l4262 018D                      l4254 0146                      l4246 00FE  
                    l4238 00C1                      l4430 08FE                      l4422 08BC  
                    l4414 0823                      l4176 1EBB                      l4168 1E95  
                    l4184 1A7E                      l4192 1BCF                      l2840 1D92  
                    l2824 1B71                      l2816 1B67                      l2832 1B77  
                    l2808 1B52                      l4096 1FFC                      l4088 1F96  
                    l2664 17FA                      l2656 17E8                      l2648 17CD  
                    l2592 16C3                      l2584 16B3                      l2568 1676  
                    l2496 15AC                      l2488 159C                      l2760 0BD9  
                    l2752 0BBD                      l2744 0B39                      l2736 0AC6  
                    l2728 0A6C                      l2680 0958                      l2672 0949  
                    l3720 078C                      l4360 066A                      l4352 0592  
                    l4344 0570                      l4336 054A                      l4328 0493  
                    l4280 0271                      l4272 0228                      l4264 0191  
                    l4256 0151                      l4248 0117                      l4432 0906  
                    l4424 08C3                      l4416 0828                      l4178 1EE4  
                    l4186 1A85                      l4194 1BD4                      l2850 1DE1  
                    l2842 1D97                      l2826 1B73                      l2818 1B69  
                    l4098 1FFE                      l2666 17FE                      l2658 17E9  
                    l2594 16CC                      l2586 16BC                      l2578 1694  
                    l2498 15B2                      l2770 0BF1                      l2762 0BE2  
                    l2754 0BCB                      l2746 0B66                      l2738 0ADF  
                    l2690 0975                      l2682 0960                      l2674 094D  
                    l3810 1C29                      l3802 1C15                      l3730 079E  
                    l3722 078F                      l4370 071F                      l4362 06A9  
                    l4354 0596                      l4346 0577                      l4338 054E  
                    l4290 0326                      l4282 02B8                      l4274 0231  
                    l4266 0197                      l4258 0157                      l4530 00A9  
                    l4434 0911                      l4426 08CB                      l4418 0830  
                    l4188 1A8B                      l4196 1BF0                      l2852 1DE2  
                    l2860 1CA4                      l4532 1B7F                      l2828 1B75  
                    l2588 16BE                      l2596 16D1                      l2780 0C20  
                    l2772 0C05                      l2756 0BD4                      l2764 0BE8  
                    l2748 0B8C                      l2692 0979                      l2684 0962  
                    l2676 094E                      l2668 093C                      l3820 1C49  
                    l3812 1C2D                      l3804 1C19                      l3740 07B2  
                    l3732 07A3                      l3724 0793                      l3900 0D97  
                    l4380 073E                      l4372 0723                      l4364 06B5  
                    l4356 05B4                      l4348 0586                      l4292 034F  
                    l4284 02C7                      l4276 025A                      l4268 01B6  
                    l4428 08D6                      l3718 0802                      l4198 1BF8  
                    l2846 1DBB                      l2838 1D8F                      l4534 1CC4  
                    l2862 1CA9                      l2870 1CBC                      l2598 16E7  
                    l2790 0C5B                      l2782 0C24                      l2766 0BEC  
                    l2758 0BD8                      l2694 097A                      l2686 096A  
                    l2678 0953                      l3822 1C50                      l3814 1C31  
                    l3806 1C1F                      l3830 1B1B                      l3750 07D8  
                    l3742 07B9                      l3734 07A7                      l3726 0798  
                    l3902 0D9E                      l3910 0E53                      l4390 076D  
                    l4382 074F                      l4374 0729                      l4358 060F  
                    l4366 0710                      l4294 0358                      l4286 02F0  
                    l4278 0262                      l4536 1DC3                      l2848 1DDD  
                    l2880 1CE7                      l2872 1CD2                      l2864 1CB0  
                    l2792 0C6A                      l2784 0C3D                      l2776 0C0D  
                    l2768 0BED                      l2696 097F                      l2688 096F  
                    l3816 1C42                      l3808 1C22                      l3824 1C56  
                    l3840 1B39                      l3832 1B20                      l3760 07F0  
                    l3752 07D9                      l3744 07BD                      l3736 07A9  
                    l3728 079A                      l3920 0F4B                      l3912 0E5A  
                    l4384 0750                      l4368 0718                      l4296 0360  
                    l4288 0317                      l4376 0730                      l3850 1A3E  
                    l2882 1CEA                      l2874 1CDC                      l2866 1CB7  
                    l2858 1CA3                      l3930 1203                      l2794 0C74  
                    l2778 0C12                      l2786 0C43                      l2698 0984  
                    l3818 1C48                      l3842 1B3F                      l3834 1B27  
                    l2970 080F                      l3754 07E0                      l3746 07C1  
                    l3738 07AF                      l3770 1E46                      l3906 0E26  
                    l4386 075F                      l4378 0736                      l4298 037E  
                    l4394 0775                      l3852 1A41                      l3860 1A58  
                    l2876 1CDF                      l3940 121F                      l2796 0C76  
                    l2788 0C50                      l3844 1B46                      l3836 1B2B  
                    l3828 1B15                      l2972 0815                      l3748 07D2  
                    l3756 07E6                      l3780 1E5A                      l3772 1E48  
                    l3764 1E3A                      l3924 0FD3                      l4388 075F  
                    l4396 0787                      l3854 1A47                      l3862 1A5B  
                    l2878 1CE6                      l3950 1248                      l3942 1225  
                    l3934 120C                      l2798 0C84                      l3838 1B2F  
                    l3846 1B4C                      l3870 136E                      l2974 0817  
                    l2966 0808                      l3758 07EB                      l3790 1E79  
                    l3782 1E61                      l3774 1E4C                      l3766 1E3D  
                    l3918 0F44                      l3856 1A4A                      l3864 1A61  
                    l3960 1273                      l3952 1256                      l3944 1234  
                    l3928 11F0                      l3880 1489                      l3872 1374  
                    l2968 0809                      l3792 1E80                      l3784 1E65  
                    l3776 1E51                      l3768 1E41                      l3858 1A53  
                    l3866 1A64                      l3954 1260                      l3946 1236  
                    l3786 1E69                      l3778 1E57                      l3794 1E86  
                    l3890 0CA4                      l3868 1A6D                      l3980 12AD  
                    l3956 1261                      l3948 123F                      l3884 1534  
                    l3796 1E8B                      l3788 1E73                      l3892 0CA6  
                    l3982 12BA                      l3974 1294                      l3966 127B  
                    l3958 1269                      l3878 1483                      l3798 1E90  
                    l3894 0CAD                      l3992 12D0                      l3976 12A4  
                    l3968 128D                      l3888 0CA0                      l3994 12D8  
                    l3986 12C3                      l3996 12E9                      ?_isr 0070  
                    l3998 12EB                      STR_1 10A7                      STR_2 10A1  
                    STR_3 10AB                      STR_4 10A0                      u3100 158F  
                    u3101 158E                      u3110 1594                      u3111 1593  
                    u3200 1649                      u3120 15B2                      u3121 15B1  
                    u3210 165D                      u3130 15BD                      u3211 165C  
                    u3131 15BC                      u3300 16C2                      u3220 166C  
                    u3140 15C3                      u3301 16C1                      u3221 166B  
                    u3141 15C2                      u3150 15C8                      u3151 15C7  
                    u5000 1BB8                      u3400 1775                      u3320 16E7  
                    u3240 1682                      u3160 15E1                      u5001 1BB7  
                    u3401 1774                      u3321 16E6                      u3241 1681  
                    u3161 15E0                      u3410 177F                      u3250 1686  
                    u3170 15E5                      u3090 1589                      u3411 177E  
                    u3331 16FE                      u3323 16E3                      u3315 16C5  
                    u3251 1685                      u3235 166F                      u3171 15E4  
                    u3091 1588                      u3500 17D6                      u3420 1785  
                    u3340 1712                      u3332 16FF                      u3260 168B  
                    u3180 163D                      u3501 17D5                      u3421 1784  
                    u3341 1713                      u3333 1704                      u3261 168A  
                    u3181 163C                      u3510 17DB                      u3430 178A  
                    u3350 1730                      u3342 1718                      u3334 1705  
                    u3190 1648                      u3511 17DA                      u3431 1789  
                    u3351 172F                      u3343 1719                      u3335 170A  
                    u3271 169D                      u3191 1646                      u3520 17E8  
                    u3440 1790                      u3360 1755                      u3336 170B  
                    u3280 16AF                      u3272 16A4                      u3600 0984  
                    u3521 17E7                      u3441 178F                      u3361 1754  
                    u3281 16AE                      u3273 16AB                      u3185 1639  
                    u3601 0983                      u3530 17ED                      u3450 1797  
                    u3370 175A                      u3290 16B3                      u3610 099B  
                    u3531 17EC                      u3451 1796                      u3371 1759  
                    u3291 16B2                      u3611 099A                      u3540 17FE  
                    u3460 179D                      u2740 1AA7                      u3620 09A0  
                    u4180 080F                      u6020 0F4B                      u3541 17FD  
                    u3461 179C                      u2741 1AA6                      u3621 099F  
                    u4181 080E                      u6021 0F4A                      u6005 0EB8  
                    u3470 17AF                      u3390 1770                      u6110 126F  
                    u3550 094D                      u4190 0815                      u3471 17AE  
                    u3391 176F                      u6111 126E                      u3711 0AEE  
                    u3631 09F1                      u3551 094C                      u4191 0814  
                    u6015 0F03                      u3480 17BE                      u6200 12CE  
                    u6120 1273                      u2760 1ABB                      u3800 0BD8  
                    u3712 0AF5                      u3632 09F8                      u3560 0953  
                    u7000 0561                      u3385 1765                      u6201 12CD  
                    u6121 1272                      u6105 1262                      u2761 1ABA  
                    u3801 0BD7                      u3721 0B1B                      u3713 0AFC  
                    u3705 0AC8                      u3641 0A0D                      u3633 09FF  
                    u3561 0952                      u7001 0560                      u3490 17CD  
                    u6130 127A                      u3722 0B22                      u3642 0A14  
                    u3570 0958                      u7010 0570                      u3491 17CC  
                    u6131 1279                      u2755 1AAE                      u3731 0B48  
                    u3723 0B29                      u3651 0A39                      u3643 0A1B  
                    u3571 0957                      u6035 0F5E                      u7011 056F  
                    u4700 10F2                      u6220 130F                      u6060 1203  
                    u3900 0C6A                      u3820 0BEC                      u3740 0B72  
                    u3732 0B4F                      u3652 0A40                      u3580 0979  
                    u5500 079E                      u7100 075F                      u7020 058B  
                    u3485 17B9                      u4701 10F1                      u6221 130E  
                    u6061 1202                      u3901 0C69                      u3821 0BEB  
                    u3733 0B56                      u3661 0A55                      u3653 0A47  
                    u3581 0978                      u5501 079D                      u6045 0F9A  
                    u7101 075E                      u7021 058A                      u7005 055D  
                    u4710 10F9                      u6310 1362                      u6150 128C  
                    u6070 121D                      u3910 0C88                      u3830 0BF1  
                    u3662 0A5C                      u3590 097F                      u5510 07AF  
                    u7110 076D                      u4711 10F8                      u6311 1361  
                    u6215 12F6                      u6151 128B                      u6071 121C  
                    u3911 0C87                      u3831 0BF0                      u3815 0BDB  
                    u3751 0B7E                      u3663 0A63                      u3591 097E  
                    u5511 07AE                      u6055 0FD6                      u7111 076C  
                    u7015 056C                      u3920 1D97                      u6400 1F35  
                    u6320 1AF2                      u6240 132D                      u6160 1293  
                    u3840 0C05                      u3760 0B9A                      u3752 0B85  
                    u5600 1E4C                      u7120 0787                      u3921 1D96  
                    u6401 1F34                      u6321 1AF1                      u6305 1354  
                    u6241 132C                      u6225 130B                      u6161 1292  
                    u6145 127C                      u3905 0C66                      u3841 0C04  
                    u3753 0B8C                      u3745 0B6D                      u3681 0A8B  
                    u5601 1E4B                      u7121 0786                      u7105 075B  
                    u4730 110B                      u6250 1331                      u6090 1256  
                    u3850 0C0C                      u3682 0A92                      u5530 07C1  
                    u5610 1E57                      u7050 0717                      u7130 08C3  
                    u4731 110A                      u6251 1330                      u6235 1320  
                    u6091 1255                      u3851 0C0B                      u3771 0BA6  
                    u3691 0AB8                      u3683 0A99                      u3675 0A65  
                    u5531 07C0                      u5611 1E56                      u7051 0716  
                    u7035 0612                      u7131 08C2                      u6500 1FC2  
                    u4740 1112                      u6420 1F53                      u6260 1338  
                    u6180 12A4                      u3860 0C12                      u3772 0BAD  
                    u3692 0ABF                      u5700 1C31                      u7060 072F  
                    u6501 1FC1                      u4741 1111                      u4725 10FB  
                    u6421 1F52                      u6405 1F31                      u6261 1337  
                    u6181 12A3                      u6085 1241                      u3861 0C11  
                    u3773 0BB4                      u3765 0B95                      u3693 0AC6  
                    u5701 1C30                      u5525 07B3                      u7061 072E  
                    u7045 06B8                      u6430 1D04                      u4670 07FD  
                    u6350 1B0E                      u6190 12BA                      u3870 0C24  
                    u5550 07D2                      u5630 1E69                      u7070 0736  
                    u7207 1EB1                      u6431 1D03                      u6511 1FD1  
                    u4671 07FC                      u6415 1F45                      u6351 1B0D  
                    u6335 1AFB                      u6191 12B9                      u6175 1296  
                    u6095 1252                      u3871 0C23                      u5551 07D1  
                    u5631 1E68                      u7071 0735                      u6440 1D20  
                    u6520 1FFC                      u6512 1FD2                      u4760 1123  
                    u4680 10C5                      u6360 1F06                      u6600 1140  
                    u6280 134A                      u3880 0C33                      u5720 1C42  
                    u5800 1B4C                      u5640 1E73                      u7080 073E  
                    u7217 1EC1                      u6441 1D1F                      u6521 1FFB  
                    u6513 1FD7                      u4761 1122                      u4681 10C4  
                    u6361 1F05                      u6345 1B02                      u6601 113F  
                    u6281 1349                      u3785 0BB6                      u5721 1C41  
                    u5801 1B4B                      u5545 07C2                      u5641 1E72  
                    u5625 1E5B                      u7081 073D                      i1l90 1C9B  
                    u6450 1D3A                      u6514 1FD8                      u4770 1128  
                    u4690 10DC                      u6530 1DEE                      u6610 1160  
                    u6290 1351                      u3890 0C50                      u5810 1374  
                    u5570 07E6                      u5490 0793                      u7090 074F  
                    u7227 1EEC                      u7147 1CE1                      u6451 1D39  
                    u6515 1FDD                      u4771 1127                      u4755 1115  
                    u6531 1DED                      u6611 115F                      u6291 1350  
                    u6275 133A                      u3891 0C4F                      u3795 0BCD  
                    u5715 1C32                      u5811 1373                      u5571 07E5  
                    u5555 07CE                      u5491 0792                      u7091 074E  
                    u6516 1FDE                      u6460 1F72                      u6380 1F1A  
                    u6700 11D2                      u5740 1C56                      u5580 07EB  
                    u5660 1E86                      u5900 0CAD                      u7237 1A4E  
                    u7157 1BA0                      u6525 1FF8                      u6461 1F71  
                    u6381 1F19                      u3885 0C2E                      u5741 1C55  
                    u5725 1C3E                      u5581 07EA                      u5565 07DA  
                    u5661 1E85                      u5645 1E6F                      u5901 0CAC  
                    u6470 1F8E                      u6550 1E02                      u6710 11E2  
                    u6630 1181                      u5750 1B1B                      u5670 1E8B  
                    u5590 1E41                      u7167 1BBA                      u6455 1D36  
                    u6471 1F8D                      u4695 10D7                      u6375 1F0B  
                    u6551 1E01                      u6711 11E1                      u6631 1180  
                    u3895 0C4C                      u5735 1C4A                      u5751 1B1A  
                    u5671 1E8A                      u5655 1E7A                      u5591 1E40  
                    u7095 074B                      u6480 1F9A                      u6560 1E14  
                    u6720 11E6                      u5680 1C1F                      u6800 008E  
                    u7177 1BC9                      u6481 1F99                      u6561 1E13  
                    u6545 1DF3                      u6721 11E5                      u6705 11CD  
                    u6625 1173                      u5681 1C1E                      u5825 1391  
                    u6801 008D                      u6730 1A79                      u6650 11A3  
                    u5770 1B2F                      u5850 1489                      u6810 00BD  
                    u6731 1A78                      u7187 1A68                      u6491 1FA9  
                    u6395 1F1C                      u6651 11A2                      u5771 1B2E  
                    u5851 1488                      u5835 13ED                      u5915 0CCF  
                    u6811 00BC                      u6740 1A8B                      u4980 1B95  
                    u6492 1FAA                      u6580 1E31                      u5780 1B39  
                    u5940 0D9E                      u6900 02F0                      u6820 00C1  
                    u7197 1EA1                      u6741 1A8A                      u4981 1B94  
                    u6493 1FAF                      u6581 1E30                      u6565 1E10  
                    u6645 1195                      u5781 1B38                      u5765 1B21  
                    u5845 1442                      u5941 0D9D                      u5925 0D0B  
                    u6901 02EF                      u6821 00C0                      u6750 1BDE  
                    u4990 1B9E                      u6494 1FB0                      u6670 11B3  
                    u6590 113C                      u6910 0317                      u6830 00FE  
                    u4991 1B9D                      u6495 1FB5                      u6575 1E23  
                    u6671 11B2                      u6591 113B                      u5695 1C23  
                    u5935 0D56                      u6911 0316                      u6831 00FD  
                    u6760 1C02                      u6496 1FB6                      u6680 11B9  
                    u6920 0326                      u6840 0146                      u6681 11B8  
                    u6665 11A8                      u5785 1B35                      u5865 14A6  
                    u6921 0325                      u6841 0145                      u6770 1C14  
                    u6690 11BD                      u5890 0CA4                      u6930 034F  
                    u6850 0191                      u6771 1C13                      u6691 11BC  
                    u5795 1B40                      u5875 14F3                      u5955 0DB1  
                    u5891 0CA3                      u6931 034E                      u6851 0190  
                    u5980 0E5A                      u6860 0228                      u6780 0030  
                    u5885 153F                      u5981 0E59                      u5965 0DED  
                    u6925 0322                      u6861 0227                      u6781 002F  
                    u6950 0470                      u6870 025A                      u6790 004A  
                    u5975 0E29                      u6951 046F                      u6871 0259  
                    u6791 0049                      u6960 047B                      u6880 0271  
                    u6961 047A                      u6945 043D                      u6881 0270  
                    u6970 0487                      u6890 02C7                      u5995 0E7C  
                    u6971 0486                      u6955 046C                      u6891 02C6  
                    u6885 026D                      u6990 0540                      u6991 053F  
                    u6895 02C3                      u6985 0496                      _TMR0 0001  
       ?_Lcd_Write_String 0020                      _main 0819                      btemp 007E  
                    start 000C        ??_Lcd_Write_String 0022              _sprintf$1178 00B2  
         __end_of_Lcd_Cmd 1A57                     ??_isr 0070             ___fltol@sign1 0061  
         __end_of___fladd 1800                     ?_main 0070           __end_of___awdiv 07F5  
         __end_of___flneg 0800           __end_of___awmod 1E95           __end_of___flmul 0C9D  
         __end_of___flsub 1D8E           __end_of___fltol 1134                     _ANSEL 0188  
         __end_of___lldiv 1F5C           ___awdiv@divisor 0022           __end_of___llmod 1E3A  
             ?_TMR0_CARGA 0070           __end_of___lwdiv 1C5B                     i1l212 1A2F  
         __end_of___lwmod 1B51                     i1l188 1A29           ___awdiv@counter 0027  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089           __end_of_initADC 1CEE           __end_of_dpowers 10A0  
         __end_of_initOsc 1B8E                     _scale 0C9D           __end_of_isdigit 0819  
                   _setup 1AC0                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 078C          __end_of_Lcd_Init 1EF4  
        __end_of_Lcd_Port 0807           __initialization 000F              __end_of_main 093C  
                  ??_main 00CB          ___llmod@dividend 0024                    ?_scale 0045  
                  _ADRESH 001E          ___awdiv@dividend 0024                    ?_setup 0070  
                  _ANSELH 0189                    i1l3270 1A2E                    i1l3266 1A26  
                  i1l3268 1A2A                    i1l3550 1C71                    i1l3560 1C8B  
                  i1l3552 1C77                    i1l3544 1C5B                    i1l3562 1C92  
                  i1l3546 1C61                    i1l3554 1C7C                    i1l3564 1C95  
                  i1l3556 1C80                    i1l3548 1C6A                    i1l3558 1C8A  
                  i1l3566 1C96                    u541_20 1C61               initOsc@freq 0075  
                  u541_21 1C60                    u542_20 1C6A                    u542_21 1C69  
                  u543_20 1C80                    u543_21 1C7F                    u544_20 1C8A  
                  u544_21 1C89                    u545_20 1C92                    u545_21 1C91  
               ??_Lcd_Cmd 0074                    _POT_01 00DF                    _POT_02 00DE  
        __end_of___xxtofl 11F0          __end_of__powers_ 1044                    ___flge 1F5C  
                  ___fleq 1CEE                 ??___fladd 0061                    ___wmul 1AEA  
               ??___awdiv 0026                 ??___flneg 0077                 ??___awmod 0077  
               ??___flmul 0033                 ??___flsub 0078                 ??___fltol 005C  
               ??___lldiv 0073         __end_of_TMR0_init 1DE4                 ??___llmod 0073  
               ??___lwdiv 0025          __end_of_read_ADC 1A2A                 ??___lwmod 0077  
                  _fround 136B          ___awdiv@quotient 0029           ___awmod@divisor 0073  
         ___awmod@counter 0020                 ??_initADC 0075                 ??_initOsc 0073  
               ??_isdigit 0073                    saved_w 007E                 ??_sprintf 00AD  
         Lcd_Set_Cursor@a 0021           Lcd_Set_Cursor@b 0077           Lcd_Set_Cursor@c 0022  
              ___flge@ff1 0020                ___flge@ff2 0024              ___xxtofl@arg 0026  
            ___xxtofl@exp 0025              ___xxtofl@val 0073                ___fleq@ff1 0020  
              ___fleq@ff2 0024   __end_of__initialization 001E                ___flneg@f1 0073  
       __end_of_Lcd_Clear 1A3D                ___fltol@f1 0058            __pcstackCOMMON 0070  
           __end_of_scale 1000             __end_of_setup 1AEA            _Lcd_Set_Cursor 1A71  
              __div_to_l_ 12AD            _OPTION_REGbits 0081                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070           __div_to_l_@exp1 002D           __div_to_l_@cntr 002C  
                 ??_scale 0049           __div_to_l_@quot 0028                   ??_setup 0078  
              __pbssBANK0 006D                __pbssBANK1 00CF                _change_POT 006D  
           __div_to_l_@f1 0020             __div_to_l_@f2 0024         __end_of__Umul8_16 1AC0  
              __pmaintext 0819                   ?___flge 0020                   ?___fleq 0020  
           initADC@adc_cs 0077                   ?___wmul 0073                __pintentry 0004  
                 ?_fround 0045    __end_of_Lcd_Set_Cursor 1A97              ??_TMR0_CARGA 0070  
       __end_of_adc_start 1BCF                 ?___xxtofl 0073                ??_Lcd_Init 0020  
              ??_Lcd_Port 0073        adc_start@channel_1 0075        adc_start@channel_2 0073  
              __stringtab 1000                 ?_read_ADC 0070            _Lcd_Write_Char 1A57  
                 _Lcd_Cmd 1A3D         __end_of__npowers_ 1078                _scale$1177 0053  
      __end_of_TMR0_CARGA 1A30                   ___fladd 1578                   ___awdiv 078C  
                 ___flneg 07F5                   ___awmod 1E3A                   ___flmul 093C  
                 ___flsub 1D3E                   ___fltol 10B8                   ___lldiv 1EF4  
                 ___llmod 1DE4           initADC@vref_min 0074                   ___lwdiv 1C15  
                 ___lwmod 1B15                   _decenas 007A           ?_Lcd_Set_Cursor 0077  
                 __ptext1 0022                   __ptext2 0C9D                   __ptext3 1E3A  
                 __ptext4 078C                   __ptext5 0807                   __ptext6 136B  
                 __ptext7 1B15                   __ptext8 1C15                   __ptext9 093C  
                 _initADC 1CA2               ?__div_to_l_ 0020                   _dpowers 1078  
                 _initOsc 1B51                   _isdigit 0807                ??___xxtofl 0020  
        ___awmod@dividend 0075                   _sprintf 0022                   clrloop0 10B1  
  __end_of_Lcd_Write_Char 1A71      end_of_initialization 001E                ??_read_ADC 0070  
         ___lldiv@divisor 0020           ___lldiv@counter 002C                 Lcd_Port@a 0073  
          __tdiv_to_l_@f1 0020            __tdiv_to_l_@f2 0024             ??__tdiv_to_l_ 0073  
               _PORTBbits 0006                 _TMR0_init 1D8E               ___fladd@grs 006C  
           ___xxtofl@sign 0024                 _VOTAJE_01 00D8                 _VOTAJE_02 00D4  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0020         Lcd_Write_String@i 0025  
             ___flmul@grs 0039                 _Lcd_Clear 1A30            __end_of___flge 2000  
          __end_of___fleq 1D3E            __end_of___wmul 1B15          _Lcd_Write_String 1BCF  
          __end_of_fround 1578                ?_TMR0_init 0070       start_initialization 000F  
     __end_of__tdiv_to_l_ 12AD               __end_of_isr 1CA2              _counter_tmr0 0078  
            _counter_time 00DC           ___llmod@divisor 0020           ___llmod@counter 0074  
              ?_Lcd_Clear 0070                  ??___flge 0073                  ??___fleq 0073  
                ??___wmul 0077                 __Umul8_16 1A97           Lcd_Write_Char@a 0076  
                ??_fround 0049             sprintf@tmpval 00BF                 ___fladd@a 005D  
               ___fladd@b 0059                fround@prec 0058                 ___flmul@a 002F  
               ___flmul@b 002B               __pbssCOMMON 0078                 ___flsub@a 00A0  
               ___flsub@b 00A4                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0                 _adc_start 1B8E                  ?_Lcd_Cmd 0070  
             sprintf@flag 00B7               sprintf@eexp 00BD               sprintf@fval 00C6  
             sprintf@prec 00C4          ___lwdiv@dividend 0023          ??_Lcd_Set_Cursor 0020  
                ?___fladd 0059                  ?___awdiv 0022                  ?___flneg 0073  
                ?___awmod 0073                  ?___flmul 002B                  ?___flsub 00A0  
                ?___fltol 0058                  ?___lldiv 0020                  ?___llmod 0020  
               __npowers_ 1044                ?__Umul8_16 0073                  ?___lwdiv 0021  
                ?___lwmod 0073                 __pstrings 1000               __tdiv_to_l_ 11F0  
             ??_TMR0_init 0073                  ?_initADC 0073              ??__div_to_l_ 0073  
                ?_initOsc 0070                  ?_isdigit 0070          ___lwdiv@quotient 0027  
                ?_sprintf 00A8                ?_adc_start 0073         interrupt_function 0004  
          ___wmul@product 0020                 clear_ram0 10B0                  _PIE1bits 008C  
                Lcd_Cmd@a 0076                  _PIR1bits 000C        __end_of__div_to_l_ 136B  
             ??_Lcd_Clear 0077                _ADCON0bits 001F               __stringbase 100F  
              _ADCON1bits 009F         ___wmul@multiplier 0073          ??_Lcd_Write_Char 0074  
                _Lcd_Init 1E95                  _Lcd_Port 0801  __end_of_Lcd_Write_String 1C15  
             ??__Umul8_16 0075               _fround$1175 0054               _fround$1176 0050  
      __end_of__stringtab 1010               _isdigit$989 0073          initADC@vref_plus 0073  
              sprintf@val 00B9                  ___xxtofl 1134           ___lwdiv@divisor 0021  
                _centenas 0079           ___lwdiv@counter 0026                  __ptext10 1A97  
                __ptext11 11F0                  __ptext20 07F5                  __ptext12 12AD  
                __ptext21 1F5C                  __ptext13 1134                  __ptext30 1A71  
                __ptext22 1CEE                  __ptext14 1AEA                  __ptext31 1E95  
                __ptext23 1AC0                  __ptext15 1DE4                  __ptext32 1A30  
                __ptext24 1B51                  __ptext16 1EF4                  __ptext33 1A3D  
                __ptext25 1CA2                  __ptext17 10B8                  __ptext34 0801  
                __ptext26 1D8E                  __ptext18 1D3E                  __ptext35 1C5B  
                __ptext27 1B8E                  __ptext19 1578                  __ptext36 1A26  
                __ptext28 1BCF                  __ptext37 1A2A                  __ptext29 1A57  
                __powers_ 1010               ??_adc_start 0074                  _read_ADC 1A26  
                _unidades 00DD                _INTCONbits 000B                  isdigit@c 0074  
                scale@scl 0057                  intlevel1 0000                 sprintf@ap 00B6  
        __tdiv_to_l_@exp1 002D          __tdiv_to_l_@cntr 002C                 sprintf@sp 00C3  
        __tdiv_to_l_@quot 0028          ___lwmod@dividend 0075          ___lldiv@dividend 0024  
               stringcode 100A                _OSCCONbits 008F              ?__tdiv_to_l_ 0020  
  __Umul8_16@multiplicand 0073                _TMR0_CARGA 1A2A                  sprintf@c 00CA  
                sprintf@f 00A8          ___lldiv@quotient 0028           ___lwmod@divisor 0073  
         ___lwmod@counter 0020                  stringdir 100A                  stringtab 1000  
           ___fladd@signs 0069              ___fladd@aexp 006A              ___fladd@bexp 006B  
             _VOLTAJE_L02 00CF      __Umul8_16@multiplier 0024                _VOTAJE_L01 00E0  
       __Umul8_16@product 0020  
